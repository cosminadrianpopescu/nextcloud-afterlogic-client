{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///node_modules/@ionic/core/dist/esm lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","webpack:///src/html/attachments.html","webpack:///src/html/avatar.html","webpack:///src/html/compose.html","webpack:///src/html/editor.html","webpack:///src/html/folders-list.html","webpack:///src/html/home.html","webpack:///src/html/loading.html","webpack:///src/html/main.html","webpack:///src/html/message.html","webpack:///src/html/messages-list.html","webpack:///src/html/playground.html","webpack:///src/html/settings.html","webpack:///src/assets/scss/attachments.scss","webpack:///src/assets/scss/avatar.scss","webpack:///src/assets/scss/compose.scss","webpack:///src/assets/scss/editor.scss","webpack:///src/assets/scss/folders-list.scss","webpack:///src/assets/scss/home.scss","webpack:///src/assets/scss/main.scss","webpack:///src/assets/scss/message.scss","webpack:///src/assets/scss/messages-list.scss","webpack:///src/assets/scss/settings.scss","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///src/ts/base.ts","webpack:///src/ts/components/attachments.ts","webpack:///src/ts/components/avatar.ts","webpack:///src/ts/components/compose.ts","webpack:///src/ts/components/editor.ts","webpack:///src/ts/components/folders-list.ts","webpack:///src/ts/components/loading.ts","webpack:///src/ts/components/message.ts","webpack:///src/ts/components/messages-list.ts","webpack:///src/ts/decorators.ts","webpack:///src/ts/models.ts","webpack:///src/ts/modules/main.ts","webpack:///src/ts/pages/home.ts","webpack:///src/ts/pages/main.ts","webpack:///src/ts/pages/playground.ts","webpack:///src/ts/pages/settings.ts","webpack:///src/ts/pipes.ts","webpack:///src/ts/routing.ts","webpack:///src/ts/services/api.ts","webpack:///src/ts/services/background.ts","webpack:///src/ts/services/contacts.ts","webpack:///src/ts/services/file.ts","webpack:///src/ts/services/filepicker.ts","webpack:///src/ts/services/layout.ts","webpack:///src/ts/services/logging.ts","webpack:///src/ts/services/mails.ts","webpack:///src/ts/services/navigation.ts","webpack:///src/ts/services/nextcloud.ts","webpack:///src/ts/services/route-reuse.ts","webpack:///src/ts/services/settings.ts","webpack:///src/ts/services/store.ts","webpack:///src/ts/services/utils.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","map","webpackAsyncContext","__webpack_require__","o","ids","all","slice","webpackAsyncContextKeys","Object","environment","production","logLevel","DEBUG","logStack","bootstrapModule","err","console","log","BlockableComponent","el","prototype","block","target","getBlockableElement","appendChild","mask","nativeElement","style","position","document","body","autoZIndex","zIndex","String","baseZIndex","Statics","BaseClassWithDecorations","protoName","component","callback","name","values","get","Map","Array","isArray","forEach","bind","__resolveDecorations__","__proto__","constructor","obj","injector","replace","c","r","Math","random","v","toString","BaseClass","_logger","logger","__resolveInjectors__","BaseComponent","__cycles__","__subscriptions__","__loadingComponent__","_isValid","set","push","cycle","args","cycles","concat","reverse","method","_runCycle","s","unsubscribe","changes","hideLoading","error","alert","message","ngOnDestroy","ngOnInit","obs","subscribe","url","_router","navigateByUrl","__factoryResolver__","resolveComponentFactory","create","querySelectorAll","length","instance","uuid","UUID","initMe","__appRef__","attachView","hostView","node","rootNodes","detachView","removeChild","title","severity","_toast","add","summary","detail","key","match","BaseTestUnit","_providers","initialized","resetTestingModule","configureTestingModule","providers","emit","Attachments","attachments","_attDownloading","_isCloud","_nc","isNextcloud","a","where","fileName","Uid","FileName","_api","downloadAttachment","account","result","att","_doDownload","Documents","uri","_intent","startActivity","action","ACTION_VIEW","type","MimeType","idx","findIndex","_a","Actions","view","splice","download","_settings","getServer","server","pickFolder","folder","_mails","accountById","AccountID","getAttachmentContent","content","path","upload","uPath","selector","template","Avatar","Compose","notify","_showCc","_contacts","_convertor","_combinedView","_attaching","_cloudAttaching","_incloud","_accounts$","accounts$","pipe","accounts","_account","setTimeout","filter","connect","currentAccount$","undefined","_setModel","_start","_waitEditorReady","getMessageType","_type","conv","composeType","currentEmail","Email","_model","convert","Cc","indexOf","Bcc","to","To","isDraftReply","getOriginalDraftReply","orig","InReplyTo","MessageId","reloadAttachments","_contactsService","contacts","_editor","_viewInit","toPromise","_saveSubscription","modelChange","_save","ev","toLowerCase","query","display","validate","_destroy","showLoading","model","sendMessage","saveMessage","DraftUid","NewUid","promises","apply","Attachment","_fileService","_file","files","p","i","uploadAttachment","_doAttach","pickFile","file","contents","f","File","uploadData","suggestions","focus","selectItem","Editor","_html","innerHTML","FoldersList","_loading","_selected","folderByType","Inbox","inbox","folderChanged$","Folders$","_init","encapsulation","None","Loading","_cd","detectChanges","Message","_quotedText","_isDraft","_detailsHidden","_hasImages","_server","_body","_message","Html","Plain","querySelector","from","href","email","onclick","_emailClick","Collection","_accountId","user","userByEmail","users","CID","img","src","onerror","fetch","headers","Authorization","token","blob","d","window","URL","createObjectURL","contact","downloadUrl","DownloadAsEmlUrl","IsFlagged","flag","Folder","_originalMessage","n","setAttribute","getAttribute","m","Type","Drafts","getMessageBody","_appendBody","IsSeen","markRead","DEFAULT","MessagesList","fixSearchForm","selectionChanged","_pageSize","_totalRecords","_search","_messages","_combinedMessages","_style","_oldestMessage","_subscriptions","ready$","softRefresh","getPageSize","folderById$","_folder","_reset","_initSubscriptions","previousValue","foldersDiff","currentValue","_initMe","messages","_table","selection","msgChanged","messagesDeleted$","messagesMoved$","refresh$","_messagesRemoved","_loadMessages","first","_background","configure","_checkMailsAuto","emptySearch","Date","_waitNewMails","getMessages","Id","msgs","TimeStampInUTC","_fetchMailsAuto","initialType","_fetch","showNotifications","_setOldestMessage","auto","simple","messageInComposedFolder","uids","x","sort","b","reset","lastSearchResults","refreshed$","keyCode","row","TEST_CASES","TEST_CASES_ONLY","METADATA","__decorate","arg","ctor","property","prop","NgInject","NgCycle","deserialize","deserializers","add_to_testcases","which","NgTest","only","COMBINED_ACCOUNT_ID","LogLevel","FolderType","ModelFactory","json","k","find","value","convertor","_primitive","j","_create","promise","data","UserSetting","ServerSetting","HttpResponse","Server","Authentication","Contact","Contacts","Messages","Action","ActionConvertor","SearchConvertor","_add","subject","text","since","till","_date","FoldersConvertor","possibleParents","parts","split","Count","Unread","Name","SubFolders","parentName","parent","arr","JSON","parse","levels","tree","level","items","_addNewFolder","reduce","acc","MessageBody","Account","TypesSet","FoldersInfoResult","SearchModel","MessageNotify","DisplayContact","MessageCompose","DraftInfo","ContactConvertor","DisplayName","ReplyToBodyConvertor","msg","From","ForwardBodyConvertor","join","cc","_collection","Subject","MessageComposeConvertor","_conv","Body","ReplyTo","_convertCollection","References","FileResult","UploadResult","Identity","MessageSave","FetcherID","Importance","SendReadingConfirmation","Sensitivity","MessageSaveConvertor","_mapCollection","Text","IsHtml","TempName","SaveMessageResponse","ComposedResult","FormDataSerialized","LabelValue","AppSetting","AppSettings","Main","declarations","entryComponents","imports","forRoot","preloadingStrategy","useHash","provide","useClass","bootstrap","Home","_route","_isMobile","_row","_selection","_spamFolder","_userMenu","_compose","_composer","_composeType","_toolbarVisible","_composeTitle","_mobileViewType","_showSettings","_refreshing","_layout","isMobile","sessionExpired$","u","navigate","_folderNotify","buildUserMenu","_onMenu","paramMap","has","param","_newMessage","_list","rows","_zone","run","_messageNotify","isSpamFolder","_action","moveOrDeleteMessages","markSpam","setCurrentAccount","item","_changeAccount","_composeMessage","_composeTo","_refresh","_hideCompose","_mobile","_ready","_initializeApp","_platform","ready","addEventListener","stopPropagation","preventDefault","_splash","hide","is","onIntent","Playground","_contact","Settings","_validate","_urlFixed","appSettings","needAuthenticating","stringify","setServer","_waitApiReady","login","_store","getCurrentAccount","saveSettings","location","reload","FoldersTree","folders","label","children","transform","selectable","FolderLabel","_label","folderUpdated$","AttachmentsList","extractCollection","MessageDate","d1","d2","getFullYear","getMonth","getDate","_sameDay","d3","getTime","MessageFrom","MessageFromTxt","MessageFromTxtFull","toSpan","AsHtml","html","_sanitizer","bypassSecurityTrustHtml","ContactsListTxt","collection","ContactsArray","AvatarColor","avatarColor","AccountToContact","FriendlyName","AvatarText","substr","toUpperCase","HumanFileSize","size","floor","pow","toFixed","FileIconPipe","CurrentEmail","BorderRight","_service","borderRight","IsCombinedAccount","routes","withToolbar","Filesystem","Api","messagesUpdated$","_url","_accounts","serverSet$","next","parameters","_checkReady","encodeURIComponent","Module","Method","Parameters","FormData","append","_http","sendRequest","responseType","response","ErrorCode","ErrorMessage","Result","_passRequest","Login","Password","pass","SignMe","AuthToken","_login","results","_userByEmail","_handleUserExpired","_request","list","foldersFlatList","FoldersOrder","_setFoldersTypes","l","Sent","Spam","Trash","Folders","getFoldersInfo","_f","Counts","offset","pageSize","search","filters","withThreads","lastUid","params","Offset","Limit","Search","Filters","UseThreading","_processMessages","_waitFoldersLoaded","MessageResultCount","Uids","MessageCount","MessageUnseenCount","FolderName","_getMessages","_combinedFoldersResult","isCombinedFolder","folderById","Set","accountId","operation","_getPayloadInfos","SetAction","_doFlag","_executeCombinedAccount","factor","_doDeleteMessages","toFolder","ToFolder","_doMoveMessages","fileData","arrayBuffer","buf","Blob","createElement","click","reject","reader","FileReader","onloadend","readAsBinaryString","writeFile","btoa","directory","setFolderTypes","_getFolders","draft","sent","Hash","trash","deleteMessages","moveMessages","spam","MAX_BACKGROUND_RETRIES","MAX_INTERVAL","Background","_errors","_checkInterval","_callback","getCheckoutEmailInterval","_startMailsCheck","_backgroundTimer","onTimerEvent","_backgroundRun","pause","resume","_stopBackgroundTimer","_startBackgroundTimer","start","_backgroundSuccess","_backgroundFailure","timerInterval","startOnBoot","stopOnTerminate","stop","_run","CONTACTS_KEY","load","_getCollection","what","_c","save","FileService","form","boundary","fileKey","read","top","FilePickerType","FilePicker","multiSelect","mimeTypeFilter","modal","directoriesAllowed","mimeTypeFiler","res","rej","OC","dialogs","filepicker","allowDirectoryChooser","getClient","getFileContents","getFileInfo","ext","p2","parseInt","_getPath","_path","putFileContents","getBaseUrl","FilePickerBuilder","Choose","ms","allow","getFilePickerBuilder","Layout","width","Logger","ERROR","includeStack","logged","stack","trace","_log","INFO","LoggingInstance","LocalNotifications","Mails","newEmails$","_subscription","addListener","_messageClicked","notification","extra","getPending","pending","notifications","cancel","subFolders","_retrieveFolderById","addresses","Notification","permission","requestPermission","perm","_getFrom","close","granted","schedule","lastMsg","ts","_doNotify","getAccounts","Navigation","routeData$","routeParams$","events","root","firstChild","snapshot","PATH_KEY","Nextcloud","lastPath","picker","pick","_processLastPath","basePath","bin","DefaultRouteReuseStrategy","route","detachedTree","future","curr","SERVER_KEY","PAGE_SIZE_KEY","MESSAGE_TYPE_KEY","CHECK_INTERVAL","EMAIL_INTERVAL_OPTIONS","MESSAGE_TYPE_OPTIONS","PAGE_SIZE","servers","options","settings","setCheckoutEmailInterval","checkEmailInterval","setMessageType","setPageSize","current","_toAppSetting","Storage","PREFIX","CURRENT_ACCOUNT","Store","defValue","date","Utils","hash","charCodeAt","h","predicate","_searchFolder","icon","command","f1","f2"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./ion-action-sheet-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-action-sheet-ios.entry.js\",\n\t\t\"common\",\n\t\t0\n\t],\n\t\"./ion-action-sheet-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-action-sheet-md.entry.js\",\n\t\t\"common\",\n\t\t1\n\t],\n\t\"./ion-alert-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-alert-ios.entry.js\",\n\t\t\"common\",\n\t\t2\n\t],\n\t\"./ion-alert-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-alert-md.entry.js\",\n\t\t\"common\",\n\t\t3\n\t],\n\t\"./ion-app_8-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-app_8-ios.entry.js\",\n\t\t\"common\",\n\t\t4\n\t],\n\t\"./ion-app_8-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-app_8-md.entry.js\",\n\t\t\"common\",\n\t\t5\n\t],\n\t\"./ion-avatar_3-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-avatar_3-ios.entry.js\",\n\t\t\"common\",\n\t\t6\n\t],\n\t\"./ion-avatar_3-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-avatar_3-md.entry.js\",\n\t\t\"common\",\n\t\t7\n\t],\n\t\"./ion-back-button-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-back-button-ios.entry.js\",\n\t\t\"common\",\n\t\t8\n\t],\n\t\"./ion-back-button-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-back-button-md.entry.js\",\n\t\t\"common\",\n\t\t9\n\t],\n\t\"./ion-backdrop-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-backdrop-ios.entry.js\",\n\t\t10\n\t],\n\t\"./ion-backdrop-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-backdrop-md.entry.js\",\n\t\t11\n\t],\n\t\"./ion-button_2-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-button_2-ios.entry.js\",\n\t\t\"common\",\n\t\t12\n\t],\n\t\"./ion-button_2-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-button_2-md.entry.js\",\n\t\t\"common\",\n\t\t13\n\t],\n\t\"./ion-card_5-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-card_5-ios.entry.js\",\n\t\t\"common\",\n\t\t14\n\t],\n\t\"./ion-card_5-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-card_5-md.entry.js\",\n\t\t\"common\",\n\t\t15\n\t],\n\t\"./ion-checkbox-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-checkbox-ios.entry.js\",\n\t\t\"common\",\n\t\t16\n\t],\n\t\"./ion-checkbox-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-checkbox-md.entry.js\",\n\t\t\"common\",\n\t\t17\n\t],\n\t\"./ion-chip-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-chip-ios.entry.js\",\n\t\t\"common\",\n\t\t18\n\t],\n\t\"./ion-chip-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-chip-md.entry.js\",\n\t\t\"common\",\n\t\t19\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-col_3.entry.js\",\n\t\t20\n\t],\n\t\"./ion-datetime_3-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-datetime_3-ios.entry.js\",\n\t\t\"common\",\n\t\t21\n\t],\n\t\"./ion-datetime_3-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-datetime_3-md.entry.js\",\n\t\t\"common\",\n\t\t22\n\t],\n\t\"./ion-fab_3-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-fab_3-ios.entry.js\",\n\t\t\"common\",\n\t\t23\n\t],\n\t\"./ion-fab_3-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-fab_3-md.entry.js\",\n\t\t\"common\",\n\t\t24\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-img.entry.js\",\n\t\t25\n\t],\n\t\"./ion-infinite-scroll_2-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-infinite-scroll_2-ios.entry.js\",\n\t\t26\n\t],\n\t\"./ion-infinite-scroll_2-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-infinite-scroll_2-md.entry.js\",\n\t\t27\n\t],\n\t\"./ion-input-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-input-ios.entry.js\",\n\t\t\"common\",\n\t\t28\n\t],\n\t\"./ion-input-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-input-md.entry.js\",\n\t\t\"common\",\n\t\t29\n\t],\n\t\"./ion-item-option_3-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-item-option_3-ios.entry.js\",\n\t\t\"common\",\n\t\t30\n\t],\n\t\"./ion-item-option_3-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-item-option_3-md.entry.js\",\n\t\t\"common\",\n\t\t31\n\t],\n\t\"./ion-item_8-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-item_8-ios.entry.js\",\n\t\t\"common\",\n\t\t32\n\t],\n\t\"./ion-item_8-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-item_8-md.entry.js\",\n\t\t\"common\",\n\t\t33\n\t],\n\t\"./ion-loading-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-loading-ios.entry.js\",\n\t\t\"common\",\n\t\t34\n\t],\n\t\"./ion-loading-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-loading-md.entry.js\",\n\t\t\"common\",\n\t\t35\n\t],\n\t\"./ion-menu_3-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-menu_3-ios.entry.js\",\n\t\t\"common\",\n\t\t36\n\t],\n\t\"./ion-menu_3-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-menu_3-md.entry.js\",\n\t\t\"common\",\n\t\t37\n\t],\n\t\"./ion-modal-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-modal-ios.entry.js\",\n\t\t\"common\",\n\t\t38\n\t],\n\t\"./ion-modal-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-modal-md.entry.js\",\n\t\t\"common\",\n\t\t39\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-nav_2.entry.js\",\n\t\t\"common\",\n\t\t40\n\t],\n\t\"./ion-popover-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-popover-ios.entry.js\",\n\t\t\"common\",\n\t\t41\n\t],\n\t\"./ion-popover-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-popover-md.entry.js\",\n\t\t\"common\",\n\t\t42\n\t],\n\t\"./ion-progress-bar-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-progress-bar-ios.entry.js\",\n\t\t\"common\",\n\t\t43\n\t],\n\t\"./ion-progress-bar-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-progress-bar-md.entry.js\",\n\t\t\"common\",\n\t\t44\n\t],\n\t\"./ion-radio_2-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-radio_2-ios.entry.js\",\n\t\t\"common\",\n\t\t45\n\t],\n\t\"./ion-radio_2-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-radio_2-md.entry.js\",\n\t\t\"common\",\n\t\t46\n\t],\n\t\"./ion-range-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-range-ios.entry.js\",\n\t\t\"common\",\n\t\t47\n\t],\n\t\"./ion-range-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-range-md.entry.js\",\n\t\t\"common\",\n\t\t48\n\t],\n\t\"./ion-refresher_2-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-refresher_2-ios.entry.js\",\n\t\t\"common\",\n\t\t49\n\t],\n\t\"./ion-refresher_2-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-refresher_2-md.entry.js\",\n\t\t\"common\",\n\t\t50\n\t],\n\t\"./ion-reorder_2-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-reorder_2-ios.entry.js\",\n\t\t\"common\",\n\t\t51\n\t],\n\t\"./ion-reorder_2-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-reorder_2-md.entry.js\",\n\t\t\"common\",\n\t\t52\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-ripple-effect.entry.js\",\n\t\t53\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-route_4.entry.js\",\n\t\t\"common\",\n\t\t54\n\t],\n\t\"./ion-searchbar-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-searchbar-ios.entry.js\",\n\t\t\"common\",\n\t\t55\n\t],\n\t\"./ion-searchbar-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-searchbar-md.entry.js\",\n\t\t\"common\",\n\t\t56\n\t],\n\t\"./ion-segment_2-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-segment_2-ios.entry.js\",\n\t\t\"common\",\n\t\t57\n\t],\n\t\"./ion-segment_2-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-segment_2-md.entry.js\",\n\t\t\"common\",\n\t\t58\n\t],\n\t\"./ion-select_3-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-select_3-ios.entry.js\",\n\t\t\"common\",\n\t\t59\n\t],\n\t\"./ion-select_3-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-select_3-md.entry.js\",\n\t\t\"common\",\n\t\t60\n\t],\n\t\"./ion-slide_2-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-slide_2-ios.entry.js\",\n\t\t61\n\t],\n\t\"./ion-slide_2-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-slide_2-md.entry.js\",\n\t\t62\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-spinner.entry.js\",\n\t\t\"common\",\n\t\t63\n\t],\n\t\"./ion-split-pane-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-split-pane-ios.entry.js\",\n\t\t64\n\t],\n\t\"./ion-split-pane-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-split-pane-md.entry.js\",\n\t\t65\n\t],\n\t\"./ion-tab-bar_2-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-tab-bar_2-ios.entry.js\",\n\t\t\"common\",\n\t\t66\n\t],\n\t\"./ion-tab-bar_2-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-tab-bar_2-md.entry.js\",\n\t\t\"common\",\n\t\t67\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-tab_2.entry.js\",\n\t\t\"common\",\n\t\t68\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-text.entry.js\",\n\t\t\"common\",\n\t\t69\n\t],\n\t\"./ion-textarea-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-textarea-ios.entry.js\",\n\t\t\"common\",\n\t\t70\n\t],\n\t\"./ion-textarea-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-textarea-md.entry.js\",\n\t\t\"common\",\n\t\t71\n\t],\n\t\"./ion-toast-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-toast-ios.entry.js\",\n\t\t\"common\",\n\t\t72\n\t],\n\t\"./ion-toast-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-toast-md.entry.js\",\n\t\t\"common\",\n\t\t73\n\t],\n\t\"./ion-toggle-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-toggle-ios.entry.js\",\n\t\t\"common\",\n\t\t74\n\t],\n\t\"./ion-toggle-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-toggle-md.entry.js\",\n\t\t\"common\",\n\t\t75\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-virtual-scroll.entry.js\",\n\t\t76\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./node_modules/@ionic/core/dist/esm lazy recursive ^\\\\.\\\\/.*\\\\.entry\\\\.js$ include: \\\\.entry\\\\.js$ exclude: \\\\.system\\\\.entry\\\\.js$\";\nmodule.exports = webpackAsyncContext;","export default \"<div [hidden]=\\\"attachments.length == 0\\\">\\n  <p-table [value]=\\\"attachments\\\" [loading]=\\\"view._attDownloading\\\">\\n    <ng-template pTemplate=\\\"header\\\">\\n      <tr>\\n        <th style=\\\"width: 3em\\\"></th>\\n        <th style=\\\"text-align: left\\\">\\n          Attachment\\n        </th>\\n        <th style=\\\"width: 3em\\\"></th>\\n        <th style=\\\"width: 3em\\\" *ngIf=\\\"view._isCloud && message\\\"></th>\\n      </tr>\\n    </ng-template>\\n    <ng-template pTemplate=\\\"body\\\" let-row>\\n      <tr>\\n        <td><i class=\\\"fa fa-{{row | fileIcon}}\\\"></i></td>\\n        <td (click)=\\\"view._viewAttachment(row)\\\">\\n          <div>{{row.FileName}}</div>\\n          <div>{{(row.EstimatedSize || row.Size) | humanFileSize}}</div>\\n        </td>\\n        <td>\\n          <i *ngIf=\\\"message\\\" (click)=\\\"view._downloadAttachment(row)\\\" class=\\\"fa fa-download\\\"></i>\\n          <i *ngIf=\\\"!message\\\" (click)=\\\"view._removeAttachment(row)\\\" class=\\\"fa fa-trash\\\"></i>\\n        </td>\\n        <td *ngIf=\\\"view._isCloud && message\\\">\\n          <i (click)=\\\"view._uploadToCloud(row)\\\" class=\\\"fa fa-cloud-download\\\"></i>\\n        </td>\\n      </tr>\\n    </ng-template>\\n  </p-table>\\n</div>\\n\";","export default \"<div [style.background-color]=\\\"contact | avatarColor\\\" class=\\\"color-circle\\\">\\n  <span class=\\\"text\\\">{{contact | avatarText}}</span>\\n</div>\\n\\n\";","export default \"<div class=\\\"form\\\" *ngIf=\\\"view._model\\\">\\n  <div class=\\\"p-grid ui-fluid\\\">\\n    <div class=\\\"p-col-6\\\"></div>\\n    <div class=\\\"p-col-6 options\\\">\\n      <button (click)=\\\"view._save(false)\\\" style=\\\"width: 73px\\\" pButton icon=\\\"fa fa-floppy-o\\\" label=\\\"Save\\\"></button>\\n      <button (click)=\\\"view._send()\\\" style=\\\"width: 73px; margin-left: 10px;\\\" pButton icon=\\\"fa fa-paper-plane\\\" label=\\\"Send\\\"></button>\\n      <button (click)=\\\"view._attach()\\\" style=\\\"width: 87px; margin-left: 10px\\\" pButton icon=\\\"{{view._attaching ? 'fa fa-spinner fa-spin' : 'fa fa-paperclip'}}\\\" label=\\\"Attach\\\"></button>\\n      <button *ngIf=\\\"view._incloud\\\" (click)=\\\"view._cloudAttach()\\\" style=\\\"width: 87px; margin-left: 10px\\\" pButton icon=\\\"{{view._cloudAttaching ? 'fa fa-spinner fa-spin' : 'fa fa-cloud'}}\\\" label=\\\"Attach\\\"></button>\\n      <input #file type=\\\"file\\\" multiple=\\\"true\\\" style=\\\"display: none\\\"/>\\n    </div>\\n    <div class=\\\"p-col-12\\\" *ngIf=\\\"view._combinedView\\\">\\n      <span class=\\\"ui-inputgroup ui-float-label\\\">\\n        <p-dropdown id=\\\"from-dropdown\\\"\\n          [options]=\\\"view._accounts$ | async\\\"\\n          [(ngModel)]=\\\"view._account\\\"\\n          [disabled]=\\\"view._model?.Attachments.length > 0\\\"\\n          optionLabel=\\\"Email\\\"></p-dropdown>\\n        <label for=\\\"from-dropdown\\\">From</label>\\n      </span>\\n    </div>\\n    <ng-container [ngTemplateOutlet]=\\\"field\\\" [ngTemplateOutletContext]=\\\"{$implicit: {field: 'To'}}\\\"></ng-container>\\n    <ng-container [ngTemplateOutlet]=\\\"field\\\" [ngTemplateOutletContext]=\\\"{$implicit: {field: 'Cc'}}\\\"></ng-container>\\n    <ng-container [ngTemplateOutlet]=\\\"field\\\" [ngTemplateOutletContext]=\\\"{$implicit: {field: 'Bcc'}}\\\"></ng-container>\\n    <div class=\\\"p-col-12\\\">\\n      <span class=\\\"ui-inputgroup ui-float-label\\\">\\n        <input type=\\\"text\\\" pInputText id=\\\"subject-id\\\" [(ngModel)]=\\\"view._model.Subject\\\"/>\\n        <label for=\\\"subject-id\\\">Subject</label>\\n      </span>\\n    </div>\\n    <div class=\\\"p-col-12\\\">\\n      <al-editor [(model)]=\\\"view._model.Body\\\" #editor *ngIf=\\\"view._type == 'HTML'\\\"></al-editor>\\n      <textarea pInputTextarea [(ngModel)]=\\\"view._model.Body\\\" *ngIf=\\\"view._type != 'HTML'\\\"></textarea>\\n    </div>\\n    <div class=\\\"p-col-12\\\">\\n      <al-attachments [account]=\\\"view._account\\\" [attachments]=\\\"view._model.Attachments\\\" autoResize=\\\"autoResize\\\"></al-attachments>\\n    </div>\\n  </div>\\n\\n  <ng-template #field let-context>\\n    <div class=\\\"p-col-12\\\" [hidden]=\\\"!view._showCc && context.field != 'To'\\\">\\n      <span class=\\\"ui-inputgroup ui-float-label\\\">\\n        <p-autoComplete\\n          #autocomplete\\n          [(ngModel)]=\\\"view._model[context.field]\\\"\\n          [suggestions]=\\\"view._contacts\\\"\\n          [autoHighlight]=\\\"true\\\"\\n          (onBlur)=\\\"view._blur(autocomplete)\\\"\\n          (onFocus)=\\\"view._focus(autocomplete)\\\"\\n          delay=\\\"0\\\"\\n          [id]=\\\"context.field\\\"\\n          [multiple]=\\\"true\\\"\\n          field=\\\"display\\\"\\n          (completeMethod)=\\\"view._filterContact($event)\\\"\\n          >\\n          <ng-template pTemplate=\\\"item\\\" let-item>\\n            <span *ngIf=\\\"item.DisplayName\\\">{{item.DisplayName}} ({{item.Email}})</span>\\n            <span *ngIf=\\\"!item.DisplayName\\\">{{item.Email}}</span>\\n          </ng-template>\\n        </p-autoComplete>\\n        <button (click)=\\\"view._showCc = true\\\" pButton icon=\\\"fa fa-angle-down\\\" *ngIf=\\\"!view._showCc && context.field == 'To'\\\"></button>\\n        <label [for]=\\\"context.field\\\">{{context.field}}</label>\\n      </span>\\n    </div>\\n  </ng-template>\\n</div>\\n\";","export default \"<div class=\\\"editor\\\" #editor contenteditable=\\\"true\\\" [innerHTML]=\\\"view._html | asHtml\\\" (keyup)=\\\"view._keyup()\\\"></div>\\n\";","export default \"<div style=\\\"position: relative\\\">\\n  <p-blockUI [target]=\\\"folders\\\" [blocked]=\\\"view._loading\\\"></p-blockUI>\\n  <div #folders>\\n    <p-tree selectionMode=\\\"single\\\" (onNodeSelect)=\\\"view._select($event.node?.data)\\\" [value]=\\\"view._account?.Folders$ | async | foldersTree\\\">\\n      <ng-template let-node pTemplate=\\\"default\\\">\\n        <span [ngClass]=\\\"{selected: view._selected == node.data}\\\">{{node.data | folderLabel | async}}</span>\\n      </ng-template>\\n    </p-tree>\\n  </div>\\n</div>\\n\";","export default \"<ng-container [ngTemplateOutlet]=\\\"view._isMobile ? mobile : desktop\\\"></ng-container>\\n\\n<ng-template #desktop>\\n  <p-table [value]=\\\"view._row\\\" [resizableColumns]=\\\"true\\\">\\n    <ng-template pTemplate=\\\"header\\\">\\n      <tr>\\n        <th class=\\\"folders-col\\\">\\n          <button (click)=\\\"view._newMessage('new')\\\" pButton icon=\\\"fa fa-envelope-o\\\" label=\\\"New message\\\"></button>\\n        </th>\\n        <th class=\\\"mails-col\\\">\\n          <div>\\n            <div class=\\\"left\\\">\\n              <ng-container [ngTemplateOutlet]=\\\"toolbarButtons\\\" [ngTemplateOutletContext]=\\\"{$implicit: actionButton}\\\"></ng-container>\\n            </div>\\n            <div class=\\\"right\\\">\\n              <button (click)=\\\"view._refresh()\\\" pButton icon=\\\"{{view._refreshing ? 'fa fa-spinner fa-spin' : 'fa fa-refresh'}}\\\"></button>\\n            </div>\\n          </div>\\n        </th>\\n        <th class=\\\"mail-col\\\">\\n          <div class=\\\"right\\\">\\n            {{view._account | currentEmail}}\\n            <p-menu #menu [popup]=\\\"true\\\" [model]=\\\"view._userMenu\\\" styleClass=\\\"menuWidth\\\"></p-menu>\\n            <button type=\\\"button\\\" pButton icon=\\\"fa fa-user\\\" (click)=\\\"menu.toggle($event)\\\"></button>\\n          </div>\\n        </th>\\n      </tr>\\n    </ng-template>\\n    <ng-template pTemplate=\\\"body\\\">\\n      <tr class=\\\"top\\\">\\n        <td>\\n          <div class=\\\"wrapper\\\">\\n            <al-folders-list [account]=\\\"view._account\\\"></al-folders-list>\\n          </div>\\n        </td>\\n        <td>\\n          <div class=\\\"messages-wrapper\\\">\\n            <al-messages-list\\n              #messagesList\\n              (selectionChanged)=\\\"view._selectionChanged($event)\\\"\\n              (notify)=\\\"view._messageNotify($event)\\\"\\n              [account]=\\\"view._account\\\"\\n              [folder]=\\\"view._folder\\\"></al-messages-list>\\n          </div>\\n        </td>\\n        <td>\\n          <div class=\\\"wrapper\\\">\\n            <al-message (notify)=\\\"view._msgBodyNotify($event)\\\" [message]=\\\"view._message\\\"></al-message>\\n          </div>\\n        </td>\\n      </tr>\\n    </ng-template>\\n  </p-table>\\n  <p-dialog\\n    (onHide)=\\\"view._hideCompose(null)\\\"\\n    [autoZIndex]=\\\"false\\\"\\n    [header]=\\\"view._composeTitle\\\" [(visible)]=\\\"view._compose\\\"\\n    [closeOnEscape]=\\\"true\\\" [style]=\\\"{width: '600px'}\\\">\\n    <al-compose\\n      (notify)=\\\"view._hideCompose($event)\\\"\\n      *ngIf=\\\"view._composer\\\"\\n      [composeType]=\\\"view._composeType\\\"\\n      [message]=\\\"view._composeMessage\\\"\\n      [to]=\\\"view._composeTo\\\"></al-compose>\\n  </p-dialog>\\n  <p-dialog header=\\\"Settings\\\" [resizable]=\\\"true\\\" [closeOnEscape]=\\\"true\\\" [style]=\\\"{width: '600px'}\\\" [(visible)]=\\\"view._showSettings\\\">\\n    <al-settings></al-settings>\\n  </p-dialog>\\n</ng-template>\\n<ng-template #mobile>\\n  <p-sidebar [style]=\\\"{width: '400px'}\\\" [(visible)]=\\\"view._toolbarVisible\\\" [baseZIndex]=\\\"10000\\\">\\n    <div class=\\\"p-grid ui-fluid\\\">\\n      <div class=\\\"flex p-col-12\\\" *ngFor=\\\"let account of (view._accounts$ | async)\\\">\\n        <div class=\\\"avatar\\\">\\n          <al-avatar [contact]=\\\"account | accountToContact\\\"></al-avatar>\\n        </div>\\n        <div class=\\\"account\\\" [ngClass]=\\\"{selected: account.Email == view._account?.Email}\\\" (click)=\\\"view._changeAccount(account.Email)\\\">\\n          <h3 class=\\\"name\\\" *ngIf=\\\"account.FriendlyName\\\">{{account.FriendlyName}}</h3>\\n          <h4 class=\\\"email\\\" *ngIf=\\\"!(account | isCombinedAccount)\\\">{{account.Email}}</h4>\\n          <h4 class=\\\"email\\\" *ngIf=\\\"account | isCombinedAccount\\\">{{(view._accounts$ | async | count) - 1}} accounts</h4>\\n        </div>\\n      </div>\\n      <div class=\\\"p-col-12\\\">\\n        <al-folders-list [account]=\\\"view._account\\\"></al-folders-list>\\n      </div>\\n      <div class=\\\"p-col-12\\\" (click)=\\\"view._settingsClick()\\\">\\n        <i class=\\\"fa fa-cog\\\"></i> Settings\\n      </div>\\n    </div>\\n  </p-sidebar>\\n\\n  <p-toolbar>\\n    <div class=\\\"ui-toolbar-group-left\\\">\\n      <i (click)=\\\"view._toolbarVisible = true\\\"\\n        [hidden]=\\\"view._mobileViewType != 'list'\\\"\\n        class=\\\"fa fa-bars\\\"\\n        style=\\\"vertical-align: middle\\\"></i>\\n      <i (click)=\\\"view._toolbarBack()\\\" \\n        [hidden]=\\\"view._mobileViewType == 'list'\\\"\\n        class=\\\"fa fa-arrow-left\\\"\\n        style=\\\"vertical-align: middle\\\"></i>\\n      <i (click)=\\\"view._newMessage('new')\\\" \\n        [hidden]=\\\"view._mobileViewType != 'list'\\\"\\n        class=\\\"fa fa-plus\\\"\\n        style=\\\"vertical-align: middle\\\"></i>\\n      <ng-container [ngTemplateOutlet]=\\\"toolbarButtons\\\" [ngTemplateOutletContext]=\\\"{$implicit: actionIcon}\\\"></ng-container>\\n      <i (click)=\\\"view._refresh()\\\" \\n        [hidden]=\\\"view._mobileViewType != 'list'\\\"\\n        class=\\\"{{view._refreshing ? 'fa fa-spinner fa-spin' : 'fa fa-refresh'}}\\\"\\n        style=\\\"vertical-align: middle\\\"></i>\\n    </div>\\n  </p-toolbar>\\n\\n  <div class=\\\"p-grid ui-fluid mobile-messages-list\\\">\\n    <al-messages-list\\n      class=\\\"mobile\\\"\\n      [hidden]=\\\"view._mobileViewType != 'list'\\\"\\n      #messagesList\\n      (selectionChanged)=\\\"view._selectionChanged($event)\\\"\\n      (notify)=\\\"view._messageNotify($event)\\\"\\n      [account]=\\\"view._account\\\"\\n      [folder]=\\\"view._folder\\\"></al-messages-list>\\n    <div class=\\\"wrapper w100 ui-fluid p-grid\\\" [hidden]=\\\"view._mobileViewType != 'message'\\\">\\n      <al-message (notify)=\\\"view._msgBodyNotify($event)\\\" [message]=\\\"view._message\\\"></al-message>\\n    </div>\\n\\n    <div class=\\\"wrapper w100 padding-10\\\" *ngIf=\\\"view._mobileViewType == 'settings'\\\">\\n      <al-settings></al-settings>\\n    </div>\\n\\n    <div class=\\\"w100 padding-10\\\" [hidden]=\\\"view._mobileViewType != 'compose'\\\">\\n      <al-compose\\n        (notify)=\\\"view._hideCompose($event)\\\"\\n        *ngIf=\\\"view._composer\\\"\\n        [composeType]=\\\"view._composeType\\\"\\n        [message]=\\\"view._composeMessage\\\"\\n        [to]=\\\"view._composeTo\\\"></al-compose>\\n    </div>\\n  </div>\\n</ng-template>\\n<ng-template #toolbarButtons let-tpl>\\n  <ng-container [ngTemplateOutlet]=\\\"tpl\\\" [ngTemplateOutletContext]=\\\"{$implicit: {icon: 'envelope-open-o', action: 'mark-read'}}\\\"></ng-container>\\n  <ng-container [ngTemplateOutlet]=\\\"tpl\\\" [ngTemplateOutletContext]=\\\"{$implicit: {icon: 'envelope-o', action: 'mark-unread'}}\\\"></ng-container>\\n  <ng-container [ngTemplateOutlet]=\\\"tpl\\\" [ngTemplateOutletContext]=\\\"{$implicit: {icon: 'trash-o', action: 'delete'}}\\\"></ng-container>\\n  <ng-container [ngTemplateOutlet]=\\\"tpl\\\" [ngTemplateOutletContext]=\\\"{$implicit: {icon: view._spamFolder ? 'thumbs-o-up' : 'thumbs-o-down', action: 'spam'}}\\\"></ng-container>\\n</ng-template>\\n<ng-template #actionIcon let-context>\\n  <i (click)=\\\"view._actionIcon(context.action)\\\" \\n    [hidden]=\\\"view._mobileViewType != 'list'\\\"\\n    class=\\\"fa fa-{{context.icon}}\\\"\\n    [ngClass]=\\\"{disabled: view._selection?.length == 0 && !view._message}\\\"\\n    style=\\\"vertical-align: middle\\\"></i>\\n</ng-template>\\n<ng-template #actionButton let-context>\\n  <button (click)=\\\"view._action(context.action)\\\" pButton [disabled]=\\\"view._selection?.length == 0 && !view._message\\\" icon=\\\"fa fa-{{context.icon}}\\\"></button>\\n</ng-template>\\n\";","export default \"<p-blockUI [blocked]=\\\"true\\\" #blockedUI [target]=\\\"target\\\">\\n    <i class=\\\"fa fa-spinner fa-spin fa-3w\\\" style=\\\"position:absolute;top:calc(50% - 30px);left:calc(50% - 30px);font-size: 60px;font-weight: bold\\\"></i>\\n</p-blockUI>\\n\";","export default \"<span [hidden]=\\\"!view._ready\\\">\\n  <div class=\\\"content\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</span>\\n<p-toast key=\\\"abc\\\" position=\\\"top-center\\\"></p-toast>\\n\";","export default \"<div class=\\\"center p-grid ui-fluid\\\" *ngIf=\\\"!view._message\\\">\\n  <div class=\\\"p-col-12\\\"><h2>No message selected</h2></div>\\n  <div class=\\\"p-col-12\\\">Select a message from the list in order to view it!</div>\\n</div>\\n<div style=\\\"position: relative\\\" *ngIf=\\\"view._message\\\" class=\\\"main-container\\\">\\n  <div class=\\\"ui-fluid p-grid\\\">\\n    <div class=\\\"p-col-11\\\">\\n      <h2>{{view._message?.Subject}}</h2>\\n    </div>\\n    <div class=\\\"p-col-1\\\">\\n      <i (click)=\\\"view._star()\\\" class=\\\"fa fa-star{{!view._message?.IsFlagged ? '-o' : ''}}\\\"></i>\\n    </div>\\n    <div class=\\\"p-col avatar\\\">\\n      <al-avatar [contact]=\\\"view._message | messageFrom\\\"></al-avatar>\\n    </div>\\n    <div class=\\\"p-col details\\\">\\n      <div>{{view._message | messageFrom | messageFromTxt}}</div>\\n      <div>{{view._message | messageDate}}\\n        <span (click)=\\\"view._detailsHidden = !view._detailsHidden\\\" class=\\\"extra\\\">{{view._detailsHidden ? 'Show' : 'Hide'}} details</span>\\n      </div>\\n      <div [hidden]=\\\"view._detailsHidden\\\" class=\\\"extra-details\\\">\\n        <ng-container [ngTemplateOutlet]=\\\"detailsTpl\\\" [ngTemplateOutletContext]=\\\"{$implicit: 'From'}\\\"></ng-container>\\n        <ng-container [ngTemplateOutlet]=\\\"detailsTpl\\\" [ngTemplateOutletContext]=\\\"{$implicit: 'To'}\\\"></ng-container>\\n        <ng-container [ngTemplateOutlet]=\\\"detailsTpl\\\" [ngTemplateOutletContext]=\\\"{$implicit: 'Cc'}\\\"></ng-container>\\n        <ng-template #detailsTpl let-field>\\n          <div>{{field}}: \\n            <span\\n              (click)=\\\"view._emailClick(contact)\\\"\\n              class=\\\"contact-detail\\\"\\n              *ngFor=\\\"let contact of (view._message[field] | contactsArray)\\\"\\n              [innerHTML]=\\\"contact | messageFromTxtFull | asHtml\\\"></span>\\n          </div>\\n        </ng-template>\\n      </div>\\n      <div [hidden]=\\\"!view._hasImages\\\" (click)=\\\"view._showImages()\\\">\\n        <i class=\\\"fa fa-picture-o\\\"></i>&nbsp;Show images\\n      </div>\\n    </div>\\n    <div class=\\\"p-col actions\\\">\\n      <i *ngIf=\\\"!view._isDraft\\\" (click)=\\\"view._action('reply')\\\" class=\\\"fa fa-reply\\\"></i>\\n      <i *ngIf=\\\"view._isDraft\\\" (click)=\\\"view._action('from-draft')\\\" class=\\\"fa fa-pencil\\\"></i>\\n      <span (click)=\\\"menu.toggle($event)\\\">\\n        <i class=\\\"fa fa-ellipsis-v\\\"></i>\\n      </span>\\n    </div>\\n  </div>\\n  <div class=\\\"message-body\\\" [ngClass]=\\\"{'hide-quote': view._quotedText}\\\" #messageBody [innerHTML]=\\\"view._html | asHtml\\\"></div>\\n  <div [hidden]=\\\"!view._quotedText\\\">\\n    <div (click)=\\\"view._showHiddenContent()\\\" class=\\\"extra\\\">Show quoted text</div>\\n  </div>\\n  <div class=\\\"attachments\\\" [hidden]=\\\"!view._message || (view._message | attachmentsList).length == 0\\\">\\n    <al-attachments [attachments]=\\\"view._message | attachmentsList\\\" [message]=\\\"view._message\\\" [account]=\\\"view._account\\\"></al-attachments>\\n  </div>\\n</div>\\n<p-overlayPanel #menu styleClass=\\\"max-width\\\">\\n  <ng-template pTemplate>\\n    <div class=\\\"p-grid ui-fluid menu-options\\\">\\n      <div class=\\\"p-col-12\\\" (click)=\\\"view._action('reply-all'); menu.hide()\\\"><i class=\\\"fa fa-reply-all\\\"></i>Reply all</div>\\n      <div class=\\\"p-col-12\\\" (click)=\\\"view._action('forward'); menu.hide()\\\"><i class=\\\"fa fa-share\\\"></i>Forward</div>\\n      <div class=\\\"p-col-12\\\" (click)=\\\"view._download(); menu.hide()\\\"><i class=\\\"fa fa-download\\\"></i>Download</div>\\n    </div>\\n  </ng-template>\\n</p-overlayPanel>\\n\";","export default \"<p-table #table [value]=\\\"view._messages\\\" [lazy]=\\\"true\\\" selectionMode=\\\"single\\\" (onLazyLoad)=\\\"view._loadMessages($event)\\\" [paginator]=\\\"true\\\"\\n  [loading]=\\\"view._loading\\\" [rows]=\\\"view._pageSize\\\" [totalRecords]=\\\"view._totalRecords\\\" (onRowSelect)=\\\"view._selectionChanged()\\\"\\n  (onRowUnselect)=\\\"view._selectionChanged()\\\" (onHeaderCheckboxToggle)=\\\"view._selectionChanged()\\\" [pageLinks]=\\\"view._combinedView ? 1 : 5\\\"\\n  [ngClass]=\\\"{'combined-view': view._combinedView}\\\">\\n  <ng-template pTemplate=\\\"header\\\">\\n    <tr>\\n      <th style=\\\"width: 3em\\\">\\n        <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\\n      </th>\\n      <th>\\n        <div class=\\\"header p-grid ui-fluid\\\">\\n          <div class=\\\"p-col-12\\\">\\n            <div class=\\\"ui-inputgroup\\\">\\n              <input (keyup)=\\\"view._keyup($event)\\\" [(ngModel)]=\\\"view._search.simple\\\" type=\\\"text\\\" pInputText placeholder=\\\"Search\\\">\\n              <i (click)=\\\"view._clearSearch()\\\" class=\\\"fa fa-times\\\" *ngIf=\\\"view._search.simple\\\"></i>\\n              <button (click)=\\\"advancedSearch.toggle($event)\\\" pButton icon=\\\"fa fa-angle-down\\\"></button>\\n            </div>\\n          </div>\\n        </div>\\n      </th>\\n    </tr>\\n  </ng-template>\\n  <ng-template pTemplate=\\\"body\\\" let-row>\\n    <tr [ngClass]=\\\"{'ui-state-highlight': view._selected?.Uid == row.Uid}\\\">\\n      <td>\\n        <p-tableCheckbox [value]=\\\"row\\\"></p-tableCheckbox>\\n      </td>\\n      <td [ngClass]=\\\"{unread: !row.IsSeen}\\\" (click)=\\\"view._select(row)\\\" [ngStyle]=\\\"row | borderRight | async\\\">\\n        <div class=\\\"p-grid ui-fluid\\\">\\n          <div class=\\\"avatar\\\" *ngIf=\\\"row.From.Collection?.length > 0\\\">\\n            <al-avatar [contact]=\\\"row.From.Collection[0]\\\"></al-avatar>\\n          </div>\\n          <div class=\\\"message\\\">\\n            <div class=\\\"flex ui-fluid\\\">\\n              <div class=\\\"from\\\">{{row | messageFrom | messageFromTxt}}</div>\\n              <div class=\\\"flags\\\">\\n                <i *ngIf=\\\"row.IsForwarded\\\" class=\\\"fa fa-share\\\"></i>\\n                <i *ngIf=\\\"row.IsAnswered\\\" class=\\\"fa fa-reply\\\"></i>\\n                <i *ngIf=\\\"row.HasAttachments\\\" class=\\\"fa fa-paperclip\\\"></i>\\n              </div>\\n              <div class=\\\"date\\\">{{row | messageDate}}</div>\\n            </div>\\n            <div class=\\\"flex ui-fluid margin-top\\\">\\n              <div class=\\\"subject\\\">\\n                <i *ngIf=\\\"row.IsFlagged\\\" class=\\\"fa fa-star\\\"></i>{{row.Subject}}\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </td>\\n    </tr>\\n  </ng-template>\\n</p-table>\\n\\n<p-overlayPanel #advancedSearch [dismissable]=\\\"false\\\" baseZIndex=\\\"990\\\">\\n  <ng-template pTemplate>\\n    <div class=\\\"p-grid ui-fluid\\\">\\n      <div class=\\\"p-col-6\\\"><input type=\\\"text\\\" [(ngModel)]=\\\"view._search.from\\\" pInputText placeholder=\\\"From\\\"/></div>\\n      <div class=\\\"p-col-6\\\"><input type=\\\"text\\\" [(ngModel)]=\\\"view._search.to\\\" pInputText placeholder=\\\"To\\\"/></div>\\n      <div class=\\\"p-col-6\\\"><input type=\\\"text\\\" [(ngModel)]=\\\"view._search.subject\\\" pInputText placeholder=\\\"Subject\\\"/></div>\\n      <div class=\\\"p-col-6\\\"><input type=\\\"text\\\" [(ngModel)]=\\\"view._search.text\\\" pInputText placeholder=\\\"Text\\\"/></div>\\n      <div class=\\\"p-col-6\\\"><p-calendar [touchUI]=\\\"true\\\" [readonlyInput]=\\\"true\\\" [(ngModel)]=\\\"view._search.since\\\" placeholder=\\\"Since\\\" [showIcon]=\\\"true\\\"></p-calendar></div>\\n      <div class=\\\"p-col-6\\\"><p-calendar [touchUI]=\\\"true\\\" [readonlyInput]=\\\"true\\\" [(ngModel)]=\\\"view._search.till\\\" placeholder=\\\"Till\\\" [showIcon]=\\\"true\\\"></p-calendar></div>\\n      <div class=\\\"p-col-6\\\"><p-checkbox [binary]=\\\"true\\\" label=\\\"Has Attachments\\\" [(ngModel)]=\\\"view._search.attachments\\\"></p-checkbox></div>\\n      <div class=\\\"p-col-6 right\\\"><button (click)=\\\"view._advSearch(); advancedSearch.hide()\\\" pButton label=\\\"Search\\\"></button></div>\\n    </div>\\n  </ng-template>\\n</p-overlayPanel>\\n\";","export default \"<div>\\n  <al-compose composeType=\\\"new\\\"></al-compose>\\n</div>\\n  <!--div>\\n    <al-folders-list [account]=\\\"view._account\\\" (notify)=\\\"view._folderNotify($event)\\\"></al-folders-list>\\n  </div>\\n  <div>\\n    <al-messages-list (notify)=\\\"view._messageNotify($event)\\\" [account]=\\\"view._account\\\" [folder]=\\\"view._folder\\\"></al-messages-list>\\n  </div>\\n  <div>\\n    <al-message (notify)=\\\"view._msgBodyNotify($event)\\\" [message]=\\\"view._message\\\"></al-message>\\n  </div-->\\n\";","export default \"<div class=\\\"content-section\\\" *ngIf=\\\"view._model\\\">\\n  <p-panel header=\\\"Server\\\">\\n    <div class=\\\"panel-container p-fluid forms-grid ui-fluid\\\" style=\\\"margin: 1em 0;\\\">\\n      <div class=\\\"flex\\\">\\n        <span class=\\\"ui-float-label\\\">\\n          <input type=\\\"text\\\" id=\\\"server-url\\\" pInputText [ngModel]=\\\"view._model?.server.url\\\" (ngModelChange)=\\\"view._model.server.url = $event\\\" />\\n          <label for=\\\"server-url\\\">Server url</label>\\n        </span>\\n        <p-message [hidden]=\\\"view._model.server && view._model.server.url\\\" severity=\\\"error\\\" text=\\\"Url is required\\\"></p-message>\\n      </div>\\n    </div>\\n  </p-panel>\\n</div>\\n\\n<div class=\\\"content-section\\\" *ngIf=\\\"view._model\\\">\\n  <p-panel>\\n    <p-header>\\n      <div class=\\\"ui-helper-clearfix\\\">\\n        <span class=\\\"ui-panel-title\\\">Accounts</span>\\n        <button (click)=\\\"view._add()\\\" pButton style=\\\"float: right\\\" icon=\\\"fa fa-user-plus\\\"></button>\\n      </div>\\n    </p-header>\\n    <div class=\\\"panel-container p-fluid forms-grid ui-fluid\\\" style=\\\"margin: 1em 0;\\\">\\n      <div [ngClass]=\\\"{invalid: view._validate && !user.token}\\\" class=\\\"flex users\\\" *ngFor=\\\"let user of view._model?.server.users || []\\\">\\n        <span class=\\\"ui-float-label\\\">\\n          <input type=\\\"text\\\" [id]=\\\"user.email\\\" pInputText [(ngModel)]=\\\"user.email\\\" />\\n          <label [for]=\\\"user.email\\\">Email</label>\\n        </span>\\n        <span class=\\\"ui-float-label right\\\">\\n          <input type=\\\"password\\\" id=\\\"{{user.email}}-pass\\\" pInputText [(ngModel)]=\\\"user.pass\\\" />\\n          <label for=\\\"{{user.email}}-pass\\\">Password</label>\\n        </span>\\n        <button pButton icon=\\\"fa fa-user-times\\\" (click)=\\\"view._remove(user)\\\"></button>\\n      </div>\\n    </div>\\n  </p-panel>\\n</div>\\n\\n<div class=\\\"content-section\\\" *ngIf=\\\"view._model\\\">\\n  <p-panel header=\\\"App settings\\\">\\n    <div class=\\\"panel-container p-fluid forms-grid ui-fluid\\\" style=\\\"margin: 1em 0;\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"settingTpl\\\" [ngTemplateOutletContext]=\\\"{$implicit: {field: 'checkEmailInterval', label: 'Interval to check new emails (minutes)'}}\\\"></ng-container>\\n      <ng-container [ngTemplateOutlet]=\\\"settingTpl\\\" [ngTemplateOutletContext]=\\\"{$implicit: {field: 'pageSize', label: 'Number of messages displayed on a page'}}\\\"></ng-container>\\n      <ng-container [ngTemplateOutlet]=\\\"settingTpl\\\" [ngTemplateOutletContext]=\\\"{$implicit: {field: 'composeType', label: 'Type of messages to compose'}}\\\"></ng-container>\\n    </div>\\n  </p-panel>\\n</div>\\n\\n<ng-template #settingTpl let-context>\\n  <div class=\\\"flex\\\">\\n    <span class=\\\"ui-float-label\\\">\\n      <p-dropdown id=\\\"setting-{{context.field}}\\\"\\n                  [options]=\\\"view._model[context.field].options\\\"\\n                  [(ngModel)]=\\\"view._model[context.field].model\\\"\\n                  optionLabel=\\\"label\\\"></p-dropdown>\\n      <label for=\\\"setting-{{context.field}}\\\">{{context.label}}</label>\\n    </span>\\n  </div>\\n</ng-template>\\n\\n<div class=\\\"content-section\\\" *ngIf=\\\"view._model\\\">\\n  <button [disabled]=\\\"!view._model?.server.url\\\" pButton label=\\\"Save\\\" (click)=\\\"view._save()\\\"></button>\\n</div>\\n\";","export default \"i {\\n  font-size: 30px;\\n  margin-left: -3px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xpeGEvcHJvZ3JhbXMvYWZ0ZXJsb2dpYy1jbGllbnQvc3JjL2Fzc2V0cy9zY3NzL2F0dGFjaG1lbnRzLnNjc3MiLCJzcmMvYXNzZXRzL3Njc3MvYXR0YWNobWVudHMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQUE7RUFDQSxpQkFBQTtBQ0NGIiwiZmlsZSI6InNyYy9hc3NldHMvc2Nzcy9hdHRhY2htZW50cy5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaSB7XG4gIGZvbnQtc2l6ZTogMzBweDtcbiAgbWFyZ2luLWxlZnQ6IC0zcHg7XG59XG4iLCJpIHtcbiAgZm9udC1zaXplOiAzMHB4O1xuICBtYXJnaW4tbGVmdDogLTNweDtcbn0iXX0= */\";","export default \".color-circle {\\n  width: 40px;\\n  height: 40px;\\n  border-radius: 50%;\\n}\\n\\n.text {\\n  color: white;\\n  text-align: center;\\n  font-size: 24px;\\n  font-weight: bold;\\n  display: inline-block;\\n  width: 40px;\\n  height: 40px;\\n  vertical-align: middle;\\n  position: relative;\\n  top: 4px;\\n  font-family: \\\"Open Sans\\\";\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xpeGEvcHJvZ3JhbXMvYWZ0ZXJsb2dpYy1jbGllbnQvc3JjL2Fzc2V0cy9zY3NzL2F2YXRhci5zY3NzIiwic3JjL2Fzc2V0cy9zY3NzL2F2YXRhci5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtBQ0NGOztBREVBO0VBQ0UsWUFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0VBQ0EscUJBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLHNCQUFBO0VBQ0Esa0JBQUE7RUFDQSxRQUFBO0VBQ0Esd0JBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXNzZXRzL3Njc3MvYXZhdGFyLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29sb3ItY2lyY2xlIHtcbiAgd2lkdGg6IDQwcHg7XG4gIGhlaWdodDogNDBweDtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xufVxuXG4udGV4dCB7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXNpemU6IDI0cHg7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiA0MHB4O1xuICBoZWlnaHQ6IDQwcHg7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdG9wOiA0cHg7XG4gIGZvbnQtZmFtaWx5OiBcIk9wZW4gU2Fuc1wiO1xufVxuXG4iLCIuY29sb3ItY2lyY2xlIHtcbiAgd2lkdGg6IDQwcHg7XG4gIGhlaWdodDogNDBweDtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xufVxuXG4udGV4dCB7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXNpemU6IDI0cHg7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiA0MHB4O1xuICBoZWlnaHQ6IDQwcHg7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdG9wOiA0cHg7XG4gIGZvbnQtZmFtaWx5OiBcIk9wZW4gU2Fuc1wiO1xufSJdfQ== */\";","export default \".options {\\n  justify-content: flex-end;\\n  display: flex;\\n}\\n\\nbutton {\\n  width: inherit;\\n}\\n\\n.ui-float-label {\\n  display: flex;\\n}\\n\\n.form {\\n  margin: 0.5em;\\n  height: calc(100vh - 40px);\\n  overflow-y: auto;\\n}\\n\\n.ui-inputgroup .ui-inputtext:not(:last-child) {\\n  border-right-width: thin;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xpeGEvcHJvZ3JhbXMvYWZ0ZXJsb2dpYy1jbGllbnQvc3JjL2Fzc2V0cy9zY3NzL2NvbXBvc2Uuc2NzcyIsInNyYy9hc3NldHMvc2Nzcy9jb21wb3NlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDRSx5QkFBQTtFQUNBLGFBQUE7QUNBRjs7QURHQTtFQUNFLGNBQUE7QUNBRjs7QURHQTtFQUNFLGFBQUE7QUNBRjs7QURHQTtFQUNFLGFBQUE7RUFDQSwwQkFBQTtFQUNBLGdCQUFBO0FDQUY7O0FER0E7RUFDRSx3QkFBQTtBQ0FGIiwiZmlsZSI6InNyYy9hc3NldHMvc2Nzcy9jb21wb3NlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbi5vcHRpb25zIHtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuYnV0dG9uIHtcbiAgd2lkdGg6IGluaGVyaXQ7XG59XG5cbi51aS1mbG9hdC1sYWJlbCB7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5cbi5mb3JtIHtcbiAgbWFyZ2luOiAwLjVlbTtcbiAgaGVpZ2h0OiBjYWxjKDEwMHZoIC0gNDBweCk7XG4gIG92ZXJmbG93LXk6IGF1dG87XG59XG5cbi51aS1pbnB1dGdyb3VwIC51aS1pbnB1dHRleHQ6bm90KDpsYXN0LWNoaWxkKSB7XG4gIGJvcmRlci1yaWdodC13aWR0aDogdGhpbjtcbn1cblxuIiwiLm9wdGlvbnMge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG5idXR0b24ge1xuICB3aWR0aDogaW5oZXJpdDtcbn1cblxuLnVpLWZsb2F0LWxhYmVsIHtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLmZvcm0ge1xuICBtYXJnaW46IDAuNWVtO1xuICBoZWlnaHQ6IGNhbGMoMTAwdmggLSA0MHB4KTtcbiAgb3ZlcmZsb3cteTogYXV0bztcbn1cblxuLnVpLWlucHV0Z3JvdXAgLnVpLWlucHV0dGV4dDpub3QoOmxhc3QtY2hpbGQpIHtcbiAgYm9yZGVyLXJpZ2h0LXdpZHRoOiB0aGluO1xufSJdfQ== */\";","export default \".editor {\\n  padding: 10px;\\n  border: 1px solid gray;\\n  width: 100% !important;\\n  overflow-x: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xpeGEvcHJvZ3JhbXMvYWZ0ZXJsb2dpYy1jbGllbnQvc3JjL2Fzc2V0cy9zY3NzL2VkaXRvci5zY3NzIiwic3JjL2Fzc2V0cy9zY3NzL2VkaXRvci5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLHNCQUFBO0VBQ0Esc0JBQUE7RUFDQSxnQkFBQTtBQ0NGIiwiZmlsZSI6InNyYy9hc3NldHMvc2Nzcy9lZGl0b3Iuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5lZGl0b3Ige1xuICBwYWRkaW5nOiAxMHB4O1xuICBib3JkZXI6IDFweCBzb2xpZCBncmF5O1xuICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICBvdmVyZmxvdy14OiBhdXRvO1xufVxuIiwiLmVkaXRvciB7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGdyYXk7XG4gIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gIG92ZXJmbG93LXg6IGF1dG87XG59Il19 */\";","export default \"al-folders-list .ui-tree {\\n  width: 100%;\\n  border: none;\\n}\\nal-folders-list .ui-treenode-content:focus {\\n  box-shadow: none !important;\\n}\\nal-folders-list .ui-tree-wrapper {\\n  border: none;\\n}\\nal-folders-list .selected {\\n  font-weight: bold;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xpeGEvcHJvZ3JhbXMvYWZ0ZXJsb2dpYy1jbGllbnQvc3JjL2Fzc2V0cy9zY3NzL2ZvbGRlcnMtbGlzdC5zY3NzIiwic3JjL2Fzc2V0cy9zY3NzL2ZvbGRlcnMtbGlzdC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNFO0VBQ0UsV0FBQTtFQUNBLFlBQUE7QUNBSjtBREdFO0VBQ0UsMkJBQUE7QUNESjtBRElFO0VBQ0UsWUFBQTtBQ0ZKO0FES0U7RUFDRSxpQkFBQTtBQ0hKIiwiZmlsZSI6InNyYy9hc3NldHMvc2Nzcy9mb2xkZXJzLWxpc3Quc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImFsLWZvbGRlcnMtbGlzdCB7XG4gIC51aS10cmVlIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBib3JkZXI6IG5vbmU7XG4gIH1cblxuICAudWktdHJlZW5vZGUtY29udGVudDpmb2N1cyB7XG4gICAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuICB9XG5cbiAgLnVpLXRyZWUtd3JhcHBlciB7XG4gICAgYm9yZGVyOiBub25lO1xuICB9XG5cbiAgLnNlbGVjdGVkIHtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgfVxufVxuIiwiYWwtZm9sZGVycy1saXN0IC51aS10cmVlIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGJvcmRlcjogbm9uZTtcbn1cbmFsLWZvbGRlcnMtbGlzdCAudWktdHJlZW5vZGUtY29udGVudDpmb2N1cyB7XG4gIGJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcbn1cbmFsLWZvbGRlcnMtbGlzdCAudWktdHJlZS13cmFwcGVyIHtcbiAgYm9yZGVyOiBub25lO1xufVxuYWwtZm9sZGVycy1saXN0IC5zZWxlY3RlZCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufSJdfQ== */\";","export default \"body {\\n  overflow: hidden;\\n}\\n\\napp-home #container {\\n  text-align: center;\\n  position: absolute;\\n  left: 0;\\n  right: 0;\\n  top: 50%;\\n  transform: translateY(-50%);\\n}\\n\\napp-home #container strong {\\n  font-size: 20px;\\n  line-height: 26px;\\n}\\n\\napp-home #container p {\\n  font-size: 16px;\\n  line-height: 22px;\\n  color: #8c8c8c;\\n  margin: 0;\\n}\\n\\napp-home #container a {\\n  text-decoration: none;\\n}\\n\\napp-home .folders-col {\\n  width: 200px;\\n  max-width: 300px;\\n}\\n\\napp-home .mails-col {\\n  width: 400px;\\n}\\n\\napp-home .mails-col button {\\n  margin-left: 10px;\\n}\\n\\napp-home .mails-col .left {\\n  float: left;\\n}\\n\\napp-home .right {\\n  float: right;\\n}\\n\\napp-home .menuWidth {\\n  min-width: 300px;\\n  text-align: left;\\n}\\n\\napp-home .mail-col {\\n  width: calc(100% - 600px);\\n}\\n\\napp-home .top td {\\n  vertical-align: top;\\n  overflow-y: auto;\\n}\\n\\napp-home .messages-wrapper {\\n  overflow-y: hidden;\\n}\\n\\napp-home .wrapper {\\n  height: calc(100vh - 48px);\\n  overflow-y: auto;\\n}\\n\\napp-home al-messages-list .ui-table-wrapper {\\n  height: calc(100vh - 97px);\\n  overflow-y: auto;\\n}\\n\\napp-home al-messages-list.mobile .ui-table-wrapper {\\n  width: calc(100% - 8px);\\n  padding-left: 9px;\\n  overflow-x: hidden;\\n  height: calc(100vh - 81px);\\n}\\n\\napp-home .mobile-messages-list {\\n  position: relative;\\n  top: 8px;\\n}\\n\\napp-home .w100 {\\n  width: 100%;\\n}\\n\\napp-home .mobile-messages-list al-message {\\n  margin-left: 9px;\\n  margin-right: 9px;\\n}\\n\\napp-home .padding-10 {\\n  padding-left: 10px;\\n  padding-right: 10px;\\n}\\n\\napp-home .ui-toolbar-group-left i {\\n  margin-left: 30px;\\n  font-size: 30px;\\n}\\n\\napp-home .ui-toolbar-group-left {\\n  margin-left: -30px;\\n}\\n\\napp-home [hidden] {\\n  display: none !important;\\n}\\n\\napp-home .ui-sidebar {\\n  height: 100vh;\\n  overflow-y: auto;\\n}\\n\\napp-home .disabled {\\n  opacity: 0.2;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xpeGEvcHJvZ3JhbXMvYWZ0ZXJsb2dpYy1jbGllbnQvc3JjL2Fzc2V0cy9zY3NzL2hvbWUuc2NzcyIsInNyYy9hc3NldHMvc2Nzcy9ob21lLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBQTtBQ0NGOztBREVFO0VBQ0Usa0JBQUE7RUFFQSxrQkFBQTtFQUNBLE9BQUE7RUFDQSxRQUFBO0VBQ0EsUUFBQTtFQUNBLDJCQUFBO0FDQUo7O0FER0U7RUFDRSxlQUFBO0VBQ0EsaUJBQUE7QUNESjs7QURJRTtFQUNFLGVBQUE7RUFDQSxpQkFBQTtFQUVBLGNBQUE7RUFFQSxTQUFBO0FDSko7O0FET0U7RUFDRSxxQkFBQTtBQ0xKOztBRFFFO0VBQ0UsWUFBQTtFQUNBLGdCQUFBO0FDTko7O0FEU0U7RUFDRSxZQUFBO0FDUEo7O0FEU0k7RUFDRSxpQkFBQTtBQ1BOOztBRFVJO0VBQ0UsV0FBQTtBQ1JOOztBRGFFO0VBQ0UsWUFBQTtBQ1hKOztBRGNFO0VBQ0UsZ0JBQUE7RUFDQSxnQkFBQTtBQ1pKOztBRGVFO0VBQ0UseUJBQUE7QUNiSjs7QURnQkU7RUFDRSxtQkFBQTtFQUNBLGdCQUFBO0FDZEo7O0FEaUJFO0VBQ0Usa0JBQUE7QUNmSjs7QURrQkU7RUFDRSwwQkFBQTtFQUNBLGdCQUFBO0FDaEJKOztBRG1CRTtFQUNFLDBCQUFBO0VBQ0EsZ0JBQUE7QUNqQko7O0FEb0JFO0VBQ0UsdUJBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0EsMEJBQUE7QUNsQko7O0FEcUJFO0VBQ0Usa0JBQUE7RUFDQSxRQUFBO0FDbkJKOztBRHNCRTtFQUNFLFdBQUE7QUNwQko7O0FEdUJFO0VBQ0UsZ0JBQUE7RUFDQSxpQkFBQTtBQ3JCSjs7QUR3QkU7RUFDRSxrQkFBQTtFQUNBLG1CQUFBO0FDdEJKOztBRHlCRTtFQUNFLGlCQUFBO0VBQ0EsZUFBQTtBQ3ZCSjs7QUQwQkU7RUFDRSxrQkFBQTtBQ3hCSjs7QUQyQkU7RUFDRSx3QkFBQTtBQ3pCSjs7QUQ0QkU7RUFDRSxhQUFBO0VBQ0EsZ0JBQUE7QUMxQko7O0FENkJFO0VBQ0UsWUFBQTtBQzNCSiIsImZpbGUiOiJzcmMvYXNzZXRzL3Njc3MvaG9tZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYm9keSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5hcHAtaG9tZSB7XG4gICNjb250YWluZXIge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIHRvcDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgfVxuXG4gICNjb250YWluZXIgc3Ryb25nIHtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gICAgbGluZS1oZWlnaHQ6IDI2cHg7XG4gIH1cblxuICAjY29udGFpbmVyIHAge1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBsaW5lLWhlaWdodDogMjJweDtcblxuICAgIGNvbG9yOiAjOGM4YzhjO1xuXG4gICAgbWFyZ2luOiAwO1xuICB9XG5cbiAgI2NvbnRhaW5lciBhIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIH1cblxuICAuZm9sZGVycy1jb2wge1xuICAgIHdpZHRoOiAyMDBweDtcbiAgICBtYXgtd2lkdGg6IDMwMHB4O1xuICB9XG5cbiAgLm1haWxzLWNvbCB7XG4gICAgd2lkdGg6IDQwMHB4O1xuXG4gICAgYnV0dG9uIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICAgIH1cblxuICAgIC5sZWZ0IHtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgIH1cblxuICB9XG5cbiAgLnJpZ2h0IHtcbiAgICBmbG9hdDogcmlnaHQ7XG4gIH1cblxuICAubWVudVdpZHRoIHtcbiAgICBtaW4td2lkdGg6IDMwMHB4O1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gIH1cblxuICAubWFpbC1jb2wge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgLSA2MDBweCk7XG4gIH1cblxuICAudG9wIHRkIHtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICAgIG92ZXJmbG93LXk6IGF1dG87XG4gIH1cblxuICAubWVzc2FnZXMtd3JhcHBlciB7XG4gICAgb3ZlcmZsb3cteTogaGlkZGVuO1xuICB9XG5cbiAgLndyYXBwZXIge1xuICAgIGhlaWdodDogY2FsYygxMDB2aCAtIDQ4cHgpO1xuICAgIG92ZXJmbG93LXk6IGF1dG87XG4gIH1cblxuICBhbC1tZXNzYWdlcy1saXN0IC51aS10YWJsZS13cmFwcGVyIHtcbiAgICBoZWlnaHQ6IGNhbGMoMTAwdmggLSA5N3B4KTtcbiAgICBvdmVyZmxvdy15OiBhdXRvO1xuICB9XG5cbiAgYWwtbWVzc2FnZXMtbGlzdC5tb2JpbGUgLnVpLXRhYmxlLXdyYXBwZXIge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgLSA4cHgpO1xuICAgIHBhZGRpbmctbGVmdDogOXB4O1xuICAgIG92ZXJmbG93LXg6IGhpZGRlbjtcbiAgICBoZWlnaHQ6IGNhbGMoMTAwdmggLSA4MXB4KTtcbiAgfVxuXG4gIC5tb2JpbGUtbWVzc2FnZXMtbGlzdCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHRvcDogOHB4O1xuICB9XG5cbiAgLncxMDAge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG5cbiAgLm1vYmlsZS1tZXNzYWdlcy1saXN0IGFsLW1lc3NhZ2Uge1xuICAgIG1hcmdpbi1sZWZ0OiA5cHg7XG4gICAgbWFyZ2luLXJpZ2h0OiA5cHg7XG4gIH1cblxuICAucGFkZGluZy0xMCB7XG4gICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XG4gIH1cblxuICAudWktdG9vbGJhci1ncm91cC1sZWZ0IGkge1xuICAgIG1hcmdpbi1sZWZ0OiAzMHB4O1xuICAgIGZvbnQtc2l6ZTogMzBweDtcbiAgfVxuXG4gIC51aS10b29sYmFyLWdyb3VwLWxlZnQge1xuICAgIG1hcmdpbi1sZWZ0OiAtMzBweDtcbiAgfVxuXG4gIFtoaWRkZW5dIHtcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG4gIH1cblxuICAudWktc2lkZWJhciB7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgICBvdmVyZmxvdy15OiBhdXRvO1xuICB9XG5cbiAgLmRpc2FibGVkIHtcbiAgICBvcGFjaXR5OiAwLjI7XG4gIH1cbn1cbiIsImJvZHkge1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG5hcHAtaG9tZSAjY29udGFpbmVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICB0b3A6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xufVxuYXBwLWhvbWUgI2NvbnRhaW5lciBzdHJvbmcge1xuICBmb250LXNpemU6IDIwcHg7XG4gIGxpbmUtaGVpZ2h0OiAyNnB4O1xufVxuYXBwLWhvbWUgI2NvbnRhaW5lciBwIHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMjJweDtcbiAgY29sb3I6ICM4YzhjOGM7XG4gIG1hcmdpbjogMDtcbn1cbmFwcC1ob21lICNjb250YWluZXIgYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cbmFwcC1ob21lIC5mb2xkZXJzLWNvbCB7XG4gIHdpZHRoOiAyMDBweDtcbiAgbWF4LXdpZHRoOiAzMDBweDtcbn1cbmFwcC1ob21lIC5tYWlscy1jb2wge1xuICB3aWR0aDogNDAwcHg7XG59XG5hcHAtaG9tZSAubWFpbHMtY29sIGJ1dHRvbiB7XG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xufVxuYXBwLWhvbWUgLm1haWxzLWNvbCAubGVmdCB7XG4gIGZsb2F0OiBsZWZ0O1xufVxuYXBwLWhvbWUgLnJpZ2h0IHtcbiAgZmxvYXQ6IHJpZ2h0O1xufVxuYXBwLWhvbWUgLm1lbnVXaWR0aCB7XG4gIG1pbi13aWR0aDogMzAwcHg7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG5hcHAtaG9tZSAubWFpbC1jb2wge1xuICB3aWR0aDogY2FsYygxMDAlIC0gNjAwcHgpO1xufVxuYXBwLWhvbWUgLnRvcCB0ZCB7XG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gIG92ZXJmbG93LXk6IGF1dG87XG59XG5hcHAtaG9tZSAubWVzc2FnZXMtd3JhcHBlciB7XG4gIG92ZXJmbG93LXk6IGhpZGRlbjtcbn1cbmFwcC1ob21lIC53cmFwcGVyIHtcbiAgaGVpZ2h0OiBjYWxjKDEwMHZoIC0gNDhweCk7XG4gIG92ZXJmbG93LXk6IGF1dG87XG59XG5hcHAtaG9tZSBhbC1tZXNzYWdlcy1saXN0IC51aS10YWJsZS13cmFwcGVyIHtcbiAgaGVpZ2h0OiBjYWxjKDEwMHZoIC0gOTdweCk7XG4gIG92ZXJmbG93LXk6IGF1dG87XG59XG5hcHAtaG9tZSBhbC1tZXNzYWdlcy1saXN0Lm1vYmlsZSAudWktdGFibGUtd3JhcHBlciB7XG4gIHdpZHRoOiBjYWxjKDEwMCUgLSA4cHgpO1xuICBwYWRkaW5nLWxlZnQ6IDlweDtcbiAgb3ZlcmZsb3cteDogaGlkZGVuO1xuICBoZWlnaHQ6IGNhbGMoMTAwdmggLSA4MXB4KTtcbn1cbmFwcC1ob21lIC5tb2JpbGUtbWVzc2FnZXMtbGlzdCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdG9wOiA4cHg7XG59XG5hcHAtaG9tZSAudzEwMCB7XG4gIHdpZHRoOiAxMDAlO1xufVxuYXBwLWhvbWUgLm1vYmlsZS1tZXNzYWdlcy1saXN0IGFsLW1lc3NhZ2Uge1xuICBtYXJnaW4tbGVmdDogOXB4O1xuICBtYXJnaW4tcmlnaHQ6IDlweDtcbn1cbmFwcC1ob21lIC5wYWRkaW5nLTEwIHtcbiAgcGFkZGluZy1sZWZ0OiAxMHB4O1xuICBwYWRkaW5nLXJpZ2h0OiAxMHB4O1xufVxuYXBwLWhvbWUgLnVpLXRvb2xiYXItZ3JvdXAtbGVmdCBpIHtcbiAgbWFyZ2luLWxlZnQ6IDMwcHg7XG4gIGZvbnQtc2l6ZTogMzBweDtcbn1cbmFwcC1ob21lIC51aS10b29sYmFyLWdyb3VwLWxlZnQge1xuICBtYXJnaW4tbGVmdDogLTMwcHg7XG59XG5hcHAtaG9tZSBbaGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbn1cbmFwcC1ob21lIC51aS1zaWRlYmFyIHtcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgb3ZlcmZsb3cteTogYXV0bztcbn1cbmFwcC1ob21lIC5kaXNhYmxlZCB7XG4gIG9wYWNpdHk6IDAuMjtcbn0iXX0= */\";","export default \".container {\\n  height: calc(100vh - 53px);\\n}\\n\\nbody {\\n  margin: 0px;\\n}\\n\\n.avatar {\\n  width: 40px;\\n  height: 40px;\\n  margin-right: 8px;\\n  margin-top: 8px;\\n}\\n\\n.account {\\n  width: calc(100% - 48px);\\n}\\n\\n.name {\\n  margin-top: 10px;\\n  margin-bottom: 0px;\\n  font-weight: normal;\\n}\\n\\n.email {\\n  margin-top: 0px;\\n  margin-bottom: 0px;\\n  font-weight: normal;\\n}\\n\\n.selected .email, .selected .name {\\n  font-weight: bold !important;\\n}\\n\\n.flex {\\n  display: flex;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xpeGEvcHJvZ3JhbXMvYWZ0ZXJsb2dpYy1jbGllbnQvc3JjL2Fzc2V0cy9zY3NzL21haW4uc2NzcyIsInNyYy9hc3NldHMvc2Nzcy9tYWluLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSwwQkFBQTtBQ0NGOztBREVBO0VBQ0UsV0FBQTtBQ0NGOztBREVBO0VBQ0UsV0FBQTtFQUNBLFlBQUE7RUFDQSxpQkFBQTtFQUNBLGVBQUE7QUNDRjs7QURFQTtFQUNFLHdCQUFBO0FDQ0Y7O0FERUE7RUFDRSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsbUJBQUE7QUNDRjs7QURFQTtFQUNFLGVBQUE7RUFDQSxrQkFBQTtFQUNBLG1CQUFBO0FDQ0Y7O0FERUE7RUFDRSw0QkFBQTtBQ0NGOztBREVBO0VBQ0UsYUFBQTtBQ0NGIiwiZmlsZSI6InNyYy9hc3NldHMvc2Nzcy9tYWluLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcbiAgaGVpZ2h0OiBjYWxjKDEwMHZoIC0gNTNweCk7XG59XG5cbmJvZHkge1xuICBtYXJnaW46IDBweDtcbn1cblxuLmF2YXRhciB7XG4gIHdpZHRoOiA0MHB4O1xuICBoZWlnaHQ6IDQwcHg7XG4gIG1hcmdpbi1yaWdodDogOHB4O1xuICBtYXJnaW4tdG9wOiA4cHg7XG59XG5cbi5hY2NvdW50IHtcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDQ4cHgpO1xufVxuXG4ubmFtZSB7XG4gIG1hcmdpbi10b3A6IDEwcHg7XG4gIG1hcmdpbi1ib3R0b206IDBweDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbn1cblxuLmVtYWlsIHtcbiAgbWFyZ2luLXRvcDogMHB4O1xuICBtYXJnaW4tYm90dG9tOiAwcHg7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG59XG5cbi5zZWxlY3RlZCAuZW1haWwsIC5zZWxlY3RlZCAubmFtZXtcbiAgZm9udC13ZWlnaHQ6IGJvbGQgIWltcG9ydGFudDtcbn1cblxuLmZsZXgge1xuICBkaXNwbGF5OiBmbGV4O1xufVxuIiwiLmNvbnRhaW5lciB7XG4gIGhlaWdodDogY2FsYygxMDB2aCAtIDUzcHgpO1xufVxuXG5ib2R5IHtcbiAgbWFyZ2luOiAwcHg7XG59XG5cbi5hdmF0YXIge1xuICB3aWR0aDogNDBweDtcbiAgaGVpZ2h0OiA0MHB4O1xuICBtYXJnaW4tcmlnaHQ6IDhweDtcbiAgbWFyZ2luLXRvcDogOHB4O1xufVxuXG4uYWNjb3VudCB7XG4gIHdpZHRoOiBjYWxjKDEwMCUgLSA0OHB4KTtcbn1cblxuLm5hbWUge1xuICBtYXJnaW4tdG9wOiAxMHB4O1xuICBtYXJnaW4tYm90dG9tOiAwcHg7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG59XG5cbi5lbWFpbCB7XG4gIG1hcmdpbi10b3A6IDBweDtcbiAgbWFyZ2luLWJvdHRvbTogMHB4O1xuICBmb250LXdlaWdodDogbm9ybWFsO1xufVxuXG4uc2VsZWN0ZWQgLmVtYWlsLCAuc2VsZWN0ZWQgLm5hbWUge1xuICBmb250LXdlaWdodDogYm9sZCAhaW1wb3J0YW50O1xufVxuXG4uZmxleCB7XG4gIGRpc3BsYXk6IGZsZXg7XG59Il19 */\";","export default \"al-message {\\n  /*.ui-overlaypanel {\\n    top: 150px !important;\\n    left: 370px !important;\\n  }*/\\n}\\nal-message .center {\\n  text-align: center;\\n}\\nal-message .from {\\n  display: flex;\\n  align-items: center;\\n}\\nal-message .margin {\\n  margin-left: 10px;\\n}\\nal-message .buttons {\\n  text-align: right;\\n}\\nal-message .buttons button {\\n  margin-left: 4px;\\n}\\nal-message .avatar {\\n  max-width: 56px;\\n  margin: 8px;\\n}\\nal-message .details {\\n  flex: 1;\\n  margin-top: 11px;\\n}\\nal-message .actions {\\n  max-width: 102px;\\n  margin-top: 11px;\\n}\\nal-message .actions .fa {\\n  font-size: 30px;\\n  margin-left: 20px;\\n}\\nal-message .p-col-1 {\\n  align-items: center;\\n  display: flex;\\n  justify-content: flex-end;\\n}\\nal-message .extra {\\n  color: blue;\\n}\\nal-message .extra-details {\\n  font-size: 0.8em;\\n}\\nal-message .contact-detail {\\n  margin-right: 5px;\\n}\\nal-message .menu-options i {\\n  margin-right: 10px;\\n}\\nal-message .max-width {\\n  max-width: 150px;\\n}\\nal-message .message-body {\\n  overflow-x: overlay;\\n}\\nal-message .hide-quote blockquote {\\n  display: none;\\n}\\nal-message .main-container {\\n  padding-left: 15px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xpeGEvcHJvZ3JhbXMvYWZ0ZXJsb2dpYy1jbGllbnQvc3JjL2Fzc2V0cy9zY3NzL21lc3NhZ2Uuc2NzcyIsInNyYy9hc3NldHMvc2Nzcy9tZXNzYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUEwRUU7OztJQUFBO0FDckVGO0FESkU7RUFDRSxrQkFBQTtBQ01KO0FESEU7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7QUNLSjtBREZFO0VBQ0UsaUJBQUE7QUNJSjtBRERFO0VBSUUsaUJBQUE7QUNBSjtBREhJO0VBQ0UsZ0JBQUE7QUNLTjtBREFFO0VBQ0UsZUFBQTtFQUNBLFdBQUE7QUNFSjtBRENFO0VBQ0UsT0FBQTtFQUNBLGdCQUFBO0FDQ0o7QURFRTtFQUNFLGdCQUFBO0VBQ0EsZ0JBQUE7QUNBSjtBRENJO0VBQ0UsZUFBQTtFQUNBLGlCQUFBO0FDQ047QURHRTtFQUNFLG1CQUFBO0VBQ0EsYUFBQTtFQUNBLHlCQUFBO0FDREo7QURJRTtFQUNFLFdBQUE7QUNGSjtBREtFO0VBQ0UsZ0JBQUE7QUNISjtBRE1FO0VBQ0UsaUJBQUE7QUNKSjtBRE9FO0VBQ0Usa0JBQUE7QUNMSjtBRFFFO0VBQ0UsZ0JBQUE7QUNOSjtBRFNFO0VBQ0UsbUJBQUE7QUNQSjtBRFVFO0VBQ0UsYUFBQTtBQ1JKO0FEZ0JFO0VBQ0Usa0JBQUE7QUNkSiIsImZpbGUiOiJzcmMvYXNzZXRzL3Njc3MvbWVzc2FnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYWwtbWVzc2FnZSB7XG4gIC5jZW50ZXIge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxuXG4gIC5mcm9tIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIH1cblxuICAubWFyZ2luIHtcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcbiAgfVxuXG4gIC5idXR0b25zIHtcbiAgICBidXR0b24ge1xuICAgICAgbWFyZ2luLWxlZnQ6IDRweDtcbiAgICB9XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIH1cblxuICAuYXZhdGFyIHtcbiAgICBtYXgtd2lkdGg6IDU2cHg7XG4gICAgbWFyZ2luOiA4cHg7XG4gIH1cblxuICAuZGV0YWlscyB7XG4gICAgZmxleDogMTtcbiAgICBtYXJnaW4tdG9wOiAxMXB4O1xuICB9XG5cbiAgLmFjdGlvbnMge1xuICAgIG1heC13aWR0aDogMTAycHg7XG4gICAgbWFyZ2luLXRvcDogMTFweDtcbiAgICAuZmEge1xuICAgICAgZm9udC1zaXplOiAzMHB4O1xuICAgICAgbWFyZ2luLWxlZnQ6IDIwcHg7XG4gICAgfVxuICB9XG5cbiAgLnAtY29sLTEge1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICB9XG5cbiAgLmV4dHJhIHtcbiAgICBjb2xvcjogYmx1ZTtcbiAgfVxuXG4gIC5leHRyYS1kZXRhaWxzIHtcbiAgICBmb250LXNpemU6IDAuOGVtO1xuICB9XG5cbiAgLmNvbnRhY3QtZGV0YWlsIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDVweDtcbiAgfVxuICBcbiAgLm1lbnUtb3B0aW9ucyBpe1xuICAgIG1hcmdpbi1yaWdodDogMTBweDtcbiAgfVxuXG4gIC5tYXgtd2lkdGgge1xuICAgIG1heC13aWR0aDogMTUwcHg7XG4gIH1cblxuICAubWVzc2FnZS1ib2R5IHtcbiAgICBvdmVyZmxvdy14OiBvdmVybGF5O1xuICB9XG5cbiAgLmhpZGUtcXVvdGUgYmxvY2txdW90ZSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuXG4gIC8qLnVpLW92ZXJsYXlwYW5lbCB7XG4gICAgdG9wOiAxNTBweCAhaW1wb3J0YW50O1xuICAgIGxlZnQ6IDM3MHB4ICFpbXBvcnRhbnQ7XG4gIH0qL1xuXG4gIC5tYWluLWNvbnRhaW5lciB7XG4gICAgcGFkZGluZy1sZWZ0OiAxNXB4O1xuICB9XG59XG4iLCJhbC1tZXNzYWdlIHtcbiAgLyoudWktb3ZlcmxheXBhbmVsIHtcbiAgICB0b3A6IDE1MHB4ICFpbXBvcnRhbnQ7XG4gICAgbGVmdDogMzcwcHggIWltcG9ydGFudDtcbiAgfSovXG59XG5hbC1tZXNzYWdlIC5jZW50ZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5hbC1tZXNzYWdlIC5mcm9tIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbmFsLW1lc3NhZ2UgLm1hcmdpbiB7XG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xufVxuYWwtbWVzc2FnZSAuYnV0dG9ucyB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuYWwtbWVzc2FnZSAuYnV0dG9ucyBidXR0b24ge1xuICBtYXJnaW4tbGVmdDogNHB4O1xufVxuYWwtbWVzc2FnZSAuYXZhdGFyIHtcbiAgbWF4LXdpZHRoOiA1NnB4O1xuICBtYXJnaW46IDhweDtcbn1cbmFsLW1lc3NhZ2UgLmRldGFpbHMge1xuICBmbGV4OiAxO1xuICBtYXJnaW4tdG9wOiAxMXB4O1xufVxuYWwtbWVzc2FnZSAuYWN0aW9ucyB7XG4gIG1heC13aWR0aDogMTAycHg7XG4gIG1hcmdpbi10b3A6IDExcHg7XG59XG5hbC1tZXNzYWdlIC5hY3Rpb25zIC5mYSB7XG4gIGZvbnQtc2l6ZTogMzBweDtcbiAgbWFyZ2luLWxlZnQ6IDIwcHg7XG59XG5hbC1tZXNzYWdlIC5wLWNvbC0xIHtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbn1cbmFsLW1lc3NhZ2UgLmV4dHJhIHtcbiAgY29sb3I6IGJsdWU7XG59XG5hbC1tZXNzYWdlIC5leHRyYS1kZXRhaWxzIHtcbiAgZm9udC1zaXplOiAwLjhlbTtcbn1cbmFsLW1lc3NhZ2UgLmNvbnRhY3QtZGV0YWlsIHtcbiAgbWFyZ2luLXJpZ2h0OiA1cHg7XG59XG5hbC1tZXNzYWdlIC5tZW51LW9wdGlvbnMgaSB7XG4gIG1hcmdpbi1yaWdodDogMTBweDtcbn1cbmFsLW1lc3NhZ2UgLm1heC13aWR0aCB7XG4gIG1heC13aWR0aDogMTUwcHg7XG59XG5hbC1tZXNzYWdlIC5tZXNzYWdlLWJvZHkge1xuICBvdmVyZmxvdy14OiBvdmVybGF5O1xufVxuYWwtbWVzc2FnZSAuaGlkZS1xdW90ZSBibG9ja3F1b3RlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbmFsLW1lc3NhZ2UgLm1haW4tY29udGFpbmVyIHtcbiAgcGFkZGluZy1sZWZ0OiAxNXB4O1xufSJdfQ== */\";","export default \"al-messages-list .header {\\n  margin-top: 0px;\\n}\\nal-messages-list .from, al-messages-list .subject {\\n  flex-grow: 1;\\n  max-width: 100%;\\n  overflow: hidden;\\n  white-space: nowrap;\\n}\\nal-messages-list .subject {\\n  font-size: 18px;\\n}\\nal-messages-list .margin-top {\\n  margin-top: 0px;\\n}\\nal-messages-list .date {\\n  justify-content: right;\\n}\\nal-messages-list .flags {\\n  justify-content: right;\\n  margin-right: 4px;\\n}\\nal-messages-list .fa-star {\\n  font-size: 0.9em;\\n  padding-right: 5px;\\n}\\nal-messages-list .unread {\\n  font-weight: bold;\\n}\\nal-messages-list .ui-inputgroup {\\n  position: relative;\\n}\\nal-messages-list .ui-inputgroup .fa-times {\\n  position: absolute;\\n  right: 38px;\\n  top: 9px;\\n}\\nal-messages-list .right {\\n  text-align: right;\\n}\\nal-messages-list .avatar {\\n  width: 40px;\\n  height: 40px;\\n  margin-right: 8px;\\n  margin-top: 8px;\\n}\\nal-messages-list .message {\\n  width: calc(100% - 48px);\\n  margin-top: 8px;\\n}\\nal-messages-list .flex {\\n  display: flex;\\n}\\nal-messages-list td {\\n  overflow: hidden;\\n}\\nal-messages-list .ui-overlaypanel {\\n  max-width: 400px;\\n}\\nal-messages-list .fix-search-form .ui-overlaypanel {\\n  top: 50px !important;\\n  left: 107px !important;\\n}\\nal-messages-list .ui-datepicker {\\n  min-width: 300px !important;\\n}\\nal-messages-list .combined-view .ui-paginator-first, al-messages-list .combined-view .ui-paginator-last {\\n  display: none;\\n}\\nal-messages-list td.highlight {\\n  border-right: 5px solid !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xpeGEvcHJvZ3JhbXMvYWZ0ZXJsb2dpYy1jbGllbnQvc3JjL2Fzc2V0cy9zY3NzL21lc3NhZ2VzLWxpc3Quc2NzcyIsInNyYy9hc3NldHMvc2Nzcy9tZXNzYWdlcy1saXN0LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0U7RUFDRSxlQUFBO0FDQUo7QURHRTtFQUNFLFlBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxtQkFBQTtBQ0RKO0FESUU7RUFDRSxlQUFBO0FDRko7QURLRTtFQUNFLGVBQUE7QUNISjtBRE1FO0VBQ0Usc0JBQUE7QUNKSjtBRE9FO0VBQ0Usc0JBQUE7RUFFQSxpQkFBQTtBQ05KO0FEU0U7RUFDRSxnQkFBQTtFQUNBLGtCQUFBO0FDUEo7QURVRTtFQUNFLGlCQUFBO0FDUko7QURXRTtFQUNFLGtCQUFBO0FDVEo7QURVSTtFQUNFLGtCQUFBO0VBQ0EsV0FBQTtFQUNBLFFBQUE7QUNSTjtBRFlFO0VBQ0UsaUJBQUE7QUNWSjtBRGFFO0VBQ0UsV0FBQTtFQUNBLFlBQUE7RUFDQSxpQkFBQTtFQUNBLGVBQUE7QUNYSjtBRGNFO0VBQ0Usd0JBQUE7RUFDQSxlQUFBO0FDWko7QURlRTtFQUNFLGFBQUE7QUNiSjtBRGdCRTtFQUNFLGdCQUFBO0FDZEo7QURpQkU7RUFDRSxnQkFBQTtBQ2ZKO0FEa0JFO0VBQ0Usb0JBQUE7RUFDQSxzQkFBQTtBQ2hCSjtBRG1CRTtFQUNFLDJCQUFBO0FDakJKO0FEcUJJO0VBQ0UsYUFBQTtBQ25CTjtBRHVCRTtFQUNFLGtDQUFBO0FDckJKIiwiZmlsZSI6InNyYy9hc3NldHMvc2Nzcy9tZXNzYWdlcy1saXN0LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJhbC1tZXNzYWdlcy1saXN0IHtcbiAgLmhlYWRlciB7XG4gICAgbWFyZ2luLXRvcDogMHB4O1xuICB9XG5cbiAgLmZyb20sIC5zdWJqZWN0IHtcbiAgICBmbGV4LWdyb3c6IDE7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgfVxuXG4gIC5zdWJqZWN0IHtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gIH1cblxuICAubWFyZ2luLXRvcCB7XG4gICAgbWFyZ2luLXRvcDogMHB4O1xuICB9XG5cbiAgLmRhdGUge1xuICAgIGp1c3RpZnktY29udGVudDogcmlnaHQ7XG4gIH1cblxuICAuZmxhZ3Mge1xuICAgIGp1c3RpZnktY29udGVudDogcmlnaHQ7XG4gICAgLy8gbWFyZ2luLXRvcDogNHB4O1xuICAgIG1hcmdpbi1yaWdodDogNHB4O1xuICB9XG5cbiAgLmZhLXN0YXIge1xuICAgIGZvbnQtc2l6ZTogMC45ZW07XG4gICAgcGFkZGluZy1yaWdodDogNXB4O1xuICB9XG5cbiAgLnVucmVhZCB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIH1cblxuICAudWktaW5wdXRncm91cCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIC5mYS10aW1lcyB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICByaWdodDogMzhweDtcbiAgICAgIHRvcDogOXB4O1xuICAgIH1cbiAgfVxuXG4gIC5yaWdodCB7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIH1cblxuICAuYXZhdGFyIHtcbiAgICB3aWR0aDogNDBweDtcbiAgICBoZWlnaHQ6IDQwcHg7XG4gICAgbWFyZ2luLXJpZ2h0OiA4cHg7XG4gICAgbWFyZ2luLXRvcDogOHB4O1xuICB9XG5cbiAgLm1lc3NhZ2Uge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgLSA0OHB4KTtcbiAgICBtYXJnaW4tdG9wOiA4cHg7XG4gIH1cblxuICAuZmxleCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgfVxuXG4gIHRkIHtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICB9XG5cbiAgLnVpLW92ZXJsYXlwYW5lbCB7XG4gICAgbWF4LXdpZHRoOiA0MDBweDtcbiAgfVxuXG4gIC5maXgtc2VhcmNoLWZvcm0gLnVpLW92ZXJsYXlwYW5lbCB7XG4gICAgdG9wOiA1MHB4ICFpbXBvcnRhbnQ7XG4gICAgbGVmdDogMTA3cHggIWltcG9ydGFudDtcbiAgfVxuXG4gIC51aS1kYXRlcGlja2VyIHtcbiAgICBtaW4td2lkdGg6IDMwMHB4ICFpbXBvcnRhbnQ7XG4gIH1cblxuICAuY29tYmluZWQtdmlldyB7XG4gICAgLnVpLXBhZ2luYXRvci1maXJzdCwgLnVpLXBhZ2luYXRvci1sYXN0IHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuICB9XG5cbiAgdGQuaGlnaGxpZ2h0IHtcbiAgICBib3JkZXItcmlnaHQ6IDVweCBzb2xpZCAhaW1wb3J0YW50O1xuICB9XG59XG4iLCJhbC1tZXNzYWdlcy1saXN0IC5oZWFkZXIge1xuICBtYXJnaW4tdG9wOiAwcHg7XG59XG5hbC1tZXNzYWdlcy1saXN0IC5mcm9tLCBhbC1tZXNzYWdlcy1saXN0IC5zdWJqZWN0IHtcbiAgZmxleC1ncm93OiAxO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG59XG5hbC1tZXNzYWdlcy1saXN0IC5zdWJqZWN0IHtcbiAgZm9udC1zaXplOiAxOHB4O1xufVxuYWwtbWVzc2FnZXMtbGlzdCAubWFyZ2luLXRvcCB7XG4gIG1hcmdpbi10b3A6IDBweDtcbn1cbmFsLW1lc3NhZ2VzLWxpc3QgLmRhdGUge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHJpZ2h0O1xufVxuYWwtbWVzc2FnZXMtbGlzdCAuZmxhZ3Mge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHJpZ2h0O1xuICBtYXJnaW4tcmlnaHQ6IDRweDtcbn1cbmFsLW1lc3NhZ2VzLWxpc3QgLmZhLXN0YXIge1xuICBmb250LXNpemU6IDAuOWVtO1xuICBwYWRkaW5nLXJpZ2h0OiA1cHg7XG59XG5hbC1tZXNzYWdlcy1saXN0IC51bnJlYWQge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbmFsLW1lc3NhZ2VzLWxpc3QgLnVpLWlucHV0Z3JvdXAge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5hbC1tZXNzYWdlcy1saXN0IC51aS1pbnB1dGdyb3VwIC5mYS10aW1lcyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcmlnaHQ6IDM4cHg7XG4gIHRvcDogOXB4O1xufVxuYWwtbWVzc2FnZXMtbGlzdCAucmlnaHQge1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn1cbmFsLW1lc3NhZ2VzLWxpc3QgLmF2YXRhciB7XG4gIHdpZHRoOiA0MHB4O1xuICBoZWlnaHQ6IDQwcHg7XG4gIG1hcmdpbi1yaWdodDogOHB4O1xuICBtYXJnaW4tdG9wOiA4cHg7XG59XG5hbC1tZXNzYWdlcy1saXN0IC5tZXNzYWdlIHtcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDQ4cHgpO1xuICBtYXJnaW4tdG9wOiA4cHg7XG59XG5hbC1tZXNzYWdlcy1saXN0IC5mbGV4IHtcbiAgZGlzcGxheTogZmxleDtcbn1cbmFsLW1lc3NhZ2VzLWxpc3QgdGQge1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuYWwtbWVzc2FnZXMtbGlzdCAudWktb3ZlcmxheXBhbmVsIHtcbiAgbWF4LXdpZHRoOiA0MDBweDtcbn1cbmFsLW1lc3NhZ2VzLWxpc3QgLmZpeC1zZWFyY2gtZm9ybSAudWktb3ZlcmxheXBhbmVsIHtcbiAgdG9wOiA1MHB4ICFpbXBvcnRhbnQ7XG4gIGxlZnQ6IDEwN3B4ICFpbXBvcnRhbnQ7XG59XG5hbC1tZXNzYWdlcy1saXN0IC51aS1kYXRlcGlja2VyIHtcbiAgbWluLXdpZHRoOiAzMDBweCAhaW1wb3J0YW50O1xufVxuYWwtbWVzc2FnZXMtbGlzdCAuY29tYmluZWQtdmlldyAudWktcGFnaW5hdG9yLWZpcnN0LCBhbC1tZXNzYWdlcy1saXN0IC5jb21iaW5lZC12aWV3IC51aS1wYWdpbmF0b3ItbGFzdCB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5hbC1tZXNzYWdlcy1saXN0IHRkLmhpZ2hsaWdodCB7XG4gIGJvcmRlci1yaWdodDogNXB4IHNvbGlkICFpbXBvcnRhbnQ7XG59Il19 */\";","export default \"al-settings .flex {\\n  display: flex;\\n  align-items: center;\\n}\\nal-settings .flex button {\\n  margin-left: 5px;\\n}\\nal-settings .flex:not(:last-child) {\\n  margin-bottom: 20px;\\n}\\nal-settings .ui-float-label {\\n  width: 100%;\\n}\\nal-settings .ui-panel {\\n  margin-bottom: 15px;\\n}\\nal-settings .right {\\n  margin-left: 5px;\\n}\\nal-settings p-message {\\n  width: 153px;\\n}\\nal-settings .invalid {\\n  border: 1px solid red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2xpeGEvcHJvZ3JhbXMvYWZ0ZXJsb2dpYy1jbGllbnQvc3JjL2Fzc2V0cy9zY3NzL3NldHRpbmdzLnNjc3MiLCJzcmMvYXNzZXRzL3Njc3Mvc2V0dGluZ3Muc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDRTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtBQ0FKO0FERUk7RUFDRSxnQkFBQTtBQ0FOO0FER0U7RUFDRSxtQkFBQTtBQ0RKO0FESUU7RUFDRSxXQUFBO0FDRko7QURLRTtFQUNFLG1CQUFBO0FDSEo7QURNRTtFQUNFLGdCQUFBO0FDSko7QURPRTtFQUNFLFlBQUE7QUNMSjtBRFFFO0VBQ0UscUJBQUE7QUNOSiIsImZpbGUiOiJzcmMvYXNzZXRzL3Njc3Mvc2V0dGluZ3Muc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImFsLXNldHRpbmdzIHtcbiAgLmZsZXgge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcblxuICAgIGJ1dHRvbiB7XG4gICAgICBtYXJnaW4tbGVmdDogNXB4O1xuICAgIH1cbiAgfVxuICAuZmxleDpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICB9XG5cbiAgLnVpLWZsb2F0LWxhYmVsIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuXG4gIC51aS1wYW5lbCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTVweDtcbiAgfVxuICBcbiAgLnJpZ2h0IHtcbiAgICBtYXJnaW4tbGVmdDogNXB4O1xuICB9XG5cbiAgcC1tZXNzYWdlIHtcbiAgICB3aWR0aDogMTUzcHg7XG4gIH1cblxuICAuaW52YWxpZCB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgcmVkO1xuICB9XG59XG4iLCJhbC1zZXR0aW5ncyAuZmxleCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5hbC1zZXR0aW5ncyAuZmxleCBidXR0b24ge1xuICBtYXJnaW4tbGVmdDogNXB4O1xufVxuYWwtc2V0dGluZ3MgLmZsZXg6bm90KDpsYXN0LWNoaWxkKSB7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5hbC1zZXR0aW5ncyAudWktZmxvYXQtbGFiZWwge1xuICB3aWR0aDogMTAwJTtcbn1cbmFsLXNldHRpbmdzIC51aS1wYW5lbCB7XG4gIG1hcmdpbi1ib3R0b206IDE1cHg7XG59XG5hbC1zZXR0aW5ncyAucmlnaHQge1xuICBtYXJnaW4tbGVmdDogNXB4O1xufVxuYWwtc2V0dGluZ3MgcC1tZXNzYWdlIHtcbiAgd2lkdGg6IDE1M3B4O1xufVxuYWwtc2V0dGluZ3MgLmludmFsaWQge1xuICBib3JkZXI6IDFweCBzb2xpZCByZWQ7XG59Il19 */\";","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nimport { LogLevel } from '../ts/models';\n\nexport const environment = {\n  production: false,\n  logLevel: LogLevel.DEBUG,\n  logStack: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { environment } from './environments/environment';\nimport {Main} from './ts/modules/main';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(Main)\n  .catch(err => console.log(err));\n","import {EventEmitter, Injector, Provider, SimpleChanges, ComponentFactoryResolver, ApplicationRef, ComponentRef, EmbeddedViewRef, ElementRef} from '@angular/core';\nimport {TestBed} from '@angular/core/testing';\nimport {Router} from '@angular/router';\nimport {Observable, Subscription} from 'rxjs';\nimport {CycleType, METADATA, NgInject} from './decorators';\nimport {Logger, LoggingInstance} from './services/logging';\nimport {Loading} from './components/loading';\nimport {MessageService, BlockableUI} from 'primeng/api';\nimport {BlockUI} from 'primeng/blockui';\n\nclass BlockableComponent implements BlockableUI {\n  public el: HTMLElement;\n  public getBlockableElement() {\n    return this.el;\n  }\n}\n\nBlockUI.prototype.block = function() {\n  if (this.target) {\n    const el = this.target.getBlockableElement ? this.target.getBlockableElement() : this.target;\n    el.appendChild(this.mask.nativeElement);\n    let style = this.target.style || {};\n    style.position = 'relative';\n    this.target.style = style;\n  }\n  else {\n    document.body.appendChild(this.mask.nativeElement);\n  }\n  if (this.autoZIndex) {\n    this.mask.nativeElement.style.zIndex = String(this.baseZIndex + (10000));\n  }\n}\n\nexport class Statics {\n  public static injector: Injector;\n}\n\nclass BaseClassWithDecorations {\n  public static UUID(): string {\n    return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n  protected __resolveDecorations__(protoName: string, component: any, callback: Function) {\n    if (component.name == '') {\n      return ;\n    }\n    const values: Map<string, Array<Object>> = METADATA.get(component) || new Map<string, Array<Object>>();\n    if (Array.isArray(values.get(protoName))) {\n      values.get(protoName).forEach(<any>callback.bind(this));\n    }\n\n    this.__resolveDecorations__(protoName, component.__proto__, callback);\n  }\n\n  protected __resolveInjectors__() {\n    this.__resolveDecorations__('__injectors__', this.constructor, (obj: Object) => this[obj['prop']] = Statics.injector.get(obj['arg']));\n  }\n}\n\nexport class BaseClass extends BaseClassWithDecorations {\n\n  protected _logger: Logger = LoggingInstance.logger;\n\n  constructor() {\n    super();\n    this.__resolveInjectors__();\n  }\n}\n\nexport class BaseComponent extends BaseClass {\n  @NgInject(Router) protected _router: Router;\n  @NgInject(<any>ComponentFactoryResolver) private __factoryResolver__: ComponentFactoryResolver;\n  @NgInject(ApplicationRef) private __appRef__: ApplicationRef;\n  @NgInject(MessageService) private _toast: MessageService;\n\n  public get view(): any {\n    return this;\n  }\n\n  private __cycles__: Map<string, Array<string>> = new Map<string, Array<string>>();\n  private __subscriptions__: Array<Subscription> = [];\n  private __loadingComponent__: ComponentRef<any> = null;\n\n  protected _isValid: boolean = true;\n\n  constructor() {\n    super();\n    this.__resolveDecorations__('__cycles__', this.constructor, (obj: Object) => {\n      if (!this.__cycles__.get(obj['arg'])) {\n        this.__cycles__.set(obj['arg'], []);\n      }\n      this.__cycles__.get(obj['arg']).push(obj['prop']);\n    });\n  }\n\n  private _runCycle(cycle: CycleType, args?: any) {\n    const cycles = [].concat(this.__cycles__.get(cycle) || []);\n    cycles.reverse().forEach(method => this[method](args));\n  }\n\n  private ngOnDestroy() {\n    this._runCycle('destroy');\n    this.__subscriptions__.forEach(s => s.unsubscribe());\n  }\n\n  private ngAfterViewInit() {\n    this._runCycle('afterViewInit');\n  }\n\n  private ngOnChanges(changes: SimpleChanges) {\n    this._runCycle('change', changes);\n  }\n\n  protected async _handleError(err: Error) {\n    this.hideLoading();\n    console.error(err);\n    this.alert(err.message || err['error'] || err.name || err.constructor.name, '');\n  }\n\n  private async ngOnInit() {\n    this._runCycle('init');\n  }\n\n  protected softRefresh() {\n    this.ngOnDestroy();\n    this.ngOnInit();\n  }\n\n  protected connect<T>(obs: Observable<T>, callback: (t: T) => void) {\n    this.__subscriptions__.push(obs.subscribe(callback));\n  }\n\n  protected navigate(url: string): Promise<boolean>{\n    return this._router.navigateByUrl(url);\n  }\n\n  protected showLoading(el?: ElementRef<any>) {\n    this.__loadingComponent__ = this.__factoryResolver__.resolveComponentFactory(Loading).create(Statics.injector);\n    if (!el && document.querySelectorAll('al-loading').length > 0) {\n      return ;\n    }\n    if (el) {\n      const component = new BlockableComponent();\n      component.el = el.nativeElement;\n      this.__loadingComponent__.instance.target = component;\n    }\n    this.__loadingComponent__.instance.uuid = BaseComponent.UUID();\n    this.__loadingComponent__.instance.initMe();\n    this.__appRef__.attachView(this.__loadingComponent__.hostView);\n    const node = (this.__loadingComponent__.hostView as EmbeddedViewRef<any>).rootNodes[0];\n    document.body.appendChild(node);\n  }\n\n  protected hideLoading() {\n    if (!this.__loadingComponent__) {\n      return ;\n    }\n    this.__appRef__.detachView(this.__loadingComponent__.hostView);\n    const el = document.querySelectorAll('al-loading');\n    el.forEach(e => document.body.removeChild(e));\n    this.__loadingComponent__ = null;\n  }\n\n  protected get isJobPage(): boolean {\n    return this._router.url.match(/job$/) ? true : false;\n  }\n\n  protected alert(title: string, message: string, severity: 'error' | 'success' = 'success') {\n    this._toast.add({severity: severity, summary: title, detail: message, key: 'abc'});\n  }\n}\n\nexport class BaseTestUnit extends BaseClassWithDecorations {\n  protected initialized = new EventEmitter();\n  constructor(private _providers: Array<Provider>) {\n    super();\n  }\n\n  private __init__() {\n    TestBed.resetTestingModule();\n    TestBed.configureTestingModule({providers: this._providers});\n    Statics.injector = TestBed;\n    this.__resolveInjectors__();\n    this.initialized.emit();\n  }\n}\n","import {Component, Input} from '@angular/core';\nimport {FilesystemDirectory, FileWriteResult} from '@capacitor/core';\nimport {WebIntent} from '@ionic-native/web-intent/ngx';\nimport {BaseComponent} from '../base';\nimport {NgInject, NgCycle} from '../decorators';\nimport {Account, Attachment, MessageBody} from '../models';\nimport {Api} from '../services/api';\nimport {Nextcloud} from '../services/nextcloud';\nimport {Mails} from '../services/mails';\nimport {Settings} from '../services/settings';\n\n@Component({\n  selector: 'al-attachments',\n  templateUrl: '../../html/attachments.html',\n  styleUrls: ['../../assets/scss/attachments.scss']\n})\nexport class Attachments extends BaseComponent {\n  @Input() public attachments: Array<Attachment> = [];\n  @Input() public message: MessageBody = null;\n  @Input() public account: Account;\n\n  @NgInject(Api) private _api: Api;\n  @NgInject(WebIntent) private _intent: WebIntent;\n  @NgInject(Nextcloud) private _nc: Nextcloud;\n  @NgInject(Mails) private _mails: Mails;\n  @NgInject(Settings) private _settings: Settings;\n  protected _attDownloading: boolean = false;\n  protected _isCloud: boolean = false;\n\n  @NgCycle('init')\n  protected _initMe() {\n    this._isCloud = this._nc.isNextcloud();\n  }\n\n  protected async _doDownload(a: Attachment, where: FilesystemDirectory): Promise<FileWriteResult> {\n    this._attDownloading = true;\n    const fileName = this.message ? `${this.message.Uid}-${a.FileName}` : a.FileName;\n    const result = await this._api.downloadAttachment(this.account, a, fileName, where, this.message);\n    this._attDownloading = false;\n    return result;\n  }\n\n  protected async _downloadAttachment(att: Attachment) {\n    const result = await this._doDownload(att, FilesystemDirectory.Documents);\n    if (result == null) {\n      return ;\n    }\n    this.alert('Attachment downloaded', result.uri);\n  }\n\n  protected async _viewAttachment(a: Attachment) {\n    const result = await this._doDownload(a, FilesystemDirectory.Documents);\n    if (result == null) {\n      return ;\n    }\n    this._intent.startActivity({\n      action: this._intent.ACTION_VIEW, \n      url: result.uri, \n      type: a.MimeType,\n    });\n  }\n\n  protected _removeAttachment(a: Attachment) {\n    const idx = this.attachments.findIndex(_a => _a.Actions.view == a.Actions.view);\n    if (idx != -1) {\n      this.attachments.splice(idx, 1);\n    }\n  }\n\n  protected async _uploadToCloud(att: Attachment) {\n    if (!this.message) {\n      return ;\n    }\n\n    if (!att.Actions.download) {\n      throw 'NO_DOWNLOAD_ACTION';\n    }\n    const server = await this._settings.getServer();\n    const folder = await this._nc.pickFolder();\n    console.log('folder is', folder);\n    const a = this._mails.accountById(this.message.AccountID);\n    const content = await this._api.getAttachmentContent(a, `${server.url}/${att.Actions.download}`);\n    const path = `${folder}/${att.FileName}`;\n    const uPath = await this._nc.upload(path, content);\n    this.alert('File uploaded to the cloud', uPath);\n  }\n}\n","import { BaseClass } from '../base';\nimport {Component, Input} from '@angular/core';\nimport {Contact} from '../models';\n\n@Component({\n  selector: 'al-avatar',\n  templateUrl: '../../html/avatar.html',\n  styleUrls: ['../../assets/scss/avatar.scss'],\n})\nexport class Avatar extends BaseClass {\n  @Input() contact: Contact;\n}\n","import {Component, ElementRef, EventEmitter, Input, Output, ViewChild} from '@angular/core';\nimport {AutoComplete} from 'primeng/autocomplete';\nimport {interval, Observable, Subscription} from 'rxjs';\nimport {debounceTime, finalize, map, take, takeWhile, tap} from 'rxjs/operators';\nimport {BaseComponent} from '../base';\nimport {NgCycle, NgInject} from '../decorators';\nimport {Account, COMBINED_ACCOUNT_ID, ComposeNotifyType, MessageComposeType, Contact, ContactConvertor, DisplayContact, MessageBody, MessageCompose, MessageComposeConvertor, MessageSaveConvertor, ComposeType, ModelFactory, to, UploadResult, FileResult} from '../models';\nimport {Api} from '../services/api';\nimport {Contacts} from '../services/contacts';\nimport {FileService} from '../services/file';\nimport {Mails} from '../services/mails';\nimport {Settings} from '../services/settings';\nimport {Utils} from '../services/utils';\nimport {Editor} from './editor';\nimport {Nextcloud} from '../services/nextcloud';\n\n/**\n * * button for editing drafts.\n */\n\ntype ACContact = Contact & {\n  display: string;\n}\n\n@Component({\n  selector: 'al-compose',\n  templateUrl: '../../html/compose.html',\n  styleUrls: ['../../assets/scss/compose.scss']\n})\nexport class Compose extends BaseComponent {\n  @Input() public message: MessageBody;\n  @Input() public to: Array<Contact>;\n  @Input() public composeType: ComposeType;\n\n  @Output() notify: EventEmitter<ComposeNotifyType> = new EventEmitter<ComposeNotifyType>();\n\n  @NgInject(Contacts) private _contactsService: Contacts;\n  @NgInject(Settings) private _settings: Settings;\n  @NgInject(Api) private _api: Api;\n  @NgInject(Mails) private _mails: Mails;\n  @NgInject(FileService) private _fileService: FileService;\n  @NgInject(Nextcloud) private _nc: Nextcloud;\n\n  @ViewChild('file', {static: false}) private _file: ElementRef<any>;\n  @ViewChild('editor', {static: false}) private _editor: Editor;\n\n  protected _showCc: boolean = false;\n  protected _contacts: Array<ACContact> = [];\n  private _convertor: ContactConvertor = new ContactConvertor();\n  private _account: Account;\n  protected _type: MessageComposeType;\n  protected _model: MessageCompose;\n  protected _combinedView: boolean = false;\n  private _saveSubscription: Subscription;\n  protected _accounts$: Observable<Array<Account>>;\n  protected _attaching: boolean = false;\n  protected _cloudAttaching: boolean = false;\n  protected _incloud: boolean = false;\n\n  @NgCycle('init')\n  protected _initMe() {\n    this._accounts$ = this._mails.accounts$.pipe(\n      tap(accounts => !this._account && setTimeout(() => this._account = accounts[0])),\n      map(accounts => accounts.filter(a => a.AccountID != COMBINED_ACCOUNT_ID)),\n    );\n    this.connect(this._mails.currentAccount$.pipe(take(1)), async account => {\n      this._account = this.message ? this._mails.accountById(this.message.AccountID) : account;\n      if (this._account.AccountID == COMBINED_ACCOUNT_ID) {\n        this._combinedView = true;\n        this._account = undefined;\n      }\n      await new Promise(resolve => setTimeout(resolve));\n      this._setModel();\n      this._start();\n      this._waitEditorReady();\n      this._type = await this._settings.getMessageType();\n    });\n    this._incloud = this._nc.isNextcloud();\n  }\n\n  private _setModel() {\n    const conv = new MessageComposeConvertor();\n    conv.composeType = this.composeType;\n    conv.currentEmail = this._account ? this._account.Email : '';\n    this._model = conv.convert(this.message);\n    if (this._model.Cc && ['reply', 'forward'].indexOf(this.composeType) != -1) {\n      this._model.Bcc = [];\n      this._model.Cc = [];\n    }\n    if (Array.isArray(this.to) && this.to.length > 0) {\n      const conv = new ContactConvertor();\n      this._model.To = (this.to as Array<DisplayContact>).map(c => conv.convert(c));\n    }\n  }\n\n  private async _start() {\n    if (!this._account) {\n      return ;\n    }\n\n    this._setModel();\n    if (this._model.Cc.length > 0) {\n      this._showCc = true;\n    }\n    if (Utils.isDraftReply(this._model)) {\n      const orig = await this._api.getOriginalDraftReply(this._account, this._model);\n      this._model.InReplyTo = orig.MessageId;\n    }\n    await this._api.reloadAttachments(this._account, this._model.Attachments);\n    this._contacts = this._contactsService.contacts.map(c => this._convertor.convert(c));\n  }\n\n  private _waitEditorReady() {\n    interval(100).pipe(\n      takeWhile(() => !this._editor),\n      finalize(() => this._viewInit()),\n    ).toPromise();\n  }\n\n  protected _viewInit() {\n    this._saveSubscription = this._editor.modelChange.pipe(\n      debounceTime(2000),\n    ).subscribe(() => this._save());\n  }\n\n  @NgCycle('destroy')\n  protected _destroy() {\n    if (this._saveSubscription) {\n      this._saveSubscription.unsubscribe();\n    }\n  }\n\n  protected _filterContact(ev: {query: string}) {\n    this._contacts = this._contactsService.contacts\n      .filter(c => c.Email.toLowerCase().indexOf(ev.query.toLowerCase()) != -1)\n      .map(c => this._convertor.convert(c));\n\n    this._contacts.push(ModelFactory.instance(<DisplayContact>{Email: ev.query, display: ev.query}, DisplayContact) as DisplayContact);\n  }\n\n  protected async _send() {\n    if (this._model.To.length == 0) {\n      this.alert('No recepient', 'Please add a recipient to receive the e-mail');\n      return ;\n    }\n    if (!this._mails.validate(this._model.To.concat(this._model.Cc).concat(this._model.Bcc))) {\n      this.alert('Invalid address', 'Please check your addressed');\n      return ;\n    }\n    this._destroy();\n    this.showLoading();\n    const conv = new MessageSaveConvertor();\n    const model = conv.convert(this._model);\n    const [err, result] = await to(this._api.sendMessage(this._account, model));\n    this.hideLoading();\n    if (err) {\n      this._save();\n      this.alert('Error sending e-mail', err.message, 'error');\n      return ;\n    }\n    if (!result) {\n      this._save();\n      this.alert('Error sending e-mail', '', 'error');\n      return ;\n    }\n    this.notify.emit('sent');\n  }\n\n  protected async _save() {\n    this._destroy();\n    this.showLoading();\n    const conv = new MessageSaveConvertor();\n    const model = conv.convert(this._model);\n    const result = await this._api.saveMessage(this._account, model);\n    this._model.DraftUid = result.NewUid;\n    this.hideLoading();\n    this._viewInit();\n  }\n\n  private async _doAttach(promises: Array<Promise<UploadResult>>) {\n    const attachments = await Promise.all(promises);\n    this._model.Attachments.push.apply(this._model.Attachments, attachments.map(a => a.Attachment));\n  }\n\n  protected async _attach() {\n    const files = await this._fileService.get(this._file.nativeElement);\n    this._attaching = true;\n    const p: Array<Promise<UploadResult>> = [];\n    for (let i = 0; i < files.length; i++) {\n      p.push(this._api.uploadAttachment(this._account, files[i]));\n    }\n    await this._doAttach(p);\n    this._attaching = false;\n  }\n\n  protected async _cloudAttach() {\n    const files = await this._nc.pickFile();\n    this._cloudAttaching = true;\n    console.log('files are', files);\n    let p = [];\n    files.forEach(file => {\n      p.push(this._nc.download(file));\n    });\n    const contents = await Promise.all(p);\n\n    p = [];\n\n    files.forEach((file, idx) => {\n      // console.log('downloaded content', content);\n      // const data = await this._fileService.read(new Blob([content]))\n      const f = new FileResult();\n      f.content = new File([contents[idx]], file.replace(/^.*\\/([^\\/]+)$/, '$1'));\n      p.push(this._api.uploadData(this._account, f));\n    });\n    await this._doAttach(p);\n    this._cloudAttaching = false;\n  }\n\n  protected async _blur(a: AutoComplete) {\n    if (Array.isArray(a.suggestions) && a.suggestions.length > 0) {\n      await new Promise(resolve => setTimeout(resolve));\n      if (!a.focus) {\n        a.selectItem(a.suggestions[0], false);\n      }\n    }\n    a.suggestions = [];\n  }\n\n  protected _focus(a: AutoComplete) {\n    a.suggestions = [];\n  }\n}\n","import { BaseComponent } from '../base';\nimport {Component, Input, Output, EventEmitter, ViewChild, ElementRef} from '@angular/core';\nimport {NgCycle} from '../decorators';\n\n@Component({\n  selector: 'al-editor',\n  templateUrl: '../../html/editor.html',\n  styleUrls: ['../../assets/scss/editor.scss']\n})\nexport class Editor extends BaseComponent {\n  @Input() public model: string;\n  @Output() public modelChange: EventEmitter<string> = new EventEmitter<string>();\n\n  protected _html: string;\n  @ViewChild('editor') private _editor: ElementRef<any>;\n\n  @NgCycle('init')\n  protected _initMe() {\n    this._html = this.model;\n  }\n\n  protected _keyup() {\n    this.model = this._editor.nativeElement.innerHTML;\n    this.modelChange.emit(this.model);\n  }\n}\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\nimport {take} from 'rxjs/operators';\nimport {BaseComponent} from '../base';\nimport {NgInject} from '../decorators';\nimport {Account, Folder, FolderType, COMBINED_ACCOUNT_ID} from '../models';\nimport {Api} from '../services/api';\nimport {Mails} from '../services/mails';\n\n@Component({\n  selector: 'al-folders-list',\n  templateUrl: '../../html/folders-list.html',\n  styleUrls: ['../../assets/scss/folders-list.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class FoldersList extends BaseComponent {\n  @NgInject(Mails) private _mails: Mails;\n  @NgInject(Api) private _api: Api;\n  @Input() public set account(a: Account) {\n    this._loading = true;\n    if (!a) {\n      return ;\n    }\n    this._account = a;\n    this._account.Folders$.pipe(take(1)).subscribe(() => this._loading = false);\n    this._init();\n  }\n\n  protected async _init() {\n    const inbox = await this._api.folderByType(FolderType.Inbox, this._account)\n    this._mails.folderChanged$.emit(inbox);\n  }\n\n  protected _account: Account;\n  protected _loading: boolean = true;\n  protected _selected: Folder = null;\n\n  protected _select(folder: Folder) {\n    if (!folder) {\n      return ;\n    }\n\n    this._selected = folder;\n    this._mails.folderChanged$.emit(folder);\n  }\n}\n","import {Component, Input, ChangeDetectorRef} from '@angular/core';\nimport {BlockableUI} from 'primeng/api/public_api';\nimport {NgCycle} from '../decorators';\n\n@Component({\n  selector: 'al-loading',\n  templateUrl: '../../html/loading.html'\n})\nexport class Loading {\n  @Input() public target: BlockableUI;\n\n  constructor(private _cd: ChangeDetectorRef) {}\n\n  @NgCycle('init')\n  public initMe() {\n    if (!this.target) {\n      this.target = <any>document.body;\n    }\n    setTimeout(() => this._cd.detectChanges());\n  }\n}\n","import {Component, ElementRef, EventEmitter, Input, Output, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {FilesystemDirectory} from '@capacitor/core';\nimport {from} from 'rxjs';\nimport {switchMap, take, tap} from 'rxjs/operators';\nimport {BaseComponent} from '../base';\nimport {NgCycle, NgInject} from '../decorators';\nimport {Account, Attachment, ComposeType, Contact, Message as Model, MessageBody, MessageNotify, ModelFactory, ServerSetting, FolderType} from '../models';\nimport {Api} from '../services/api';\nimport {Mails} from '../services/mails';\nimport {Settings} from '../services/settings';\nimport {Utils} from '../services/utils';\n\n@Component({\n  selector: 'al-message',\n  templateUrl: '../../html/message.html',\n  styleUrls: ['../../assets/scss/message.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class Message extends BaseComponent {\n  @NgInject(Api) private _api: Api;\n  @NgInject(Mails) private _mails: Mails;\n  @NgInject(Settings) private _settings: Settings;\n  @ViewChild('messageBody', {static: false}) private _body: ElementRef<any>;\n  @Input() public set message(m: Model) {\n    this._message = m as MessageBody;\n    this._originalMessage = m;\n    this._html = '';\n    if (!m) {\n      return ;\n    }\n    if (this._body) {\n      this._body.nativeElement.innerHTML = '';\n    }\n    this._loading = true;\n    this._detailsHidden = true;\n    this._quotedText = false;\n    this._hasImages = false;\n    // Keep the real account id (in case of combined view)\n    this._accountId = m.AccountID;\n    this.connect(this._mails.folderChanged$, f => this._isDraft = f.Type == FolderType.Drafts);\n    this._mails.currentAccount$.pipe(\n      take(1),\n      tap(account => this._account = account),\n      switchMap(() => from(this._api.getMessageBody(this._account, m))),\n      take(1),\n    ).subscribe(body => {\n      this._message = body;\n      this._appendBody();\n      if (!m.IsSeen) {\n        this._api.markRead(this._account, m.Folder, [m], true);\n      }\n    });\n  }\n\n  @Output() public notify: EventEmitter<MessageNotify> = new EventEmitter<MessageNotify>();\n\n  protected _originalMessage: Model;\n  protected _quotedText: boolean = false;\n  protected _isDraft: boolean = false;\n  protected _detailsHidden: boolean = true;\n  private _account: Account;\n  protected _hasImages: boolean = false;\n  protected _html: string;\n  protected _server: ServerSetting;\n  private _accountId: string;\n\n  @NgCycle('init')\n  protected async _initMe() {\n    this._server = await this._settings.getServer();\n  }\n\n  private async _appendBody() {\n    const el: HTMLElement = this._body.nativeElement;\n    this._html = this._message.Html || this._message.Plain;\n    setTimeout(() => {\n      this._quotedText = el.querySelector('blockquote') != null;\n      this._hasImages = el.querySelectorAll(\"*[data-x-src]\").length > 0;\n      this._loading = false;\n\n      Array.from(el.querySelectorAll('a'))\n        .filter(el => el.href.match(\"^mailto:\"))\n        .forEach(a => {\n          const email = a.href.replace(/^mailto:(.*)$/g, '$1');\n          a.href = \"javascript: \";\n          a.target = '_self';\n          a.onclick = () => this._emailClick(ModelFactory.instance({Email: email}, Contact) as Contact);\n        });\n\n      const att = this._message.Attachments;\n\n      if (!att || !Array.isArray(att.Collection)) {\n        return ;\n      }\n\n      const a = this._mails.accountById(this._accountId);\n      const user = Utils.userByEmail(this._server.users, a.Email);\n      att.Collection\n        .filter(a => a.CID)\n        .map(a => <{a: Attachment, img: HTMLImageElement}>{a: a, img: el.querySelector(`*[data-x-src-cid=\"${a.CID}\"]`)})\n        .filter(obj => !!obj.a && !!obj.img)\n        .forEach(obj => {\n          obj.img.src = `${this._server.url}/${obj.a.Actions.view}`;\n          obj.img.onerror = () => {\n            fetch(\n              `${this._server.url}/${obj.a.Actions.view}`,\n              {headers: {Authorization: `Bearer ${user.token}`}}\n            )\n              .then(img => img.blob())\n              .then(d => obj.img.src = window.URL.createObjectURL(d));\n          }\n        });\n\n      this.hideLoading();\n    });\n  }\n\n  protected _message: MessageBody;\n  protected _loading: boolean = true;\n\n  protected _showHiddenContent() {\n    this._quotedText = false;\n  }\n\n  protected _emailClick(c: Contact) {\n    const ev = ModelFactory.instance(<MessageNotify>{contact: c, type: 'new'}, MessageNotify) as MessageNotify;\n    this.notify.emit(ev);\n  }\n\n  protected _action(type: ComposeType) {\n    const ev = ModelFactory.instance(<MessageNotify>{message: this._message, type: type}, MessageNotify) as MessageNotify;\n    this.notify.emit(ev);\n  }\n\n  protected async _download() {\n    if (!this._message) {\n      return ;\n    }\n    const result = await this._api.downloadUrl(\n      this._account, `${this._server.url}/${this._message.DownloadAsEmlUrl}`,\n      `${this._message.Uid}.eml`, FilesystemDirectory.Documents, this._message\n    );\n    if (result == null) {\n      return ;\n    }\n\n    this.alert('Message downloaded', result.uri);\n  }\n\n  protected async _star() {\n    if (!this._message || !this._account) {\n      return ;\n    }\n\n    this._message.IsFlagged = !this._message.IsFlagged;\n    await this._api.flag(this._account, this._message.Folder, [this._message], this._message.IsFlagged);\n    this._originalMessage.IsFlagged = this._message.IsFlagged;\n  }\n\n  protected _showImages() {\n    (this._body.nativeElement as HTMLElement).querySelectorAll(\"*[data-x-src]\").forEach(n => n.setAttribute('src', n.getAttribute('data-x-src')))\n    this._hasImages = false;\n  }\n}\n","import {Component, EventEmitter, Input, Output, SimpleChanges, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {LazyLoadEvent} from 'primeng/api/public_api';\nimport {Table} from 'primeng/table/table';\nimport {merge} from 'rxjs';\nimport {skip, tap} from 'rxjs/operators';\nimport {BaseComponent} from '../base';\nimport {NgCycle, NgInject} from '../decorators';\nimport {Account, COMBINED_ACCOUNT_ID, Folder, FolderType, Message, SearchConvertor, SearchModel, to} from '../models';\nimport {Api} from '../services/api';\nimport {Background} from '../services/background';\nimport {Mails} from '../services/mails';\nimport {Settings} from '../services/settings';\nimport {Utils} from '../services/utils';\n\nconst DEFAULT = 'Inbox';\n\n@Component({\n  selector: 'al-messages-list',\n  templateUrl: '../../html/messages-list.html',\n  styleUrls: ['../../assets/scss/messages-list.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MessagesList extends BaseComponent {\n  @Input() public account: Account;\n  @Input() public folder: string;\n  @Input() public fixSearchForm: boolean = false;\n\n  @Output() public notify: EventEmitter<Message> = new EventEmitter<Message>();\n  @Output() public selectionChanged: EventEmitter<Array<Message>> = new EventEmitter<Array<Message>>();\n\n  public get rows(): Array<Message> {\n    return this._messages;\n  }\n\n  @NgInject(Settings) private _settings: Settings;\n  @NgInject(Mails) private _mails: Mails;\n  @NgInject(Api) private _api: Api;\n  @NgInject(Background) private _background: Background;\n  @ViewChild('table', {static: true}) private _table: Table;\n\n  protected _loading: boolean = true;\n  protected _pageSize: number = 0;\n  protected _totalRecords: number = 0;\n  protected _search: SearchModel = new SearchModel();\n  protected _selected: Message;\n  protected _messages: Array<Message> = [];\n  protected _combinedMessages: Array<Message> = [];\n  protected _combinedView: boolean = false;\n  protected _style: string = null;\n  private _oldestMessage: Message = null;\n  private _folder: Folder;\n  private _subscriptions: boolean = false;\n\n  constructor() {\n    super();\n  }\n\n  @NgCycle('init')\n  protected async _initMe(folder?: string) {\n    this.connect(this._api.ready$.pipe(skip(1)), () => {\n      this._subscriptions = false;\n      this.softRefresh();\n    });\n    this._pageSize = await this._settings.getPageSize();\n    if (!this.account) {\n      return ;\n    }\n    this._combinedView = this.account.AccountID == COMBINED_ACCOUNT_ID;\n    const d = this.account.AccountID == COMBINED_ACCOUNT_ID ? FolderType.Inbox : DEFAULT;\n    this._folder = await this._mails.folderById$(this.account, folder || d.toString()).toPromise();\n    this._messages = [];\n    this._reset();\n    this._initSubscriptions();\n  }\n\n  @NgCycle('change')\n  protected _change(changes: SimpleChanges) {\n    if (!this.account) {\n      this._messages = [];\n      return ;\n    }\n\n    if (changes['folder'] && changes['folder'].previousValue && Utils.foldersDiff(changes['folder'].previousValue, changes['folder'].currentValue)) {\n      this._initMe(this.folder);\n      return ;\n    }\n\n    if (changes['account']) {\n      this._initMe();\n    }\n  }\n\n  private _messagesRemoved(messages: Array<Message>) {\n    if (!messages || !Array.isArray(messages)) {\n      return ;\n    }\n\n    const map = messages.map(m => m.Uid);\n\n    this._combinedMessages = this._combinedMessages.filter(m => map.indexOf(m.Uid) == -1);\n    this._table.selection = this._table.selection.filter((m: Message) => map.indexOf(m.Uid) == -1);\n    this.selectionChanged.emit(this._table.selection);\n  }\n\n  private async _initSubscriptions() {\n    if (this._subscriptions) {\n      return ;\n    }\n    this._subscriptions = true;\n    const msgChanged = merge(this._api.messagesDeleted$, this._api.messagesMoved$, this._mails.refresh$);\n    this.connect(\n      msgChanged.pipe(\n        tap(messages => this._messagesRemoved(messages as Array<Message>)),\n      ),\n      () => this._loadMessages(<LazyLoadEvent>{first: this._table.first})\n    );\n    this._background.configure(this._checkMailsAuto.bind(this));\n  }\n\n  private _waitNewMails(): boolean {\n    return this._oldestMessage && this._folder && this._folder.Type == FolderType.Inbox && Utils.emptySearch(this._search);\n  }\n\n  private async _checkMailsAuto() {\n    console.log('checking mails automatically', new Date());\n    if (!this._waitNewMails()) {\n      console.log('not waiting for new messages');\n      return ;\n    }\n    const [err, msgs] = await to(this._api.getMessages(this.account, this._folder.Id, 0, 1));\n    if (err) {\n      throw err;\n    }\n\n    console.log('fetched', msgs.length, new Date());\n    if (!this._waitNewMails() || msgs.length == 0) {\n      return ;\n    }\n\n    if (msgs.filter(m => m.TimeStampInUTC > this._oldestMessage.TimeStampInUTC).length > 0) {\n      this._fetchMailsAuto();\n    }\n  }\n\n  private async _fetchMailsAuto() {\n    if (!this._folder) {\n      return ;\n    }\n    console.log('fetching mails automatically', new Date());\n    const initialType = this._folder.Type;\n    this._messages = await this._fetch(this._table.first, true);\n    console.log('messages fetched', this._messages.length);\n    const selection = ((this._table.selection || []) as Array<Message>).map(s => s.Uid);\n    if (this._folder.Type == FolderType.Inbox && initialType == FolderType.Inbox) {\n      this._mails.showNotifications(this._oldestMessage, this._messages);\n    }\n    this._setOldestMessage();\n    this._table.selection = this._messages.filter(m => selection.indexOf(m.Uid) != -1);\n    this.selectionChanged.emit(this._table.selection);\n  }\n\n  private _setOldestMessage() {\n    if (this._table.first != 0 || !this._folder && this._folder.Type != FolderType.Inbox || !Array.isArray(this._messages) || this._messages.length == 0) {\n      return ;\n    }\n\n    this._oldestMessage = this._messages[0];\n  }\n\n  private async _fetch(first: number, auto: boolean = false): Promise<Array<Message>>{\n    const id = this._folder.Id;\n    let result = await this._api.getMessages(this.account, this._folder.Id, first, this._pageSize, this._search.simple, '', auto);\n    if (this._folder.Id != id) {\n      return this._messages.length > 0 && this._mails.messageInComposedFolder(this._messages[0], this._folder) ? this._messages : [];\n    }\n    if (this.account.AccountID != COMBINED_ACCOUNT_ID) {\n      return result;\n    }\n\n    if (first == 0) {\n      this._combinedMessages = [];\n    }\n\n    const uids = result.map(x => x.Uid);\n    this._combinedMessages = this._combinedMessages.filter(m => uids.indexOf(m.Uid) == -1).concat(result);\n    this._combinedMessages.sort((a, b) => b.TimeStampInUTC - a.TimeStampInUTC);\n    return this._combinedMessages.slice(first, first + this._pageSize);\n  }\n\n  private _reset() {\n    this._combinedMessages = [];\n    this._table.reset();\n    this.selectionChanged.emit([]);\n    this._table.selection = [];\n  }\n\n  protected async _loadMessages(ev: LazyLoadEvent) {\n    this._loading = true;\n    if (this.account == null || this._folder == null) {\n      return ;\n    }\n    this._messages = await this._fetch(ev.first);\n    this._setOldestMessage();\n    this._totalRecords = this._api.lastSearchResults;\n    this._loading = false;\n    this._mails.refreshed$.emit();\n  }\n\n  protected _keyup(ev: KeyboardEvent) {\n    if (ev.keyCode != 13) {\n      return ;\n    }\n    this._reset();\n  }\n\n  protected _advSearch() {\n    const conv = new SearchConvertor();\n    this._search.simple = conv.convert(this._search);\n    this._reset();\n  }\n\n  protected _clearSearch() {\n    this._search = new SearchModel();\n    this._reset();\n  }\n\n  protected _select(row: Message) {\n    this.notify.emit(row);\n    this._selected = row;\n  }\n\n  protected _selectionChanged() {\n    this.selectionChanged.emit(this._table.selection);\n  }\n}\n","import { Type } from '@angular/core';\n\nexport interface Convertor<T> {\n  convert(src: any): T;\n  convertFrom?(src: T): any;\n}\n\nexport type CycleType = 'destroy' | 'afterViewInit' | 'change' | 'init';\n\nexport type TestCase = {method: string, name: string};\n\nexport const TEST_CASES: Map<Function, Array<TestCase>> = new Map<Function, Array<TestCase>>();\nexport const TEST_CASES_ONLY: Map<Function, Array<TestCase>> = new Map<Function, Array<TestCase>>();\n\nexport const METADATA: Map<Function, Map<string, Array<any>>> = new Map<Function, Map<string, Array<any>>>();\n\nexport type DeserializableType<T> = Type<T> | 'date' | Convertor<T>;\n\nfunction __decorate(protoName: string, arg: Type<any> | string | CycleType | DeserializableType<any>) {\n  return function(ctor: any, property: string) {\n    if (!METADATA.get(ctor.constructor)) {\n      METADATA.set(ctor.constructor, new Map<string, Array<string>>());\n    }\n    const m = METADATA.get(ctor.constructor);\n\n    if (typeof(m.get(protoName)) == 'undefined') {\n      m.set(protoName, []);\n    }\n\n    m.get(protoName).push({prop: property, arg: arg});\n  }\n}\n\nexport function NgInject(type: Type<any> | string) {\n  return __decorate('__injectors__', type);\n}\n\nexport function NgCycle(cycle: CycleType) {\n  return __decorate('__cycles__', cycle);\n}\n\nexport function deserialize<T extends Object>(type: DeserializableType<T>) {\n  return __decorate('__deserializers__', type);\n}\n\nexport function deserializers(ctor: Function): Array<any> {\n  if (!METADATA.get(ctor)) {\n    return [];\n  }\n\n  return METADATA.get(ctor).get('__deserializers__');\n}\n\nfunction add_to_testcases(which: Map<Function, Array<TestCase>>, ctor: any, property: string, name?: string) {\n  if (typeof(which.get(ctor.constructor)) == 'undefined') {\n    which.set(ctor.constructor, []);\n  }\n  which.get(ctor.constructor).push({name: name, method: property});\n}\n\nexport function NgTest(name?: string, only: boolean = false) {\n  return function(ctor: any, property: string) {\n    add_to_testcases(only ? TEST_CASES_ONLY : TEST_CASES, ctor, property, name);\n  }\n}\n","import {Type} from '@angular/core';\nimport * as dateFormat from 'dateformat';\nimport {ReplaySubject} from 'rxjs';\nimport {Convertor, deserialize, deserializers} from './decorators';\n\nexport const COMBINED_ACCOUNT_ID = \"-1\";\n\nexport enum LogLevel {DEBUG = 0, INFO = 1, ERROR = 2};\nexport enum FolderType {Inbox = 1, Sent = 2, Drafts = 3, Spam = 4, Trash = 5, Other = 10};\n\nexport type Primitive = boolean | string | number;\nexport type ObjectType<T> = T | Primitive | Array<T | Primitive>;\n\nexport interface Collection<T> {\n  Count: number;\n  Collection: Array<T>;\n}\n\nexport class ModelFactory {\n  private static _primitive(obj: Primitive): Primitive {\n    if (typeof(obj) == 'boolean') {\n      return obj as boolean;\n    }\n\n    if (typeof(obj) == 'string') {\n      return obj as string;\n    }\n\n    if (typeof(obj) == 'number') {\n      return obj as number;\n    }\n  }\n\n  private static _create<T>(json: Object, type: Type<T>): T {\n    const result = new type();\n    Object.keys(json).map(k => k.replace(/^@/g, '')).forEach(k => {\n      const d = deserializers(type).find(d => d.prop == k);\n      const value = json[k] || json['@' + k];\n      if (!d || typeof(value) == undefined || value == null) {\n        result[k] = value;\n        return ;\n      }\n      if (d.arg == 'date') {\n        result[k] = new Date(json[k]);\n        return ;\n      }\n      if (typeof(d.arg) == 'function' && !!d.arg.prototype['convert']) {\n        const convertor: Convertor<any> = new d.arg();\n        result[k] = convertor.convert(value);\n        return ;\n      }\n      result[k] = ModelFactory.instance(value, d.arg);\n    });\n    return result;\n  }\n  public static instance<T>(json: ObjectType<Object>, type?: Type<T>): ObjectType<T> {\n    if (typeof(json) == undefined || json == null) {\n      return null;\n    }\n\n    if (typeof(type) == 'undefined') {\n      if (typeof(json) == 'object' && !Array.isArray(json)) {\n        throw Error('UNKNOWN_TYPE');\n      }\n\n      if (Array.isArray(json)) {\n        return json.map(o => ModelFactory._primitive(o as Primitive) as Primitive);\n      }\n\n      return ModelFactory._primitive(json) as Primitive;\n    }\n\n    if (Array.isArray(json)) {\n      return json.map(j => ModelFactory._create(j, type));\n    }\n    return ModelFactory._create(json, type);\n  }\n}\n\nexport async function to<T>(promise: Promise<T>): Promise<[Error, T]> {\n  try {\n    const data = await promise;\n    return [null, data];\n  }\n  catch (err) {\n    return [err, null];\n  }\n}\n\nexport class UserSetting {\n  email: string;\n  pass: string;\n  token?: string;\n}\n\nexport class ServerSetting {\n  url: string;\n  users: Array<UserSetting>;\n}\n\nexport class HttpResponse {\n  Module: string;\n  Method: string;\n  Result: Object;\n  ErrorCode?: number;\n  ErrorMessage?: string;\n}\n\nexport class Server {\n  EntityId: number;\n  UUID: string;\n  TenantId: number;\n  Name: string;\n  IncomingServer: string;\n  IncomingPort: number;\n  IncomingUseSsl: boolean;\n  OutgoingServer: string;\n  OutgoingPort: number;\n  OutgoingUseSsl: boolean;\n  SmtpAuthType: string;\n  OwnerType: string;\n  Domaina: string;\n  ServerId: number;\n}\n\nexport class Authentication {\n  AuthToken: string;\n}\n\nexport class Folder {\n  Id: string;\n  Name: string;\n  Count?: number;\n  Unread?: number;\n  @deserialize(Folder)\n  SubFolders?: Array<Folder>;\n  AccountID: string;\n  Type?: FolderType;\n}\n\nexport class Contact {\n  DisplayName?: string;\n  Email: string;\n}\n\nexport class Contacts {\n  Count: number;\n  @deserialize(Contact)\n  Collection: Array<Contact>;\n}\n\nexport class Message {\n  Folder: string;\n  AccountID: string;\n  Uid: string;\n  Subject: string;\n  MessageId: string;\n  Size: number;\n  TextSize: number;\n  InternalTimeStampInUTC: number;\n  ReceivedOrDateTimeStampInUTC: number;\n  TimeStampInUTC: number;\n  @deserialize(Contacts)\n  From: Contacts;\n  @deserialize(Contacts)\n  To: Contacts;\n  @deserialize(Contacts)\n  Cc: Contacts;\n  @deserialize(Contacts)\n  Bcc: Contacts;\n  @deserialize(Contacts)\n  ReplyTo: Contacts;\n  IsSeen: boolean;\n  IsFlagged: boolean;\n  IsAnswered: boolean;\n  IsForwarded: boolean;\n  HasAttachments: boolean;\n  HasVcardAttachment: boolean;\n  HasIcalAttachment: boolean;\n  Importance: number;\n  // TODO: check an example and see how this goes\n  DraftInfo: Array<any>;\n  Sensitivity: number;\n  TrimmedTextSize: number;\n  DownloadAsEmlUrl: string;\n  Hash: string;\n  Threads: Array<string>;\n}\n\nexport class Messages {\n  Count: number;\n  @deserialize(Message)\n  Collection: Array<Message>;\n  Uids: Array<string>;\n  UidNext: string;\n  FolderHash: string;\n  MessageCount: number;\n  MessageUnseenCount: number;\n  MessageResultCount: number;\n  FolderName: string;\n  Offset: number;\n  Limit: number;\n  Search: number;\n  Filters: string;\n  // TODO: check out the type\n  New: Array<any>;\n}\n\nexport class Action {\n  view: string;\n  download: string;\n}\n\nclass ActionConvertor implements Convertor<Object> {\n  public convert(src: Object): Action {\n    const result = new Action();\n    if (src['view']) {\n      result.view = src['view'].url;\n    }\n\n    if (src['download']) {\n      result.download = src['download'].url;\n    }\n\n    return result;\n  }\n}\n\nexport class SearchConvertor implements Convertor<string> {\n  private _add(result: string, key: string, value: string): string {\n    if (!value) {\n      return result;\n    }\n    return result + (result == '' ? '' : ' ') + `${key}:\"${value}\"`;\n  }\n\n  private _date(d: Date): string {\n    if (!d) {\n      return '';\n    }\n\n    return dateFormat(d, 'yyyy.mm.dd');\n  }\n  public convert(src: SearchModel): string {\n    let result = '';\n    result = this._add(result, 'from', src.from);\n    result = this._add(result, 'to', src.to);\n    result = this._add(result, 'subject', src.subject);\n    result = this._add(result, 'text', src.text);\n    if (src.attachments) {\n      result = this._add(result, 'has', 'attachments');\n    }\n    if (src.since || src.till) {\n      result = this._add(result, 'date', `${this._date(src.since)}/${this._date(src.till)}`)\n    }\n    return result;\n  }\n}\n\nexport class FoldersConvertor implements Convertor<Array<Folder>> {\n  private _addNewFolder(x: string, possibleParents: Array<Folder>) {\n    const parts = x.split('/');\n    const name = parts[parts.length - 1];\n    const f = new Folder();\n    f.Id = x;\n    f.Count = 0;\n    f.Unread = 0;\n    f.Name = name;\n    f.SubFolders = [];\n\n    if (parts.length == 1) {\n      possibleParents.push(f);\n      return ;\n    }\n    const parentName = parts[parts.length - 2];\n    const parent = possibleParents.find(p => p.Name == parentName);\n    if (!parent) {\n      return ;\n    }\n\n    parent.SubFolders.push(f);\n  }\n  public convert(src: string): Array<Folder> {\n    if (!src) {\n      return [];\n    }\n\n    let arr: Array<string>\n    try {\n      arr = JSON.parse(src);\n    }\n    catch {\n      arr = [];\n    }\n\n    arr.sort((a, b) => a.split('/').length - b.split('/').length);\n    const levels = arr[arr.length - 1].split('/').length;\n\n    const result: Array<Folder> = [];\n\n    const tree: Map<number, Array<Folder>> = new Map<number, Array<Folder>>();\n\n    for (let level = 1; level <= levels; level++) {\n      const items = arr.filter(x => x.split('/').length == level);\n      if (level == 1) {\n        items.forEach(i => this._addNewFolder(i, result));\n        tree.set(level, result);\n        continue;\n      }\n\n      items.forEach(i => this._addNewFolder(i, tree.get(level - 1)))\n      tree.set(level, tree.get(level - 1).map(x => x.SubFolders).reduce((acc, v) => acc.concat(v), []));\n    }\n\n    return result;\n  }\n}\n\nexport class Attachment {\n  FileName: string;\n  MimeType: string;\n  MimePartIndex: string;\n  EstimatedSize: number;\n  Size: number;\n  CID: string;\n  ContentLocation: string;\n  Content: string;\n  IsInline: boolean;\n  IsLinked: boolean;\n  TempName: string;\n  ThumbnailUrl: string;\n  Hash: string;\n  @deserialize(ActionConvertor)\n  Actions: {view?: string; download?: string};\n}\n\nexport class Attachments {\n  Count: number;\n  @deserialize(Attachment)\n  Collection: Array<Attachment>;\n}\n\nexport class MessageBody extends Message {\n  // TODO: For the moment, we can't deserialize the parent class.\n  // This should be fixed.\n  @deserialize(Contacts)\n  From: Contacts;\n  @deserialize(Contacts)\n  To: Contacts;\n  @deserialize(Contacts)\n  Cc: Contacts;\n  @deserialize(Contacts)\n  Bcc: Contacts;\n  @deserialize(Contacts)\n  ReplyTo: Contacts;\n  Headers: string;\n  InReplyTo: string;\n  References: string;\n  ReadingConfirmationAddressee: string;\n  Html: string;\n  Trimmed: boolean;\n  Plain: string;\n  PlainRaw: string;\n  Rtl: boolean;\n  Extend: Array<string>;\n  Safety: boolean;\n  HasExternals: boolean;\n  FoundedCIDs: Array<string>;\n  FoundedContentLocationUrls: Array<string>;\n  @deserialize(Attachments)\n  Attachments: Attachments;\n}\n\nexport class Account {\n  AccountID: string;\n  UUID: string;\n  UseToAuthorize: boolean;\n  Email: string;\n  FriendlyName: string;\n  @deserialize(Server)\n  Server: Server;\n  CanBeUsedToAuthorize: boolean;\n  UseThreading: boolean;\n  @deserialize(FoldersConvertor)\n  FoldersOrder: Array<Folder>;\n  Folders$: ReplaySubject<Array<Folder>> = new ReplaySubject<Array<Folder>>();\n  TypesSet: boolean = false;\n}\n\nexport class FoldersInfoResult {\n  Counts: {[key: string]: Array<string | number>};\n}\n\nexport class SearchModel {\n  simple: string;\n  from: string;\n  to: string;\n  subject: string;\n  text: string;\n  since: Date;\n  till: Date;\n  attachments: boolean;\n}\n\nexport type ComposeNotifyType = 'sent' | 'cancel' | 'error';\nexport type ComposeType = 'new' | 'from-draft' | 'reply' | 'reply-all' | 'forward';\n\nexport class MessageNotify {\n  type: ComposeType;\n  contact?: Contact;\n  message?: Message;\n}\n\nexport class DisplayContact extends Contact {\n  display: string;\n}\n\nexport class MessageCompose {\n  To: Array<DisplayContact>;\n  Cc: Array<DisplayContact>;\n  Bcc: Array<DisplayContact>;\n  ReplyTo: Array<DisplayContact>;\n  InReplyTo: string;\n  References: string;\n  Body: string;\n  Subject: string;\n  Attachments: Array<Attachment>;\n  AccountID: string;\n  DraftUid: string;\n  DraftInfo: Array<string | number> = [];\n}\n\nexport class ContactConvertor implements Convertor<DisplayContact> {\n  public convert(src: Contact): DisplayContact {\n    const result = ModelFactory.instance(src, DisplayContact) as DisplayContact;\n    result.display = result.DisplayName || result.Email;\n\n    return result;\n  }\n}\n\nexport class ReplyToBodyConvertor implements Convertor<string> {\n  public convert(msg: MessageBody): string {\n    const d = new Date(msg.TimeStampInUTC * 1000);\n    const c = msg.From.Collection[0];\n    return `\n<br/>\nOn ${dateFormat(d, 'ddd, mmm dd \"at\" HH:MM')}, ${c.DisplayName || c.Email} wrote:\n<blockquote>${msg.Html || msg.Plain}</blockquote>\n`;\n  }\n}\n\nexport class ForwardBodyConvertor implements Convertor<string> {\n  private _collection(contacts: Collection<Contact>): string {\n    if (!contacts || !Array.isArray(contacts.Collection)) {\n      return '';\n    }\n    return contacts.Collection.map(c => c.DisplayName ? `${c.DisplayName} &lt;${c.Email}&gt;` : c.Email).join(', ');\n  }\n  public convert(msg: MessageBody): string {\n    const d = new Date(msg.TimeStampInUTC * 1000);\n    const cc = this._collection(msg.Cc);\n    return `\n<br/>\n---- Original message ----<br/>\nFrom: ${this._collection(msg.From)}<br/>\nTo: ${this._collection(msg.To)}<br/>\n${cc ? 'CC: ' + cc + '<br/>' : ''}\nSent: ${dateFormat(d, 'ddd, mmm dd, yyyy HH:MM')}<br/>\nSubject: ${msg.Subject}<br/>\n<br/>\n${msg.Html || msg.Plain}\n`;\n  }\n}\n\nexport class MessageComposeConvertor implements Convertor<MessageCompose> {\n  public composeType: ComposeType = 'new';\n  public currentEmail: string = null;\n  private _conv: ContactConvertor = new ContactConvertor();\n  private _convertCollection(c: Collection<Contact>): Array<DisplayContact> {\n    if (!c || !Array.isArray(c.Collection)) {\n      return [];\n    }\n\n    return c.Collection.map(c => this._conv.convert(c));\n  }\n  public convert(src: MessageBody): MessageCompose {\n    const result = new MessageCompose();\n    if (!src) {\n      result.Body = '';\n      result.Subject = '';\n      result.Attachments = [];\n      result.Bcc = [];\n      result.Cc = [];\n      result.To = [];\n      result.ReplyTo = [];\n      result.DraftInfo = [];\n    }\n    else {\n      result.Body = src.Html || src.Plain;\n      result.Subject = src.Subject;\n      result.Attachments = src.Attachments ? src.Attachments.Collection : [];\n      result.Bcc = this._convertCollection(src.Bcc);\n      result.AccountID = src.AccountID;\n      result.Cc = this._convertCollection(src.Cc);\n      result.To = this._convertCollection(src.To);\n      result.ReplyTo = this._convertCollection(src.ReplyTo);\n      result.DraftInfo = src.DraftInfo;\n      if (this.composeType == 'from-draft') {\n        result.DraftUid = src.Uid;\n      }\n      if (['reply', 'reply-all'].indexOf(this.composeType) != -1) {\n        result.To = this._convertCollection(src.From)\n        if (this.composeType == 'reply-all') {\n          result.To = result.To\n            .concat(this._convertCollection(src.To).filter(c => c.Email != this.currentEmail));\n          result.Cc = this._convertCollection(src.Cc).filter(c => c.Email != this.currentEmail);\n        }\n        const conv = new ReplyToBodyConvertor();\n        result.Body = conv.convert(src);\n        result.Attachments = [];\n        result.Subject = `Re: ${result.Subject}`;\n        result.InReplyTo = src.MessageId;\n\n        if (!result.DraftInfo || !Array.isArray(result.DraftInfo) || result.DraftInfo.length == 0) {\n          result.DraftInfo = [this.composeType, src.Uid, src.Folder];\n        }\n      }\n\n      if (this.composeType == 'forward') {\n        result.To = [];\n        result.Cc = [];\n        result.References = ` ${src.MessageId}`;\n        result.InReplyTo = src.MessageId;\n        const conv = new ForwardBodyConvertor();\n        result.Body = conv.convert(src);\n        result.Subject = `Fwd: ${src.Subject}`;\n        if (!result.DraftInfo || !Array.isArray(result.DraftInfo) || result.DraftInfo.length == 0) {\n          result.DraftInfo = [\"forward\", src.Uid, src.Folder];\n        }\n      }\n    }\n    return result;\n  }\n}\n\nexport type MessageComposeType = 'HTML' | 'TEXT';\n\nexport class FileResult {\n  content: File;\n  path: string;\n  type: string;\n}\n\nexport class UploadResult {\n  @deserialize(Attachment)\n  Attachment: Attachment;\n}\n\nexport class Identity {\n  EntityId: string;\n  UUID: string;\n  IdUser: string;\n  IdAccount: string;\n  Email: string;\n  FriendlyName: string;\n  UseSignature: boolean;\n  Signature: string;\n}\n\nexport class MessageSave {\n  FetcherID: string = '';\n  DraftInfo: Array<any> = [];\n  DraftUid: string;\n  To: string;\n  Cc: string;\n  Bcc: string;\n  Subject: string;\n  Text: string;\n  IsHtml: boolean;\n  Importance: number = 3;\n  SendReadingConfirmation: boolean = false;\n  Attachments: Object;\n  InReplyTo: string;\n  References: string = ''\n  Sensitivity: number = 0;\n}\n\nexport class MessageSaveConvertor implements Convertor<MessageSave> {\n  private _mapCollection(arr: Array<DisplayContact>): string {\n    return arr.map(a => a.DisplayName ? `${a.DisplayName} <${a.Email}>` : a.Email).join(\",\");\n  }\n  public convert(src: MessageCompose): MessageSave {\n    const result = new MessageSave();\n    result.To = this._mapCollection(src.To);\n    result.Cc = this._mapCollection(src.Cc);\n    result.Bcc = this._mapCollection(src.Bcc);\n    result.Subject = src.Subject;\n    result.DraftUid = src.DraftUid;\n    result.DraftInfo = src.DraftInfo;\n    result.Text = src.Body;\n    result.IsHtml = true;\n    result.Attachments = src.Attachments.reduce((acc, v) => {\n      acc[v.TempName] = [v.FileName, \"\", \"0\", \"0\", \"\"];\n      return acc;\n    }, {});\n    result.InReplyTo = src.InReplyTo;\n    result.References = src.References;\n    return result;\n  }\n}\n\nexport class SaveMessageResponse {\n  NewFolder: string;\n  NewUid: string;\n}\n\nexport class ComposedResult<T> {\n  account: Account;\n  result: T | Array<T>;\n}\n\nexport class FormDataSerialized {\n  data: string;\n  boundary: string;\n}\n\nexport class LabelValue {\n  label: string;\n  value: string | number | boolean;\n}\n\nexport class AppSetting {\n  model: LabelValue;\n  options: Array<LabelValue>;\n}\n\nexport class AppSettings {\n  @deserialize(ServerSetting)\n  server: ServerSetting;\n  @deserialize(AppSetting)\n  pageSize: AppSetting;\n  @deserialize(AppSetting)\n  composeType: AppSetting;\n  @deserialize(AppSetting)\n  checkEmailInterval: AppSetting;\n}\n","import { Injector, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { PreloadAllModules, RouteReuseStrategy, RouterModule } from '@angular/router';\nimport { FileChooser } from '@ionic-native/file-chooser/ngx';\nimport { HTTP } from '@ionic-native/http/ngx';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\nimport { WebIntent } from '@ionic-native/web-intent/ngx';\nimport { IonicModule } from '@ionic/angular';\nimport { MessageService } from 'primeng/api';\nimport { AutoCompleteModule } from 'primeng/autocomplete';\nimport { BlockUIModule } from 'primeng/blockui';\nimport { ButtonModule } from 'primeng/button';\nimport { CalendarModule } from 'primeng/calendar';\nimport { CheckboxModule } from 'primeng/checkbox';\nimport { ChipsModule } from 'primeng/chips';\nimport { DialogModule } from 'primeng/dialog';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { InputTextareaModule } from 'primeng/inputtextarea';\nimport { MenuModule } from 'primeng/menu';\nimport { MessageModule } from 'primeng/message';\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\nimport { PanelModule } from 'primeng/panel';\nimport { SidebarModule } from 'primeng/sidebar';\nimport { TableModule } from 'primeng/table';\nimport { ToastModule } from 'primeng/toast';\nimport { ToolbarModule } from 'primeng/toolbar';\nimport { TreeModule } from 'primeng/tree';\nimport { Statics } from '../base';\nimport { Attachments } from '../components/attachments';\nimport { Avatar } from '../components/avatar';\nimport { Compose } from '../components/compose';\nimport { Editor } from '../components/editor';\nimport { FoldersList } from '../components/folders-list';\nimport { Loading } from '../components/loading';\nimport { Message } from '../components/message';\nimport { MessagesList } from '../components/messages-list';\nimport { Home } from '../pages/home';\nimport { Main as MainComponent } from '../pages/main';\nimport { Playground } from '../pages/playground';\nimport { Settings as SettingsPage } from '../pages/settings';\nimport * as pipes from '../pipes';\nimport { routes } from '../routing';\nimport { Api } from '../services/api';\nimport { Contacts } from '../services/contacts';\nimport { FileService } from '../services/file';\nimport { Layout } from '../services/layout';\nimport { Mails } from '../services/mails';\nimport { Navigation } from '../services/navigation';\nimport { DefaultRouteReuseStrategy } from '../services/route-reuse';\nimport { Settings } from '../services/settings';\nimport { Store } from '../services/store';\nimport {Background} from '../services/background';\nimport {Nextcloud} from '../services/nextcloud';\n\n@NgModule({\n  declarations: [\n    MainComponent, Home, SettingsPage, Loading, Playground, FoldersList, pipes.FoldersTree,\n    MessagesList, pipes.MessageDate, pipes.MessageFrom, pipes.FolderLabel, Message, Avatar,\n    pipes.AvatarText, pipes.AvatarColor, pipes.MessageFromTxt, pipes.MessageFromTxtFull,\n    pipes.ContactsListTxt, pipes.ContactsArray, pipes.AsHtml, pipes.AttachmentsList,\n    pipes.HumanFileSize, pipes.FileIconPipe, Compose, Attachments, Editor, pipes.CurrentEmail,\n    pipes.BorderRight, pipes.AccountToContact, pipes.IsCombinedAccount, pipes.Count,\n  ],\n  entryComponents: [Loading],\n  imports: [\n    BrowserModule, IonicModule.forRoot(), \n    BrowserAnimationsModule, SidebarModule, ButtonModule, ToolbarModule, PanelModule,\n    InputTextModule, FormsModule, MessageModule, BlockUIModule, TreeModule,\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules, useHash: true }),\n    TableModule, OverlayPanelModule, CalendarModule, CheckboxModule, ChipsModule, ToastModule,\n    AutoCompleteModule, InputTextareaModule, MenuModule, DialogModule, DropdownModule, \n  ],\n  providers: [\n    StatusBar,\n    SplashScreen, Api, Store, Settings, Contacts, Layout, Navigation, \n    Mails, MessageService, FileService, \n    { provide: RouteReuseStrategy, useClass: DefaultRouteReuseStrategy },\n    HTTP, FileChooser, Background, Nextcloud,\n    WebIntent,\n    // {provide: WebIntent, useClass: MockWebIntent},\n  ],\n  bootstrap: [MainComponent]\n})\nexport class Main {\n  constructor(i: Injector) {\n    Statics.injector = i;\n  }\n}\n","import {Component, NgZone, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {MenuItem} from 'primeng/api';\nimport {Observable} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\nimport {BaseComponent} from '../base';\nimport {MessagesList} from '../components/messages-list';\nimport {NgCycle, NgInject} from '../decorators';\nimport {Account, COMBINED_ACCOUNT_ID, ComposeNotifyType, ComposeType, Contact, Folder, Message, MessageBody, MessageNotify, ModelFactory, to} from '../models';\nimport {Api} from '../services/api';\nimport {Contacts} from '../services/contacts';\nimport {Layout} from '../services/layout';\nimport {Mails} from '../services/mails';\nimport {Settings} from '../services/settings';\nimport {Utils} from '../services/utils';\n\ntype ActionType = 'mark-read' | 'mark-unread' | 'delete' | 'spam';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: '../../html/home.html',\n  styleUrls: ['../../assets/scss/home.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class Home extends BaseComponent {\n  @NgInject(Api) private _api: Api;\n  @NgInject(Layout) private _layout: Layout;\n  @NgInject(Mails) private _mails: Mails;\n  @NgInject(Settings) private _settings: Settings;\n  @NgInject(Contacts) private _contacts: Contacts;\n  @NgInject(NgZone) private _zone: NgZone;\n\n  @ViewChild('messagesList', {static: false}) private _list: MessagesList;\n\n  protected _isMobile: boolean = true;\n  protected _account: Account;\n  protected _messages: Array<Message> = [];\n  protected _row: Array<string> = [''];\n  protected _folder: string = 'inbox';\n  protected _selection: Array<Message> = [];\n  protected _message: Message = null;\n  protected _spamFolder: boolean = false;\n  protected _userMenu: Array<MenuItem> = [];\n  protected _compose: boolean = false;\n  protected _composer: boolean = false;\n  protected _composeType: ComposeType = 'new';\n  protected _composeTo: Array<Contact>;\n  protected _composeMessage: MessageBody;\n  protected _toolbarVisible: boolean = false;\n  protected _composeTitle: string = '';\n  protected _accounts$: Observable<Array<Account>>;\n  protected _mobileViewType: 'list' | 'message' | 'compose' | 'settings' = 'list';\n  protected _showSettings: boolean = false;\n  protected _refreshing: boolean = false;\n\n  constructor(private _route: ActivatedRoute) {\n    super();\n    this._contacts.add([]);\n  }\n\n  @NgCycle('init')\n  protected async _initMe() {\n    console.log('init main component');\n    this.showLoading();\n    this._accounts$ = this._mails.accounts$;\n    this._isMobile = this._layout.isMobile;\n    this.connect(this._mails.currentAccount$, async account => {\n      this._account = account;\n      this.hideLoading();\n    });\n\n    this.connect(this._mails.refreshed$, () => this._refreshing = false);\n\n    this.connect(this._api.sessionExpired$, u => {\n      this.alert('Session expired', `User: ${u.email}`);\n      this.navigate('settings:empty');\n    })\n\n    this.connect(this._mails.folderChanged$, f => this._folderNotify(f));\n    const server = await this._settings.getServer();\n    this._userMenu = Utils.buildUserMenu(server, this._onMenu.bind(this));\n    this.connect(\n      this._route.paramMap.pipe(\n        filter(map => map.has('action')),\n        map(map => map.get('action')),\n      ),\n      async url => {\n        const p = /^(.*):(.*)$/g\n        if (!url.match(p)) {\n          return ;\n        }\n\n        const action = url.replace(p, '$1');\n        const param = url.replace(p, '$2');\n\n        if (action == 'mailto') {\n          this._newMessage('new', undefined, [ModelFactory.instance({Email: param}, Contact) as Contact]);\n        }\n        else if (action == 'readmail') {\n          if (!this._list) {\n            return ;\n          }\n          const m = this._list.rows.find(m => m.Uid == param);\n          if (!m) {\n            return ;\n          }\n          this._zone.run(() => this._messageNotify(m));\n        }\n        else if (action == 'settings') {\n          this._zone.run(async () => {\n            if (param == 'empty') {\n              this.hideLoading();\n              this._showSettings = true;\n              this._mobileViewType = 'settings';\n              return ;\n            }\n            this._showSettings = false;\n            this._mobileViewType = 'list';\n            this._router.navigateByUrl('').then(() => {\n              this.softRefresh();\n            });\n          })\n        }\n      }\n    )\n  }\n\n  protected async _folderNotify(f: Folder) {\n    this._folder = f.Id;\n    this._message = null;\n    this._spamFolder = this._api.isSpamFolder(f);\n  }\n\n  protected _messageNotify(m: Message) {\n    console.log('message notify');\n    this._message = m;\n    this._mobileViewType = 'message';\n  }\n\n  protected _selectionChanged(messages: Array<Message>) {\n    this._selection = messages;\n  }\n\n  protected _actionIcon(which: ActionType) {\n    if (this._selection.length == 0 && !this._message) {\n      return ;\n    }\n\n    this._action(which);\n  }\n\n  protected async _action(which: ActionType) {\n    let row: Message;\n    if (this._message) {\n      row = this._list.rows.find(r => r.Uid == this._message.Uid);\n    }\n    const arr = this._selection.length > 0 ? this._selection : [row || this._message];\n    let err: Error = null;\n    if (which == 'mark-read' || which == 'mark-unread') {\n      [err, ] = await to(this._api.markRead(this._account, this._folder, arr, which == 'mark-read'));\n    }\n\n    if (which == 'delete') {\n      [err, ] = await to(this._api.moveOrDeleteMessages(this._account, this._folder, arr));\n      if (!err) {\n        if (arr.indexOf(this._message) != -1) {\n          this._message = null;\n        }\n      }\n    }\n\n    if (which == 'spam') {\n      [err, ] = await to(this._api.markSpam(this._account, this._folder, arr));\n    }\n\n    if (err) {\n      this.alert('Error performing the action', err.message);\n    }\n  }\n\n  protected _refresh() {\n    this._refreshing = true;\n    this._mails.refresh$.emit();\n  }\n\n  protected async _changeAccount(email: string) {\n    this._toolbarVisible = false;\n    this._account = null;\n    this.showLoading();\n    await this._mails.setCurrentAccount(email.match(/,/) ? COMBINED_ACCOUNT_ID : email);\n    this._message = null;\n    this.hideLoading();\n  }\n\n  protected async _onMenu(item: MenuItem) {\n    if (item.id != 'settings') {\n      await this._changeAccount(item.id);\n      return ;\n    }\n\n    this._showSettings = true;\n  }\n\n  protected _newMessage(type: ComposeType, msg?: MessageBody, to?: Array<Contact>) {\n    const title = type == 'new' ? 'Compose new message' : (['reply', 'reply-all'].indexOf(type) != -1 ? 'Reply to message' : 'Forward message');\n    this._composer = true;\n    this._composeType = type;\n    this._composeTitle = title;\n    this._composeMessage = msg;\n    this._mobileViewType = 'compose';\n    if (type == 'new') {\n      this._composeTo = to;\n    }\n    setTimeout(() => {\n      this.hideLoading();\n      this._compose = true;\n    });\n  }\n\n  protected _hideCompose(ev: ComposeNotifyType) {\n    this._compose = false;\n    this._composeTo = [];\n    this._composeMessage = null;\n    this._mobileViewType = 'list';\n    setTimeout(() => this._composer = false);\n    if (ev == 'sent') {\n      this._refresh();\n    }\n  }\n\n  protected _toolbarBack() {\n    this._message = null;\n    this._hideCompose('cancel');\n    if (['', '/'].indexOf(this._router.url) == -1) {\n      this.navigate('');\n    }\n  }\n\n  protected _msgBodyNotify(ev: MessageNotify) {\n    this._newMessage(ev.type, ev.message as MessageBody, [ev.contact]);\n  }\n\n  protected _settingsClick() {\n    this._mobileViewType = 'settings';\n    this._toolbarVisible = false;\n  }\n}\n","import {Component, ViewEncapsulation, NgZone} from '@angular/core';\nimport {SplashScreen} from '@ionic-native/splash-screen/ngx';\nimport {Platform} from '@ionic/angular';\nimport {BaseComponent} from '../base';\nimport {NgInject} from '../decorators';\nimport {Api} from '../services/api';\nimport {Layout} from '../services/layout';\nimport { WebIntent } from '@ionic-native/web-intent/ngx';\nimport { filter, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'main-page',\n  templateUrl: '../../html/main.html',\n  styleUrls: ['../../assets/scss/main.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class Main extends BaseComponent {\n  @NgInject(Platform) private _platform: Platform;\n  @NgInject(SplashScreen) private _splash: SplashScreen;\n  @NgInject(Layout) private _layout: Layout;\n  @NgInject(Api) private _api: Api;\n  @NgInject(WebIntent) private _intent: WebIntent;\n  @NgInject(NgZone) private _zone: NgZone;\n\n  protected _mobile: boolean = true;\n  protected _ready: boolean = false;\n\n  constructor() {\n    super();\n    this._initializeApp();\n    this.connect(this._api.ready$, result => {\n      if (!result) {\n        this.navigate('settings:empty');\n        this._ready = true;\n        return ;\n      }\n      this._ready = true;\n    });\n  }\n\n  private _initializeApp() {\n    this._platform.ready().then(() => {\n      document.addEventListener('backbutton', ev => {\n        ev.stopPropagation();\n        ev.preventDefault();\n        this._zone.run(() => {\n          this.navigate('');\n        });\n      }, false);\n      this._mobile = this._layout.isMobile;\n      this._splash.hide();\n      if (this._platform.is('desktop')) {\n        return ;\n      }\n      this.connect(this._intent.onIntent().pipe(\n        filter(i => i.action == this._intent.ACTION_VIEW && !!i['data'])\n      ), i => this._zone.run(() => this.navigate(i['data'])));\n    });\n  }\n}\n","import {Component} from '@angular/core';\nimport {BaseComponent} from '../base';\nimport {NgCycle, NgInject} from '../decorators';\nimport {Account, Folder, Message, Contact, ModelFactory, MessageNotify, MessageBody} from '../models';\nimport {Mails} from '../services/mails';\nimport {Api} from '../services/api';\n\n@Component({\n  selector: 'al-playground', \n  templateUrl: '../../html/playground.html'\n})\nexport class Playground extends BaseComponent {\n  @NgInject(Mails) private _mails: Mails;\n  @NgInject(Api) private _api: Api;\n\n  protected _account: Account;\n  protected _message: Message = null;\n  protected _body: MessageBody = null;\n  protected _folder: string;\n  protected _contact: Contact;\n\n  @NgCycle('init')\n  protected async _initMe() {\n    this._contact = ModelFactory.instance(<Contact>{Email: 'cosmin@taid.be', DisplayName: 'Cosmin Popescu'}, Contact) as Contact;\n    this.showLoading();\n    this.connect(this._mails.currentAccount$, async account => {\n      this._account = account;\n      this.hideLoading();\n      // this._body = await this._api.getMessageBody(this._account, '[Gmail]/Drafts', '11021');\n    });\n  }\n\n  protected _folderNotify(f: Folder) {\n    console.log('selected folder', f);\n    this._folder = f.Id;\n  }\n\n  protected _messageNotify(m: Message) {\n    this._message = m;\n    console.log('message is', m);\n  }\n\n  protected _msgBodyNotify(ev: MessageNotify) {\n    console.log('notified with', ev);\n  }\n}\n","import {Component, ViewEncapsulation} from '@angular/core';\nimport {BaseComponent} from '../base';\nimport {NgCycle, NgInject} from '../decorators';\nimport {ServerSetting, UserSetting, AppSettings, COMBINED_ACCOUNT_ID, to} from '../models';\nimport {Settings as SettingsService} from '../services/settings';\nimport {Store} from '../services/store';\nimport {Api} from '../services/api';\nimport {take} from 'rxjs/operators';\nimport {Mails} from '../services/mails';\n\n@Component({\n  selector: 'al-settings',\n  templateUrl: '../../html/settings.html',\n  styleUrls: ['../../assets/scss/settings.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class Settings extends BaseComponent {\n  @NgInject(Store) private _store: Store;\n  @NgInject(Api) private _api: Api;\n  @NgInject(Mails) private _mails: Mails;\n  @NgInject(SettingsService) private _settings: SettingsService;\n  protected _model: AppSettings;\n  protected _validate: boolean = false;\n  protected _loading: boolean = true;\n  protected _urlFixed: boolean = false;\n\n  @NgCycle('init')\n  protected async _initMe() {\n    this._model = await this._settings.appSettings;\n    if (!this._model.server) {\n      this._model.server = new ServerSetting();\n      this._model.server.users = [];\n    }\n  }\n\n  protected _setFixUrl(value: boolean) {\n    this._urlFixed = value;\n  }\n\n  protected _remove(user: UserSetting) {\n    this._model.server.users = this._model.server.users.filter(u => u.email != user.email);\n  }\n\n  protected _add() {\n    this._model.server.users.push(new UserSetting());\n  }\n\n  private _waitApiReady() {\n    return this._api.ready$.pipe(take(1)).toPromise();\n  }\n\n  protected async _save() {\n    if (!this._model.server && !Array.isArray(this._model.server.users) || this._model.server.users.length == 0) {\n      this.alert('You have to have at least one account', '');\n      return ;\n    }\n    const users = await this._settings.needAuthenticating(this._model.server);\n    console.log('model is', JSON.parse(JSON.stringify(this._model)), users);\n    if (users.length > 0) {\n      this.showLoading();\n      // To be able to do anything with the API we need a server url, at least.\n      // So, we set this before.\n      const server = new ServerSetting();\n      server.url = this._model.server.url;\n      server.users = [];\n      await this._settings.setServer(server);\n      await this._waitApiReady();\n      const [err, result] = await to(this._api.login(users));\n      this._validate = true;\n      this.hideLoading();\n\n      if (err || !result) {\n        this.alert('Some accounts could not be logged in', '');\n        console.log('err is', err);\n        return ;\n      }\n\n      await this._waitApiReady();\n    }\n    const email = await this._store.getCurrentAccount();\n    let x: boolean = false;\n    if (email != COMBINED_ACCOUNT_ID && !this._model.server.users.find(u => u.email == email)) {\n      x = true;\n    }\n    await this._settings.saveSettings(this._model);\n    if (x) {\n      await this._mails.setCurrentAccount(this._model.server.users[0].email);\n      this.navigate('').then(() => window.location.reload());\n      return ;\n    }\n    await this._mails.setCurrentAccount(null);\n    this.navigate('settings:saved');\n    // window.location.reload();\n    // this.navigate('settings:' + op);\n  }\n}\n","import {Pipe} from '@angular/core';\nimport * as dateFormat from 'dateformat';\nimport {TreeNode} from 'primeng/api';\nimport {merge, Observable, of} from 'rxjs';\nimport {map, filter} from 'rxjs/operators';\nimport {BaseClass} from './base';\nimport {NgInject} from './decorators';\nimport {Account, Folder, Message, Contact, Contacts, MessageBody, Attachment, COMBINED_ACCOUNT_ID, ModelFactory} from './models';\nimport {Api} from './services/api';\nimport {Utils} from './services/utils';\nimport {DomSanitizer, SafeHtml} from '@angular/platform-browser';\nimport {Mails} from './services/mails';\n\n@Pipe({name: 'foldersTree'})\nexport class FoldersTree extends BaseClass {\n  public transform(folders: Array<Folder>): Array<TreeNode> {\n    if (!folders || !Array.isArray(folders)) {\n      return [];\n    }\n    return folders.map(f => <TreeNode> {\n      label: f.Unread > 0 ? `${f.Name} (${f.Unread})` : f.Name,\n      children: this.transform(f.SubFolders),\n      data: f,\n      selectable: f.SubFolders.length == 0,\n   })\n  }\n}\n\n@Pipe({name: 'folderLabel'})\nexport class FolderLabel extends BaseClass {\n  @NgInject(Api) private _api: Api;\n  private _label(f: Folder) {\n    return f.Unread > 0 ? `${f.Name} (${f.Unread})` : f.Name;\n  }\n  transform(folder: Folder): Observable<string> {\n    return merge(\n      of(this._label(folder)),\n      this._api.folderUpdated$.pipe(filter(f => f.Id == folder.Id)),\n    ).pipe(\n      map(result => {\n        if (typeof(result) == 'string') {\n          return result;\n        }\n\n        return this._label(result as Folder);\n      })\n    )\n  }\n}\n\n@Pipe({name: 'attachmentsList'})\nexport class AttachmentsList extends BaseClass {\n  transform(m: MessageBody): Array<Attachment> {\n    return Utils.extractCollection(m.Attachments);\n  }\n}\n\n@Pipe({name: 'messageDate'})\nexport class MessageDate extends BaseClass {\n  private _sameDay(d1: Date, d2: Date): boolean {\n    return d1.getFullYear() == d2.getFullYear() && d1.getMonth() == d2.getMonth() && d1.getDate() == d2.getDate();\n  }\n\n  public transform(message: Message): string {\n    const d1 = new Date();\n    const d2 = new Date(message.TimeStampInUTC * 1000);\n    if (this._sameDay(d1, d2)) {\n      return dateFormat(d2, 'hh:MM');\n    }\n\n    const d3 = new Date(d2.getTime() + 24 * 60 * 60 * 1000);\n    if (this._sameDay(d1, d3)) {\n      return 'Yesterday, ' + dateFormat(d2, 'hh:MM');\n    }\n\n    if (d1.getTime() - d2.getTime() <= 15 * 24 * 60 * 60 * 1000) {\n      return dateFormat(d2, 'mmm dd');\n    }\n\n    return dateFormat(d2, 'mmm dd, yyyy');\n  }\n}\n\n@Pipe({name: 'messageFrom'})\nexport class MessageFrom extends BaseClass {\n  public transform(msg: Message): Contact {\n    if (!msg.From && msg.From.Count < 1) {\n      return null;\n    }\n\n    return msg.From.Collection[0];\n  }\n}\n\n@Pipe({name: 'messageFromTxt'})\nexport class MessageFromTxt extends BaseClass {\n  transform(c: Contact): string {\n    return c.DisplayName || c.Email;\n  }\n}\n\n@Pipe({name: 'messageFromTxtFull'})\nexport class MessageFromTxtFull extends BaseClass {\n  transform(c: Contact): string {\n    const toSpan = (x: string) => `<span style=\"color: blue\">${x}</span>`;\n    return c.DisplayName ? `${c.DisplayName} (${toSpan(c.Email)})` : toSpan(c.Email);\n  }\n}\n\n@Pipe({name: 'asHtml'})\nexport class AsHtml extends BaseClass {\n  @NgInject(<any>DomSanitizer) private _sanitizer: DomSanitizer;\n  transform(html: string): SafeHtml {\n    return this._sanitizer.bypassSecurityTrustHtml(html);\n  }\n}\n\n@Pipe({name: 'contactsListTxt'})\nexport class ContactsListTxt extends BaseClass {\n  transform(c: Contacts): string {\n    const collection = Utils.extractCollection(c);\n    if (collection.length == 0) {\n      return '';\n    }\n\n    const pipe = new MessageFromTxtFull();\n    return collection\n      .map(c => pipe.transform(c))\n      .reduce((acc, v) => acc + (acc == '' ? '' : ', ') + v, '');\n  }\n}\n\n@Pipe({name: 'contactsArray'})\nexport class ContactsArray extends BaseClass {\n  transform(c: Contacts) : Array<Contact>{\n    return Utils.extractCollection(c);\n  }\n}\n\n@Pipe({name: 'avatarColor'})\nexport class AvatarColor extends BaseClass {\n  public transform(c: Contact): string {\n    return Utils.avatarColor(c);\n  }\n}\n\n@Pipe({name: 'accountToContact'})\nexport class AccountToContact extends BaseClass {\n  public transform(a: Account): Contact {\n    return ModelFactory.instance(<Contact>{Email: a.Email, DisplayName: a.FriendlyName}, Contact) as Contact;\n  }\n}\n\n@Pipe({name: 'avatarText'})\nexport class AvatarText extends BaseClass {\n  public transform(c: Contact): string {\n    const x = c.DisplayName || c.Email;\n    return x.substr(0, 1).toUpperCase();\n  }\n}\n\n@Pipe({name: 'humanFileSize'})\nexport class HumanFileSize extends BaseClass {\n  public transform(size: number): string {\n    const i = Math.floor( Math.log(size) / Math.log(1024) );\n    return ( size / Math.pow(1024, i) ).toFixed(2) + ' ' + ['B', 'kB', 'MB', 'GB', 'TB'][i];\n  }\n}\n\n@Pipe({name: 'fileIcon'})\nexport class FileIconPipe extends BaseClass {\n  public transform(a: Attachment): string {\n    if (a.MimeType.match(/pdf/i)) {\n      return \"file-pdf-o\";\n    }\n\n    if (a.MimeType.match(/text|txt/i))  {\n      return 'file-text-o';\n    }\n\n    if (a.MimeType.match(/excel/i)) {\n      return 'file-excel-o';\n    }\n\n    if (a.MimeType.match(/word/i)) {\n      return 'file-word-o';\n    }\n\n    if (a.MimeType.match(/gif|jpg|jpeg|png|bmp/i)) {\n      return 'file-image-o';\n    }\n\n    return 'file-o';\n  }\n}\n\n@Pipe({name: 'currentEmail'})\nexport class CurrentEmail extends BaseClass {\n  public transform(a: Account): string {\n    if (!a) {\n      return '';\n    }\n\n    return a.FriendlyName ? `${a.FriendlyName} (${a.Email})` : a.Email;\n  }\n}\n\n@Pipe({name: 'borderRight'})\nexport class BorderRight extends BaseClass {\n  @NgInject(Mails) private _service: Mails;\n  public transform(msg: Message): Observable<Object> {\n    return this._service.currentAccount$.pipe(\n      map(account => {\n        if (account.AccountID != COMBINED_ACCOUNT_ID) {\n          return {}\n        };\n\n        const a = this._service.accountById(msg.AccountID);\n\n        if (!a) {\n          return {};\n        }\n\n        const pipe = new AccountToContact();\n\n        return {borderRight: `10px solid ${Utils.avatarColor(pipe.transform(a))}`};\n      })\n    );\n  }\n}\n\n@Pipe({name: 'isCombinedAccount'})\nexport class IsCombinedAccount extends BaseClass {\n  public transform(a: Account): boolean {\n    return a.AccountID == COMBINED_ACCOUNT_ID;\n  }\n}\n\n@Pipe({name: 'count'})\nexport class Count extends BaseClass {\n  public transform(a: Array<any>): number {\n    if (!Array.isArray(a)) {\n      return 0;\n    };\n\n    return a.length;\n  }\n}\n","import {Routes} from '@angular/router';\nimport {Home} from './pages/home';\nimport {Playground} from './pages/playground';\n\nexport const routes: Routes = [\n  {path: 'playground', component: Playground, data: {withToolbar: true}},\n  {path: ':action', component: Home, data: {withToolbar: true}},\n  {path: '', component: Home, data: {withToolbar: true}},\n];\n","import {EventEmitter, Injectable, Type} from '@angular/core';\nimport {FilesystemDirectory, FileWriteResult, Plugins} from '@capacitor/core';\nimport {HTTP} from '@ionic-native/http/ngx';\nimport {Platform} from '@ionic/angular';\nimport {ReplaySubject} from 'rxjs';\nimport {filter, map, take} from 'rxjs/operators';\nimport {BaseClass} from '../base';\nimport {NgInject} from '../decorators';\nimport {Account, Attachment, Authentication, COMBINED_ACCOUNT_ID, FileResult, Folder, FoldersInfoResult, FolderType, HttpResponse, Message, MessageBody, MessageCompose, Messages, MessageSave, ModelFactory, ObjectType, SaveMessageResponse, ServerSetting, to, UploadResult, UserSetting} from '../models';\nimport {Settings} from './settings';\nimport {Utils} from './utils';\n\nconst {Filesystem} = Plugins;\ntype PayloadInfoType = {account: Account, folder: string, msgs: Array<Message>};\n\n\n@Injectable()\nexport class Api extends BaseClass {\n  @NgInject(Settings) private _settings: Settings;\n  @NgInject(Platform) private _platform: Platform;\n  @NgInject(HTTP) private _http: HTTP;\n  public ready$: ReplaySubject<boolean> = new ReplaySubject<boolean>(1);\n  public lastSearchResults: number = 0;\n  public folderUpdated$: EventEmitter<Folder> = new EventEmitter<Folder>();\n  public messagesDeleted$: EventEmitter<Array<Message>> = new EventEmitter<Array<Message>>();\n  public messagesMoved$: EventEmitter<Array<Message>> = new EventEmitter<Array<Message>>();\n  public messagesUpdated$: EventEmitter<Array<Message>> = new EventEmitter<Array<Message>>();\n  public sessionExpired$: EventEmitter<UserSetting> = new EventEmitter<UserSetting>();\n\n  private _ready: boolean = false;\n  private _server: ServerSetting;\n  private _url: string = null;\n  private _accounts: Array<Account> = [];\n\n  private async _init() {\n    this._server = await this._settings.getServer();\n    if (!!this._server) {\n      this._url = `${this._server.url}?/Api/`;\n      this._ready = true;\n      this.ready$.next(true);\n      return ;\n    }\n    this._ready = false;\n    this.ready$.next(false);\n  }\n\n  constructor() {\n    super();\n    this._init();\n    this._settings.serverSet$.subscribe(() => this._init());\n  }\n\n  private _checkReady() {\n    if (!this._ready) {\n      throw new Error('API_NOT_READY');\n    }\n  }\n\n  private async _passRequest<T>(token: string, module: string, method: string, parameters: Object, type?: Type<ObjectType<T>>, file?: FileResult): Promise<T> {\n    this._checkReady();\n    let data: string | FormData | Object;\n    const headers = {'Content-Type': 'application/x-www-form-urlencoded'};\n\n    if (token) {\n      headers['Authorization'] = `Bearer ${token}`;\n    }\n    if (!file) {\n      data = this._platform.is('desktop') ? \n        `Module=${module}&Method=${method}&Parameters=${encodeURIComponent(JSON.stringify(parameters))}`\n        : {Module: module, Method: method, Parameters: JSON.stringify(parameters)};\n    }\n    else  {\n      data = new FormData();\n      (data as FormData).append('Module', module);\n      (data as FormData).append('Method', method);\n      (data as FormData).append('jua-post-type', 'ajax');\n      (data as FormData).append('Parameters', JSON.stringify(parameters));\n      (data as FormData).append('jua-uploader', file.content);\n      delete headers['Content-Type'];\n    }\n\n    let json: ObjectType<Object>;\n    if (this._platform.is('desktop') || file) {\n      const result = await fetch(this._url, {\n        method: 'POST',\n        body: data as (string | FormData),\n        headers: headers,\n      });\n      json = await result.json();\n    }\n    else {\n      console.log('posting request', data, headers);\n      const result = await this._http.sendRequest(this._url, {\n        method: 'post', data: data as Object, headers: headers, responseType: 'json',\n      });\n      json = result.data;\n    }\n\n    const response = ModelFactory.instance(json, HttpResponse) as HttpResponse;\n\n    if (typeof(response.ErrorCode) != 'undefined' && response.ErrorCode != null) {\n      throw Error(`${[102, 108].indexOf(response.ErrorCode) != -1 ? 'AUTH_ERROR' : 'HTTP_ERROR'} ${response.ErrorMessage || response.ErrorCode}`);\n    }\n\n    return ModelFactory.instance(response.Result, type) as T;\n  }\n\n  private async _login(u: UserSetting): Promise<boolean> {\n    const result: Authentication = await this._passRequest(null, 'Core', 'Login', {Login: u.email, Password: u.pass, SignMe: false}, Authentication);\n    if (!result || !result.AuthToken) {\n      return false;\n    }\n    u.token = result.AuthToken;\n\n    return true;\n  }\n\n  public async login(users: Array<UserSetting>): Promise<boolean> {\n    const p: Array<Promise<boolean>> = [];\n\n    users.forEach(u => p.push(this._login(u)));\n\n    const results = await Promise.all(p);\n\n    return results.filter(r => !r).length == 0;\n  }\n\n  private _handleUserExpired(u: UserSetting) {\n      this.sessionExpired$.emit(u);\n      console.log('user expired', u);\n      throw Error('USER_EXPIRED');\n  }\n\n  private async _request<T>(\n    email: string, module: string,\n    method: string, parameters: Object,\n    type?: Type<ObjectType<T>>, file?: FileResult\n  ): Promise<T | Array<T>> {\n    const u = this._userByEmail(email);\n    if (!u) {\n      throw {\n        message: 'Could not find user for request',\n        user: email, \n        method: method, \n        parameters: parameters,\n        type: type, \n        file: file,\n      }\n    }\n    if (!u.token) {\n      this._handleUserExpired(u);\n      return null;\n    }\n    const [err, result] = await to(this._passRequest(u.token, module, method, parameters, type, file));\n\n    if (err) {\n      if (err.message.match(/^AUTH_ERROR/)) {\n        this._handleUserExpired(u);\n        return ;\n      }\n      throw err;\n    }\n\n    return result;\n  }\n\n  private _userByEmail(email: string): UserSetting {\n    this._checkReady();\n    return this._server.users.find(u => u.email == email);\n  }\n\n  // Patched\n  public async getAccounts(): Promise<Array<Account>> {\n    let p = [];\n\n    this._server.users.forEach(u => p.push(this._request(u.email, 'Mail', 'GetAccounts', null, Account)))\n\n    const accounts: Array<Account> = await Promise.all(p);\n    const result: Array<Account> = accounts.reduce((acc, v) => acc.concat(v), []);\n    this._accounts = result;\n    result.forEach(async a => {\n      a.Folders$ = new ReplaySubject<Array<Folder>>(1);\n      const u = this._userByEmail(a.Email);\n      if (!u) {\n        a.Folders$.next([]);\n        return ;\n      }\n      const list: Array<Folder> = [];\n      Utils.foldersFlatList(a.FoldersOrder, list);\n      await this._setFoldersTypes(a, a.FoldersOrder);\n      list.forEach(l => l.AccountID = a.AccountID);\n      a.Folders$.next(a.FoldersOrder);\n    });\n    const r = result.reduce((acc, v) => acc.concat(v), []);\n    if (accounts.length > 1) {\n      const a = new Account();\n      a.Email = accounts.reduce((acc, v) => acc.concat(v), []).map(a => a.Email).join(\",\");\n      a.AccountID = COMBINED_ACCOUNT_ID;\n      a.FriendlyName = 'Composed view';\n      a.FoldersOrder = [\n        {AccountID: a.AccountID, SubFolders: [], Type: FolderType.Inbox, Name: 'Inbox', Id: FolderType.Inbox.toString()},\n        {AccountID: a.AccountID, SubFolders: [], Type: FolderType.Sent, Name: 'Sent mails', Id: FolderType.Sent.toString()},\n        {AccountID: a.AccountID, SubFolders: [], Type: FolderType.Drafts, Name: 'Drafts', Id: FolderType.Drafts.toString()},\n        {AccountID: a.AccountID, SubFolders: [], Type: FolderType.Spam, Name: 'Spam', Id: FolderType.Spam.toString()},\n        {AccountID: a.AccountID, SubFolders: [], Type: FolderType.Trash, Name: 'Trash', Id: FolderType.Trash.toString()},\n      ];\n      a.TypesSet = true;\n      a.Folders$.next(a.FoldersOrder);\n      r.push(a);\n    }\n    return r;\n  }\n\n  // Patched\n  public async getFoldersInfo(account: Account, list: Array<Folder>, auto: boolean): Promise<FoldersInfoResult | Array<FoldersInfoResult>>{\n    if (account.AccountID != COMBINED_ACCOUNT_ID) {\n      return this._request(\n        account.Email, 'Mail', 'GetRelevantFoldersInformation',\n        {AccountID: account.AccountID, Folders: list.map(x => x.Id)}, FoldersInfoResult,\n        undefined,\n      ) as Promise<FoldersInfoResult>;\n    }\n\n    const p = [];\n    account.Email.split(',').forEach(e => {\n      const a = this._accounts.find(a => a.Email.toLowerCase() == e.toLowerCase());\n      if (!a) {\n        return ;\n      }\n\n      const list: Array<Folder> = [];\n      Utils.foldersFlatList(a.FoldersOrder, list);\n      p.push(this.getFoldersInfo(a, list, auto));\n    });\n\n    const result = await Promise.all(p);\n    return result;\n  }\n\n  private async _combinedFoldersResult(account: Account, result: Array<FoldersInfoResult>) {\n    account.FoldersOrder.forEach(f => {\n      f.Count = 0;\n      f.Unread = 0;\n      account.Email.split(\",\").forEach((e, idx) => {\n        const a = this._accounts.find(a => a.Email == e);\n        if (!a) {\n          return ;\n        }\n\n        const _f = Utils.folderByType(f.Type, a.FoldersOrder);\n        f.Count += result[idx].Counts[_f.Id][0] as number;\n        f.Unread += result[idx].Counts[_f.Id][1] as number;\n      });\n\n      this.folderUpdated$.emit(f);\n    });\n  }\n\n  private _processMessages(account: Account, msgs: Messages) {\n    msgs.Collection.forEach(m => m.AccountID = account.AccountID);\n    return msgs;\n  }\n\n  private async _waitFoldersLoaded() {\n    const p = [];\n    this._accounts.forEach(a => p.push(a.Folders$.pipe(take(1)).toPromise()));\n    await Promise.all(p);\n  }\n\n  // Patched\n  private async _getMessages(\n    account: Account, folder: string, offset: number, pageSize: number,\n    search: string, filters: string, withThreads: boolean, auto: boolean, lastUid: string,\n  ): Promise<Messages> {\n    if (account.AccountID != COMBINED_ACCOUNT_ID) {\n      const params = {\n        AccountID: account.AccountID, Folder: folder, Offset: offset,\n        Limit: pageSize, Search: search, Filters: filters, UseThreading: withThreads\n      };\n      if (lastUid) {\n        params['InboxUixnext'] = lastUid;\n      }\n      return this._request(\n        account.Email, 'Mail', 'GetMessages', params, Messages, undefined,\n      ).then(msgs => this._processMessages(account, msgs as Messages)) as Promise<Messages>;\n    }\n\n    await this._waitFoldersLoaded();\n    const _folder = account.FoldersOrder.find(f => f.Id == folder);\n    if (!_folder) {\n      return ModelFactory.instance({\n        Filters: filters, Search: search, Limit: pageSize, Offset: offset, Count: 0, \n        Collection: [], MessageResultCount: 0, Uids: [], MessageCount: 0, MessageUnseenCount: 0,\n        FolderName: _folder.Name,\n      }, Messages) as Messages;\n    }\n\n    const p = [];\n    account.Email.split(',').forEach(e => {\n      const a = this._accounts.find(a => a.Email == e);\n      if (!a) {\n        return ;\n      }\n\n      const f = Utils.folderByType(_folder.Type, a.FoldersOrder);\n\n      const result = this._getMessages(a, f.Id, offset, pageSize, search, filters, withThreads, auto, lastUid).then(msgs => this._processMessages(a, msgs as Messages));\n      p.push(result);\n    });\n\n    const result = await Promise.all(p);\n    return (result as Array<Messages>)\n    .reduce((acc: Messages, v) => {\n      if (!acc) {\n        return v;\n      }\n      acc.MessageResultCount += v.MessageResultCount;\n      acc.Count += v.Count;\n      acc.Collection = acc.Collection.concat(v.Collection);\n      return acc;\n    }, null);\n  }\n\n  public async getMessages(\n    account: Account,\n    folder: string,\n    offset: number, \n    pageSize: number,\n    search: string = '',\n    filters: string = '',\n    auto: boolean = false,\n    lastUid: string = null,\n  ): Promise<Array<Message>> {\n    if (pageSize != 1) account.Folders$.pipe(take(1)).subscribe(async folders => {\n      const list: Array<Folder> = [];\n      Utils.foldersFlatList(folders, list);\n      const result = await this.getFoldersInfo(account, list, auto);\n      if (Array.isArray(result)) {\n        await this._combinedFoldersResult(account, result);\n        return ;\n      }\n      Object.keys(result.Counts).forEach(k => {\n        const f = list.find(l => l.Id == k);\n        if (!f) {\n          return ;\n        }\n\n        f.Count = result.Counts[k][0] as number;\n        f.Unread = result.Counts[k][1] as number;\n        this.folderUpdated$.emit(f);\n      });\n    });\n\n    const result = await this._getMessages(account, folder, offset, pageSize, search, filters, false, auto, lastUid);\n\n    this.lastSearchResults = result.MessageResultCount;\n\n    this.messagesUpdated$.emit(result.Collection);\n    return result.Collection;\n  }\n\n  // Patched\n  public async getMessageBody(account: Account, msg: Message): Promise<MessageBody> {\n    const id = msg.AccountID ? msg.AccountID : account.AccountID;\n    const a = this._accounts.find(a => a.AccountID == id);\n    if (!a) {\n      return null;\n    }\n    const result: Array<MessageBody> = await this._request(\n      a.Email, 'Mail', 'GetMessagesBodies', \n      {AccountID: a.AccountID, Folder: msg.Folder, Uids: [msg.Uid]}, MessageBody\n    ) as Array<MessageBody>\n\n    if (!Array.isArray(result) || result.length != 1) {\n      return null;\n    }\n\n    result[0].AccountID = id;\n\n    // const draft = await this._getFolder(FolderType.Drafts, account);\n    // result[0].IsDraft = folder == draft.Id;\n\n    return result[0];\n  }\n\n  // For a combined folder, when we perform an operation on a collection of messages, \n  // we need to separate each message and each account and each folder\n  private _getPayloadInfos(account: Account, folder: string, msgs: Array<Message>): Array<PayloadInfoType> {\n    const result: Array<PayloadInfoType> = [];\n    // Get the original folder if it is a special folder.\n    const _folder = Utils.isCombinedFolder(folder) ? Utils.folderById(account.FoldersOrder, folder) : null;\n    Array.from(new Set(msgs.map(m => m.AccountID))).forEach(async accountId => {\n      const a = this._accounts.find(a => a.AccountID == accountId);\n      if (!a) {\n        return ;\n      }\n      // Search the folder of the given type inside the original account\n      const f = _folder == null ? {Id: folder} : Utils.folderByType(_folder.Type, a.FoldersOrder);\n      result.push({account: a, folder: f.Id, msgs: msgs.filter(m => m.AccountID == a.AccountID)});\n    });\n\n    return result;\n  }\n\n  private async _executeCombinedAccount(account: Account, folder: string, msgs: Array<Message>, operation: Function) {\n    const promises = [];\n    // Get the original folder if it is a special folder.\n    this._getPayloadInfos(account, folder, msgs).forEach(p => {\n      promises.push(operation(p.account, p.folder, p.msgs));\n    });\n\n    return Promise.all(promises);\n  }\n\n  // Patched\n  private async _doFlag(flag: string, account: Account, folder: string, msgs: Array<Message>, action: boolean) {\n    if (account.AccountID != COMBINED_ACCOUNT_ID) {\n      await this._request(\n        account.Email, 'Mail', flag,\n        {AccountID: account.AccountID, Folder: folder, Uids: msgs.map(m => m.Uid).join(\",\"), SetAction: action}\n      );\n      return ;\n    }\n\n    const callback = (account: Account, folder: string, msgs: Array<Message>) => {\n      return this._doFlag(flag, account, folder, msgs, action);\n    }\n\n    await this._executeCombinedAccount(account, folder, msgs, callback.bind(this));\n  }\n\n  // Patched\n  public async markRead(account: Account, folder: string, messages: Array<Message>, action: boolean) {\n    await this._doFlag('SetMessagesSeen', account, folder, messages, action);\n    account.Folders$.pipe(\n      take(1),\n      map(folders => Utils.folderById(folders, folder)),\n      filter(f => !!f),\n    ).subscribe(folder => {\n      const factor = action ? -1 : 1\n      folder.Unread += factor * messages.length;\n      folder.Count -= factor * messages.length;\n      this.folderUpdated$.emit(folder);\n    });\n    messages.forEach(m => m.IsSeen = action);\n  }\n\n  // Patched\n  public async flag(account: Account, folder: string, messages: Array<Message>, action: boolean) {\n    await this._doFlag('SetMessageFlagged', account, folder, messages, action);\n    messages.forEach(m => m.IsFlagged = action);\n  }\n\n  private async _doDeleteMessages(account: Account, folder: string, messages: Array<Message>) {\n    if (account.AccountID != COMBINED_ACCOUNT_ID) {\n      return this._request(\n        account.Email,\n        'Mail', 'DeleteMessages',\n        {AccountID: account.AccountID, Folder: folder, Uids: messages.map(m => m.Uid).join(\",\")}\n      );\n    }\n\n    const callback = (account: Account, folder: string, msgs: Array<Message>) => {\n      return this._doDeleteMessages(account, folder, msgs);\n    }\n\n    return this._executeCombinedAccount(account, folder, messages, callback.bind(this));\n  }\n\n  public async _doMoveMessages(account: Account, folder: string, toFolder: string, messages: Array<Message>) {\n    if (account.AccountID != COMBINED_ACCOUNT_ID) {\n      const params = {AccountID: account.AccountID, Folder: folder, ToFolder: toFolder, Uids: messages.map(m => m.Uid).join(',')};\n      await this._request(account.Email, 'Mail', 'MoveMessages', params);\n      return ;\n    }\n\n    const callback = (account: Account, toFolder: string, msgs: Array<Message>) => {\n      if (!Array.isArray(msgs) || msgs.length == 0) {\n        return ;\n      }\n      const x = msgs[0].Folder;\n      const folder = Utils.isCombinedFolder(x) ? Utils.folderByType(<any>x, account.FoldersOrder).Id : x;\n      return this._doMoveMessages(account, folder, toFolder, msgs);\n    };\n\n    return this._executeCombinedAccount(account, toFolder, messages, callback);\n  }\n\n  // Patched\n  public async deleteMessages(account: Account, folder: string, messages: Array<Message>) {\n    await this._doDeleteMessages(account, folder, messages);\n    this.messagesDeleted$.emit(messages);\n  }\n\n  // Patched\n  public async moveMessages(account: Account, folder: string, toFolder: string, messages: Array<Message>) {\n    await this._doMoveMessages(account, folder, toFolder, messages);\n    this.messagesMoved$.emit(messages);\n  }\n\n  // Patched\n  public async downloadUrl(account: Account, url: string, fileName: string, where: FilesystemDirectory, msg?: Message): Promise<FileWriteResult> {\n    this._checkReady();\n    if (msg) {\n      account = this._accounts.find(a => a.AccountID == msg.AccountID);\n    }\n    if (!account) {\n      throw {message: \"ACCOUNT_NOT_FOUND\", msg: msg};\n    }\n    const fileData = await this.getAttachmentContent(account, url);\n    if (this._platform.is('desktop')) {\n      const buf = await fileData.arrayBuffer();\n      const blob = new Blob([buf], {type: 'application/octet-stream'});\n      const a = document.createElement('a');\n      a.download = fileName;\n      const url = URL.createObjectURL(blob);\n      a.href = url;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      return null;\n    }\n\n    const content = await new Promise(async (resolve, reject) => {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        resolve(reader.result as string);\n      };\n      reader.onerror = () => reject(reader.error);\n      reader.readAsBinaryString(fileData);\n    }) as string;\n\n    const result = await Filesystem.writeFile({\n      path: fileName,\n      data: btoa(content),\n      directory: where,\n    });\n    return result;\n  }\n\n  public async getAttachmentContent(account: Account, url: string): Promise<Blob> {\n    this._checkReady();\n    const user = this._userByEmail(account.Email);\n    const data = await fetch(url, {headers: {Authorization: `Bearer ${user.token}`}});\n    return data.blob();\n  }\n\n  // Patched\n  public async downloadAttachment(account: Account, att: Attachment, fileName: string, where: FilesystemDirectory, msg?: Message): Promise<FileWriteResult> {\n    this._checkReady();\n    if (!att.Actions || !att.Actions.download) {\n      return null;\n    }\n    return this.downloadUrl(account, `${this._server.url}/${att.Actions.download}`, fileName, where, msg);\n  }\n\n  // Patched\n  public async uploadAttachment(account: Account, file: FileResult): Promise<UploadResult> {\n    return this._request(account.Email, 'Mail', 'UploadAttachment', {AccountID: account.AccountID}, UploadResult, file) as Promise<UploadResult>;\n  }\n\n  public async uploadData(account: Account, data: any): Promise<UploadResult> {\n    return this._request(account.Email, 'Mail', 'UploadAttachment', {AccountID: account.AccountID}, UploadResult, data) as Promise<UploadResult>;\n  }\n\n  private async _setFoldersTypes(account: Account, folders: Array<Folder>) {\n    const result = await this._request(account.Email, 'Mail', 'GetFolders', {AccountID: account.AccountID}, Object) as Object;\n    Utils.setFolderTypes(result['Folders']['@Collection'], folders);\n    account.TypesSet = true;\n  }\n\n  private _getFolders(account: Account): Promise<Array<Folder>> {\n    return new Promise<Array<Folder>>(resolve => account.Folders$.pipe(take(1)).subscribe(folders => resolve(folders)));\n  }\n\n  public async folderByType(type: FolderType, account: Account): Promise<Folder> {\n    const folders = await this._getFolders(account);\n    if (!account.TypesSet) {\n      await this._setFoldersTypes(account, folders);\n    }\n    return Utils.folderByType(type, folders);\n  }\n\n  public isSpamFolder(f: Folder): boolean {\n    return f.Type == FolderType.Spam;\n  }\n\n  // Patched\n  public async saveMessage(account: Account, msg: MessageSave): Promise<SaveMessageResponse> {\n    const draft = await this.folderByType(FolderType.Drafts, account);\n    const params = <Object>msg;\n    params['AccountID'] = account.AccountID;\n    params['DraftFolder'] = draft.Id;\n    return this._request(account.Email, 'Mail', 'SaveMessage', params, SaveMessageResponse) as Promise<SaveMessageResponse>;\n  }\n\n  // Patched\n  public async sendMessage(account: Account, msg: MessageSave): Promise<boolean> {\n    const sent = await this.folderByType(FolderType.Sent, account);\n    const draft = await this.folderByType(FolderType.Drafts, account);\n    const params = <Object>msg;\n    params['AccountID'] = account.AccountID;\n    params['DraftFolder'] = draft.Id;\n    params['SentFolder'] = sent.Id;\n    return this._request(account.Email, 'Mail', 'SendMessage', params) as Promise<boolean>;\n  }\n\n  // Patched\n  public async reloadAttachments(account: Account, attachments: Array<Attachment>) {\n    if (!Array.isArray(attachments) || attachments.length == 0) {\n      return ;\n    }\n    const result: Object = await this._request(\n      account.Email, 'Mail', 'SaveAttachmentsAsTempFiles',\n      {Attachments: attachments.map(a => a.Hash), AccountID: account.AccountID},\n      Object\n    ) as Object;\n\n    Object.keys(result).forEach(k => {\n      const a = attachments.find(a => a.Hash == result[k]);\n      if (!a) {\n        return ;\n      }\n\n      a.TempName = k;\n    });\n  }\n\n  // Patched\n  public getOriginalDraftReply(account: Account, msg: MessageCompose): Promise<MessageBody> {\n    const m = ModelFactory.instance({Uid: msg.DraftInfo[1], Folder: msg.DraftInfo[2]}, Message);\n    return this.getMessageBody(account, m as Message);\n  }\n\n  // Patched\n  public async moveOrDeleteMessages(account: Account, folder: string, messages: Array<Message>) {\n    const trash = await this.folderByType(FolderType.Trash, account);\n\n    if (trash.Id == folder) {\n      await this.deleteMessages(account, folder, messages);\n    }\n    else {\n      await this.moveMessages(account, folder, trash.Id, messages);\n    }\n  }\n\n  // Patched\n  public async markSpam(account: Account, folder: string, messages: Array<Message>) {\n    const spam = await this.folderByType(FolderType.Spam, account);\n    const to = spam.Id == folder ? 'inbox' : spam.Id;\n    await this.moveMessages(account, folder, to, messages);\n  }\n}\n","import {Injectable, NgZone} from '@angular/core';\nimport {BaseClass} from '../base';\nimport {NgInject} from '../decorators';\nimport {Platform} from '@ionic/angular';\nimport {merge, interval} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {Settings} from './settings';\nimport {to} from '../models';\n\nconst MAX_BACKGROUND_RETRIES = 3;\nconst MAX_INTERVAL = 60 * 1000 * 15;\n\n@Injectable()\nexport class Background extends BaseClass {\n  @NgInject(NgZone) private _zone: NgZone;\n  @NgInject(Platform) private _platform: Platform;\n  @NgInject(Settings) private _settings: Settings;\n\n  private _backgroundTimer: any;\n  private _callback: Function;\n  private _errors: number = 0;\n  private _checkInterval: number = null;\n\n  constructor() {\n    super();\n  }\n\n  public async configure(callback: Function) {\n    this._callback = callback;\n    this._checkInterval = await this._settings.getCheckoutEmailInterval();\n    if (this._checkInterval == 0) {\n      return ;\n    }\n    if (this._platform.is('desktop')) {\n      this._startMailsCheck();\n      return ;\n    }\n    this._backgroundTimer = window['BackgroundTimer'];\n    console.log('background timer is', this._backgroundTimer);\n    if (!this._backgroundTimer) {\n      return ;\n    }\n    this._backgroundTimer.onTimerEvent(this._backgroundRun.bind(this));\n\n    const obs = merge(this._platform.pause.pipe(map(() => 'pause')), this._platform.resume.pipe(map(() => 'resume')));\n    obs.subscribe(async ev => {\n      if (ev == 'resume') {\n        console.log('stopping the interval');\n        this._stopBackgroundTimer();\n        // this._zone.run(() => this._loadMessages({first: this._table.first}));\n        if (this._errors >= MAX_BACKGROUND_RETRIES) {\n          this._checkInterval = await this._settings.getCheckoutEmailInterval();\n        }\n      }\n\n      if (ev == 'pause') {\n        this._startBackgroundTimer();\n      }\n    });\n  }\n\n  private async _startBackgroundTimer() {\n    this._stopBackgroundTimer();\n    console.log('starting the interval');\n    this._backgroundTimer.start(this._backgroundSuccess.bind(this), this._backgroundFailure.bind(this), {\n      timerInterval: this._checkInterval,\n      startOnBoot: false,\n      stopOnTerminate: true,\n    });\n  }\n\n  private _backgroundSuccess() {\n    console.log('executed background thing successfully');\n  }\n\n  private _backgroundFailure(e: Error) {\n    console.log('error with background timer', e);\n  }\n\n  private _stopBackgroundTimer() {\n    this._backgroundTimer.stop(this._backgroundSuccess.bind(this), this._backgroundFailure.bind(this));\n  }\n\n  private _backgroundRun() {\n    return new Promise(resolve => {\n      this._zone.run(async () => {\n        await this._run();\n        resolve();\n      });\n    });\n  }\n\n  private async _run() {\n    const [err] = await to(this._callback());\n    console.log('err is', err);\n\n    if (err && ++this._errors >= MAX_BACKGROUND_RETRIES && this._checkInterval < MAX_INTERVAL) {\n      console.log('setting the interval to max, due to 3 errors in a row', err);\n      this._checkInterval = MAX_INTERVAL;\n      this._startBackgroundTimer();\n      console.log('set done');\n      return ;\n    }\n\n    if (err) {\n      console.log('no action taken due to error', err);\n      return ;\n    }\n    else if (this._errors >= MAX_BACKGROUND_RETRIES) {\n      this._checkInterval = await this._settings.getCheckoutEmailInterval();\n      console.log('setting the interval back to', this._checkInterval, 'due to no error now');\n      this._startBackgroundTimer();\n      console.log('set done');\n    }\n\n    this._errors = 0;\n  }\n\n  private async _startMailsCheck() {\n    interval(this._checkInterval).subscribe(() => this._callback());\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {BaseClass} from '../base';\nimport {NgInject} from '../decorators';\nimport {Store} from './store';\nimport {Contact, Message, Contacts as Model} from '../models';\nimport {Api} from './api';\n\nconst CONTACTS_KEY = 'contacts';\n\n@Injectable()\nexport class Contacts extends BaseClass {\n  @NgInject(Store) private _store: Store;\n  @NgInject(Api) private _api: Api;\n  public contacts: Array<Contact> = [];\n\n  private _getCollection(a: Model): Array<Contact> {\n    if (!a || !Array.isArray(a.Collection)) {\n      return [];\n    }\n\n    return a.Collection;\n  }\n  \n  private async _init() {\n    this.contacts = await this._store.load(CONTACTS_KEY, Contact, []) as Array<Contact>;\n    this._api.messagesUpdated$.subscribe((messages: Array<Message>) => {\n      const list = messages.map(m => this._getCollection(m.From)\n        .concat(this._getCollection(m.To))\n        .concat(this._getCollection(m.Bcc))\n        .concat(this._getCollection(m.Cc)))\n        .reduce((acc, v) => acc.concat(v), []);\n\n      this.add(list);\n    })\n  }\n\n  constructor() {\n    super();\n    this._init();\n  }\n\n  public async add(what: Contact | Array<Contact>) {\n    (Array.isArray(what) ? what : [what])\n      .forEach(c => {\n        if (this.contacts.map(c => c.Email).indexOf(c.Email) == -1) {\n          this.contacts.push(c);\n          return ;\n        }\n\n        const contact = this.contacts.find(_c => _c.Email == c.Email);\n        contact.DisplayName = c.DisplayName;\n      });\n    await this._store.save(CONTACTS_KEY, this.contacts);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {fromEvent} from 'rxjs';\nimport {take} from 'rxjs/operators';\nimport {BaseClass} from '../base';\nimport {FileResult, FormDataSerialized, ModelFactory} from '../models';\n\n@Injectable()\nexport class FileService extends BaseClass {\n  private _callback: Function = null;\n\n  public async read(f: Blob): Promise<string>{\n    const reader = new FileReader();\n    const r: FileReader = reader['__zone_symbol__originalInstance'] || reader;\n\n    return new Promise((resolve, reject) => {\n      r.onloadend = function() {\n        resolve(this.result as string);\n      }\n      r.onerror = async function() {\n        reject(this.error);\n      }\n      r.readAsBinaryString(f);\n    })\n  }\n\n  public async get(el: HTMLInputElement): Promise<Array<FileResult>> {\n    if (this._callback) {\n      this._callback([]);\n    }\n    el.click();\n    const files: FileList = await new Promise(resolve => {\n      this._callback = resolve;\n      fromEvent(el, 'change').pipe(take(1)).subscribe(() => {\n        console.log('files are', el.files);\n        resolve(<any>el.files);\n      });\n    });\n\n    const result = Array.from(files).map(f => ModelFactory.instance(<FileResult>{content: f}, FileResult) as FileResult);\n    el.value = '';\n    return result;\n  }\n\n  public async serialize(form: FormData): Promise<FormDataSerialized> {\n    const result = new FormDataSerialized();\n    result.boundary = '------WebKitFormBoundaryt32h1LxhGa2YJU6X';\n    result.data = '';\n    let fileKey: string;\n    form.forEach((value, key) => {\n      if (value instanceof File) {\n        fileKey = key;\n        return ;\n      }\n      result.data += `${result.boundary}\\x0d\\x0aContent-Disposition: form-data; name=\"${key}\"\\x0d\\x0a\\x0d\\x0a${value}\\x0d\\x0a`;\n    });\n\n    const f = form.get(fileKey) as File;\n    const content = await this.read(f);\n    result.data += `${result.boundary}\\x0d\\x0aContent-Disposition: form-data; name=\"${fileKey}\"; filename=\"${f.name}\"\\x0d\\x0aContent-Type: ${f.type}\\x0d\\x0a\\x0d\\x0a${content}\\x0d\\x0a${result.boundary}--\\x0d\\x0a`;\n\n    return result;\n  }\n}\n","/// <reference types=\"@nextcloud/typings\" />\n\nimport {to} from '../models';\n\ndeclare var OC: Nextcloud.v16.OC | Nextcloud.v17.OC | Nextcloud.v18.OC | Nextcloud.v19.OC;\n\nif (window.top && window.top['OC']) {\n  window['OC'] = window.top['OC'];\n}\n\nexport enum FilePickerType {\n  Choose = 1,\n    Move = 2,\n    Copy = 3,\n    CopyMove = 4,\n}\n\nexport class FilePicker {\n  private title: string\n  private multiSelect: boolean\n  private mimeTypeFiler: string[]\n  private modal: boolean\n  private type: FilePickerType\n  private directoriesAllowed: boolean\n  private path?: string\n\n  public constructor(title: string,\n    multiSelect: boolean,\n    mimeTypeFilter: string[],\n    modal: boolean,\n    type: FilePickerType,\n    directoriesAllowed: boolean,\n    path?: string) {\n    this.title = title\n    this.multiSelect = multiSelect\n    this.mimeTypeFiler = mimeTypeFilter\n    this.modal = modal\n    this.type = type\n    this.directoriesAllowed = directoriesAllowed\n    this.path = path\n  }\n\n  public pick(): Promise<string> {\n    return new Promise((res, rej) => {\n      OC.dialogs.filepicker(\n        this.title,\n        res,\n        this.multiSelect,\n        this.mimeTypeFiler,\n        this.modal,\n        this.type,\n        this.path,\n        {\n          allowDirectoryChooser: this.directoriesAllowed\n        }\n      )\n    })\n  }\n\n  public static download(path: string): Promise<any> {\n    return new Promise<any>(resolve => {\n      OC['Files'].getClient().getFileContents(path).then((code, content) => {\n        resolve(content);\n      });\n    });\n  }\n\n  public static get basePath(): string {\n    return OC['Files'].getClient().getBaseUrl();\n  }\n\n  private static async _getPath(path: string): Promise<string> {\n    const [err] = await to(OC['Files'].getClient().getFileInfo(path));\n\n    if (err) {\n      return path;\n    }\n\n    const p = /^(.*)\\.([^\\.]+)$/;\n    let name = path.replace(p, '$1');\n    const ext = name == path ? '' : path.replace(p, '$2');\n\n    const p2 = /^(.*)-([0-9]+)$/;\n    let idx: string | number = name.replace(p2, '$2');\n    if (idx == name) {\n      idx = 1;\n    }\n    else {\n      idx = parseInt(idx) + 1;\n    }\n    name = `${name.replace(p2, '$1')}-${idx.toString()}`;\n\n    return FilePicker._getPath(name + (ext == '' ? '' : '.' + ext));\n  }\n\n  public static async upload(path: string, content: Blob): Promise<string> {\n    const _path = await FilePicker._getPath(path);\n    await OC['Files'].getClient().putFileContents(_path, content);\n    return _path;\n  }\n}\n\nexport class FilePickerBuilder {\n  private title: string\n  private multiSelect: boolean = false\n  private mimeTypeFiler: string[] = []\n  private modal: boolean = true\n  private type: FilePickerType = FilePickerType.Choose\n  private directoriesAllowed: boolean = false\n  private path?: string\n\n  public constructor(title: string) {\n    this.title = title\n  }\n\n  public setMultiSelect(ms: boolean): FilePickerBuilder {\n    this.multiSelect = ms\n    return this\n  }\n\n  public addMimeTypeFilter(filter: string): FilePickerBuilder {\n    this.mimeTypeFiler.push(filter)\n    return this\n  }\n\n  public setMimeTypeFilter(filter: string[]): FilePickerBuilder {\n    this.mimeTypeFiler = filter\n    return this\n  }\n\n  public setModal(modal: boolean): FilePickerBuilder {\n    this.modal = modal\n    return this\n  }\n\n  public setType(type: FilePickerType): FilePickerBuilder {\n    this.type = type\n    return this\n  }\n\n  public allowDirectories(allow: boolean = true): FilePickerBuilder {\n    this.directoriesAllowed = allow\n    return this\n  }\n\n  public startAt(path: string): FilePickerBuilder {\n    this.path = path\n    return this\n  }\n\n  public build(): FilePicker {\n    return new FilePicker(\n      this.title,\n      this.multiSelect,\n      this.mimeTypeFiler,\n      this.modal,\n      this.type,\n      this.directoriesAllowed,\n      this.path\n    )\n  }\n\n}\n\nexport function getFilePickerBuilder(title: string): FilePickerBuilder {\n  return new FilePickerBuilder(title)\n}\n","import { BaseClass } from '../base';\nimport {Injectable} from '@angular/core';\nimport {NgInject} from '../decorators';\nimport {Platform} from '@ionic/angular';\n\n@Injectable()\nexport class Layout extends BaseClass {\n  @NgInject(Platform) private _platform: Platform;\n\n  public get isMobile() {\n    return (this._platform.is('desktop') && this._platform.width() < 1024) || this._platform.is('mobile');\n  }\n}\n","import {EventEmitter, ErrorHandler} from '@angular/core';\nimport {environment} from '../../environments/environment';\nimport {LogLevel} from '../models';\n\nexport type LogEvent = {\n  stack: Array<string>;\n  args: any;\n  level: LogLevel;\n}\n\nexport class Logger implements ErrorHandler {\n  public level: LogLevel = typeof(environment.logLevel) == 'undefined' ? LogLevel.ERROR : environment.logLevel;\n  public includeStack: boolean = environment.logStack;\n\n  public logged: EventEmitter<LogEvent> = new EventEmitter<LogEvent>();\n\n  // private _sysLog: LoggingService;\n\n  private _log(level: LogLevel, ...args: any[]) {\n    if (level >= this.level) {\n      let stack = [];\n      if (environment.production) {\n\n      }\n      else {\n        if (this.includeStack) {\n          stack = Error().stack.split(\"\\n\");\n          console.trace();\n          console.log(stack);\n        }\n\n        console.log.apply(console, args[0]);\n        this.logged.emit({stack: stack, args: args, level: level});\n      }\n    }\n  }\n\n  public handleError(error: any) {\n    console.log('error is', error);\n    this._log(LogLevel.ERROR, [error.message, (error.stack || '').split(\"\\n\")]);\n  }\n\n  public debug(...args: any[]) {\n    this._log(LogLevel.DEBUG, args);\n  }\n\n  public info(...args: any) {\n    this._log(LogLevel.INFO, args);\n  }\n\n  public error(...args: any[]) {\n    this._log(LogLevel.ERROR, args);\n  }\n}\n\nexport class LoggingInstance {\n  public static logger = new Logger();\n}\n","import {EventEmitter, Injectable} from '@angular/core';\nimport {combineLatest, from, Observable, ReplaySubject} from 'rxjs';\nimport {filter, map, mergeMap, shareReplay, take, tap} from 'rxjs/operators';\nimport {BaseClass} from '../base';\nimport {NgInject} from '../decorators';\nimport {Account, COMBINED_ACCOUNT_ID, DisplayContact, Folder, Message} from '../models';\nimport {Api} from './api';\nimport {Store} from './store';\nimport { Platform } from '@ionic/angular';\nimport {Plugins, LocalNotification} from '@capacitor/core';\nimport {Utils} from './utils';\nimport { Router } from '@angular/router';\n\nconst {LocalNotifications} = Plugins;\n\n@Injectable()\nexport class Mails extends BaseClass {\n  @NgInject(Api) private _api: Api;\n  @NgInject(Store) private _store: Store;\n  @NgInject(Platform) private _platform: Platform;\n  @NgInject(Router) private _router: Router;\n\n  public refresh$ = new EventEmitter();\n  public refreshed$ = new EventEmitter();\n  public newEmails$ = new EventEmitter();\n  public folderChanged$: EventEmitter<Folder> = new EventEmitter<Folder>();\n  public currentAccount$: ReplaySubject<Account> = new ReplaySubject<Account>(1);\n\n  private _accounts: Array<Account> = null;\n  private _subscription: Observable<Array<Account>> = null;\n\n  constructor() {\n    super();\n    this.setCurrentAccount(null);\n\n    LocalNotifications.addListener('localNotificationActionPerformed', async n => {\n      this._messageClicked(n.notification.extra);\n      const pending = await LocalNotifications.getPending();\n      if (pending.notifications.length > 0) {\n        LocalNotifications.cancel(pending);\n      }\n    });\n  }\n\n  public get accounts$(): Observable<Array<Account>> {\n    if (this._subscription) {\n      return this._subscription;\n    }\n\n    this._subscription = this._api.ready$.pipe(\n      filter(result => result), \n      mergeMap(() => from(this._api.getAccounts())),\n      tap(accounts => this._accounts = accounts),\n      shareReplay(),\n    );\n\n    return this._subscription;\n  }\n\n  public accountById(id: string): Account {\n    if (!Array.isArray(this._accounts)) {\n      return null;\n    }\n\n    return this._accounts.find(a => a.AccountID == id) || null;\n  }\n\n  private _retrieveFolderById(id: string, folders: Array<Folder>): Folder {\n    if (folders.length == 0) {\n      return null;\n    }\n    const folder = folders.find(f => f.Id.toLowerCase() == id.toLowerCase());\n    if (folder) {\n      return folder;\n    }\n\n    const subFolders = folders.map(f => f.SubFolders).reduce((acc, v) => acc.concat(v), []);\n    return this._retrieveFolderById(id, subFolders);\n  }\n\n  public folderById$(account: Account, id: string): Observable<Folder> {\n    return account.Folders$.pipe(\n      take(1),\n      map(folders => this._retrieveFolderById(id, folders))\n    );\n  }\n\n  public async setCurrentAccount(email: string) {\n    if (email != null) {\n      await this._store.setCurrentAccount(email);\n    }\n\n    return new Promise(resolve => {\n      combineLatest(from(this._store.getCurrentAccount()), this.accounts$).pipe(\n        map(([email, accounts]) => accounts.length > 0 ? (accounts.find(a => a.Email == email || (email == COMBINED_ACCOUNT_ID && a.AccountID == email)) || accounts[0]) : null),\n        take(1),\n        tap(account => this.currentAccount$.next(account)),\n        tap(() => resolve()),\n      ).toPromise();\n    });\n  }\n\n  public validate(addresses: Array<DisplayContact>): boolean {\n    if (!Array.isArray(addresses)) {\n      return true;\n    }\n    return addresses.reduce((acc, v) => !acc ? acc : <any>v.Email.match(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i), true);\n  }\n\n  private _messageClicked(m: Message) {\n    this._router.navigateByUrl(`readmail:${m.Uid}`);\n  }\n\n  private _getFrom(m: Message): string {\n    const from = m.From && Array.isArray(m.From.Collection) && m.From.Collection.length > 0 ? m.From.Collection[0] : null;\n    if (!from) {\n      return 'New message';\n    }\n\n    return from.DisplayName || from.Email;\n  }\n\n  private async _doNotify(messages: Array<Message>) {\n    const callback = this._messageClicked.bind(this);\n    if (this._platform.is('desktop')) {\n      if (window.Notification.permission != 'granted') {\n        const perm = await window.Notification.requestPermission();\n        if (perm != 'granted') {\n          return ;\n        }\n      }\n      const notifications: Array<Notification> = [];\n      messages.forEach(m => {\n        const x = new window.Notification(this._getFrom(m), {body: m.Subject});\n        x.onclick = () => {\n          callback(m);\n          notifications.forEach(n => n.close());\n        };\n        notifications.push(x);\n      });\n\n      return ;\n    }\n\n    const perm = await LocalNotifications.requestPermission();\n    if (!perm.granted) {\n      return ;\n    }\n\n    await LocalNotifications.schedule({\n      notifications: messages.map(m => <LocalNotification>{\n        title: this._getFrom(m),\n        body: m.Subject,\n        id: parseInt(m.Uid),\n        extra: m,\n      }),\n    });\n  }\n\n  public showNotifications(lastMsg: Message, messages: Array<Message>) {\n    const ts = (lastMsg && lastMsg.TimeStampInUTC) || 1;\n    if (messages[0].TimeStampInUTC <= ts) {\n      return ;\n    }\n\n    this._doNotify(messages.filter(m => m.TimeStampInUTC > ts));\n  }\n\n  public messageInComposedFolder(msg: Message, folder: Folder): boolean {\n    if (!Utils.isCombinedFolder(folder.Id)) {\n      return msg.Folder == folder.Id;\n    }\n\n    if (!this._accounts) {\n      return false;\n    }\n\n    const a = this._accounts.find(a => a.AccountID == msg.AccountID);\n\n    if (!a) {\n      return false;\n    }\n\n    const f = a.FoldersOrder.find(f => f.Id == msg.Folder);\n    if (!f) {\n      return false;\n    }\n\n    return f.Type == folder.Type;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {ActivatedRoute, NavigationEnd, Router} from '@angular/router';\nimport {ReplaySubject} from 'rxjs';\nimport {distinctUntilChanged, filter, map} from 'rxjs/operators';\nimport {BaseClass} from '../base';\nimport {NgInject} from '../decorators';\n\n@Injectable()\nexport class Navigation extends BaseClass {\n  @NgInject(Router) private _router: Router;\n  @NgInject(ActivatedRoute) private _route: ActivatedRoute;\n\n  public routeData$: ReplaySubject<Object> = new ReplaySubject<Object>(1);\n  public routeParams$: ReplaySubject<Object> = new ReplaySubject<Object>(1);\n\n  constructor() {\n    super();\n    this._router.events.pipe(filter(ev => ev instanceof NavigationEnd)).subscribe(() => {\n      this.routeData$.next(this._route.root.firstChild.snapshot.data);\n      this.routeParams$.next(this._route.firstChild.snapshot.params);\n    });\n  }\n\n  public connectToRoute(key: string) {\n    return this.routeParams$.pipe(\n      filter(p => Object.keys(p).indexOf(key) != -1),\n      map(p => p[key]),\n      distinctUntilChanged(), \n    );\n\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {BaseClass} from '../base';\nimport {FilePicker} from './filepicker';\nimport {NgInject} from '../decorators';\nimport {Store} from './store';\n\nconst PATH_KEY = 'nextcloud-last-path';\n\n@Injectable()\nexport class Nextcloud extends BaseClass {\n  @NgInject(Store) private _store: Store;\n\n  public isNextcloud(): boolean {\n    return window.top && window.top['OC'];\n  }\n\n  private async _processLastPath(x: Array<string>) {\n    if (x.length > 0) {\n      await this._store.save(PATH_KEY, x[0].replace(/^(.*)\\/[^\\/]+$/g, '$1'))\n    }\n  }\n\n  public async pickFile(): Promise<Array<string>> {\n    const lastPath = await this._store.load(PATH_KEY, undefined, '/') as string;\n    const picker = new FilePicker('Choose a file', true, [], true, 1, false, lastPath);\n    const result: Array<string> = await picker.pick() as any;\n    await this._processLastPath(result);\n    return result;\n  }\n\n  public async pickFolder(): Promise<string> {\n    const lastPath = await this._store.load(PATH_KEY, undefined, '/') as string;\n    const picker = new FilePicker('Choose a folder', false, ['*.zzz'], true, 1, true, lastPath);\n    const result: string = await picker.pick();\n    await this._processLastPath([result]);\n    return result;\n  }\n\n  public async download(path: string): Promise<ArrayBuffer> {\n    const content = await fetch(`${FilePicker.basePath}/${path}`);\n    const blob = await content.blob();\n    const bin = await blob.arrayBuffer();\n    return bin;\n    // return new File([content], path.replace(/^.*\\/([^\\/]+)$/, '$1'));\n  }\n\n  public async upload(path: string, content: Blob): Promise<string> {\n    return FilePicker.upload(path, content);\n  }\n}\n","import {RouteReuseStrategy, ActivatedRouteSnapshot, DetachedRouteHandle} from '@angular/router';\n\nexport class DefaultRouteReuseStrategy implements RouteReuseStrategy {\n  shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n  store(route: ActivatedRouteSnapshot, detachedTree: DetachedRouteHandle): void {}\n  shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n  retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle|null {\n    return null;\n  }\n  shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\n    return true;\n  }\n}\n","import {Injectable, EventEmitter} from '@angular/core';\nimport {BaseClass} from '../base';\nimport {NgInject} from '../decorators';\nimport {Store} from './store';\nimport {ServerSetting, MessageComposeType, AppSettings, LabelValue, AppSetting, UserSetting} from '../models';\n\nconst SERVER_KEY = 'server';\nconst PAGE_SIZE_KEY = 'page-size';\nconst MESSAGE_TYPE_KEY = 'message-type';\nconst CHECK_INTERVAL = 'check-emails-interval';\n\nconst EMAIL_INTERVAL_OPTIONS: Array<LabelValue> = [\n  {label: '1 minute', value: 60 * 1000}, \n  {label: '5 minutes', value: 60 * 1000 * 5},\n  {label: '10 minutes', value: 60 * 1000 * 10},\n  {label: '15 minutes', value: 60 * 1000 * 15},\n  {label: 'Never', value: 0},\n];\n\nconst MESSAGE_TYPE_OPTIONS: Array<LabelValue> = [\n  {label: 'Html', value: 'HTML'},\n  {label: 'Plain text', value: 'TEXT'},\n];\n\nconst PAGE_SIZE: Array<LabelValue> = [\n  {label: '20 messages', value: 20},\n  {label: '50 messages', value: 50},\n  {label: '100 messages', value: 100},\n]\n\n@Injectable()\nexport class Settings extends BaseClass {\n  @NgInject(Store) private _store: Store;\n  public serverSet$ = new EventEmitter();\n\n  public getServer(): Promise<ServerSetting> {\n    return this._store.load(SERVER_KEY, ServerSetting) as Promise<ServerSetting>;\n  }\n\n  public async setServer(servers: ServerSetting) {\n    servers.users.forEach(u => u.pass = null);\n    const result = await this._store.save(SERVER_KEY, servers);\n    this.serverSet$.emit();\n    return result;\n  }\n\n  public async getPageSize(): Promise<number> {\n    return this._store.load(PAGE_SIZE_KEY, undefined, 20) as Promise<number>;\n  }\n\n  public setPageSize(s: number) {\n    return this._store.save(PAGE_SIZE_KEY, s);\n  }\n\n  public getMessageType(): Promise<MessageComposeType> {\n    return this._store.load(MESSAGE_TYPE_KEY, undefined, 'HTML') as Promise<MessageComposeType>;\n  }\n\n  public setMessageType(type: MessageComposeType) {\n    return this._store.save(MESSAGE_TYPE_KEY, type);\n  }\n\n  public getCheckoutEmailInterval(): Promise<number> {\n    return this._store.load(CHECK_INTERVAL, undefined, 60 * 1000 * 15) as Promise<number>;\n  }\n\n  public setCheckoutEmailInterval(value: number) {\n    return this._store.save(CHECK_INTERVAL, value);\n  }\n\n  private _toAppSetting(x: number | string, options: Array<LabelValue>): AppSetting {\n    const result = new AppSetting();\n    result.model = options.find(o => o.value == x);\n    result.options = options;\n    return result;\n  }\n\n  public get appSettings(): Promise<AppSettings> {\n    return new Promise(resolve => {\n      const model = new AppSettings();\n      const p = [];\n      p.push(this.getCheckoutEmailInterval().then(x => model.checkEmailInterval = this._toAppSetting(x, EMAIL_INTERVAL_OPTIONS)));\n      p.push(this.getMessageType().then(x => model.composeType = this._toAppSetting(x, MESSAGE_TYPE_OPTIONS)));\n      p.push(this.getPageSize().then(x => model.pageSize = this._toAppSetting(x, PAGE_SIZE)));\n      p.push(this.getServer().then(x => model.server = x));\n\n      Promise.all(p).then(() => resolve(model));\n    });\n  }\n\n  public async saveSettings(settings: AppSettings): Promise<void> {\n    const p = [];\n    p.push(this.setServer(settings.server));\n    p.push(this.setCheckoutEmailInterval(settings.checkEmailInterval.model.value as number));\n    p.push(this.setMessageType(settings.composeType.model.value as MessageComposeType));\n    p.push(this.setPageSize(settings.pageSize.model.value as number));\n    await Promise.all(p);\n  }\n\n  public async needAuthenticating(server: ServerSetting): Promise<Array<UserSetting>>{\n    if (!server) {\n      return [];\n    }\n\n    const current = await this.getServer();\n\n    if (!current || current.url != server.url) {\n      return server.users;\n    }\n\n    return server.users.filter(u => !u.token || u.pass);\n  }\n}\n","import { Injectable, Type } from '@angular/core';\nimport { Plugins } from '@capacitor/core';\nimport { BaseClass } from '../base';\nimport {ModelFactory, ObjectType} from '../models';\n\nconst { Storage } = Plugins;\n\nconst PREFIX = 'afterlogic-client-';\nconst CURRENT_ACCOUNT = 'current-account'\n\n@Injectable()\nexport class Store extends BaseClass {\n  public async load<T>(key: string, type?: Type<T>, defValue?: T | Array<T>): Promise<ObjectType<T>> {\n    const result = await Storage.get({key: PREFIX + key});\n    if (!result.value) {\n      return defValue ? defValue : null;\n    }\n    return ModelFactory.instance(JSON.parse(result.value).data, type);\n  }\n\n  public async save(key: string, data: any): Promise<void> {\n    Storage.set({key: PREFIX + key, value: JSON.stringify({data: data, date: new Date()})});\n  }\n\n  public async getCurrentAccount(): Promise<string> {\n    return this.load(CURRENT_ACCOUNT) as Promise<string>;\n  }\n\n  public async setCurrentAccount(email: string) {\n    return this.save(CURRENT_ACCOUNT, email);\n  }\n}\n","import {MenuItem} from 'primeng/api';\nimport {Collection, COMBINED_ACCOUNT_ID, ComposedResult, Contact, Folder, FolderType, MessageCompose, SearchModel, ServerSetting, UserSetting} from '../models';\n\nexport class Utils {\n  public static avatarColor(contact: Contact): string {\n    const name = contact.DisplayName || contact.Email;\n    let hash = 0;\n    for (var i = 0; i < name.length; i++) {\n      hash = name.charCodeAt(i) + ((hash << 5) - hash);\n    }\n\n    let h = hash % 360;\n    return 'hsl('+h+', 50%, 50%)';\n  }\n\n  public static extractCollection<T>(c: Collection<T>): Array<T> {\n    if (!c || !Array.isArray(c.Collection)) {\n      return [];\n    }\n\n    return c.Collection;\n  }\n\n  public static userByEmail(users: Array<UserSetting>, email: string): UserSetting {\n    return users.find(u => u.email == email);\n  }\n\n  private static _searchFolder(folders: Array<Folder>, predicate: (f: Folder) => boolean): Folder {\n    if (!Array.isArray(folders) || folders.length == 0) {\n      return null;\n    }\n    const result = folders.find(predicate);\n\n    return result || Utils._searchFolder(folders.map(f => f.SubFolders).reduce((acc, v) => acc.concat(v), []), predicate);\n\n  }\n\n  public static folderByType(type: FolderType, folders: Array<Folder>): Folder {\n    return Utils._searchFolder(folders, (f => f.Type == type));\n  }\n\n  public static setFolderTypes(data: Array<Object>, folders: Array<Folder>) {\n    if (data.length == 0) {\n      return ;\n    }\n\n    data.forEach(_f => {\n      const f = Utils.folderById(folders, _f['FullName']);\n      if (!f) {\n        return ;\n      }\n\n      f.Type = _f['Type'];\n    });\n\n    this.setFolderTypes(\n      data\n        .filter(d => !!d['SubFolders'] && Array.isArray(d['SubFolders']['@Collection']))\n        .map(d => d['SubFolders']['@Collection'])\n        .reduce((acc, v) => acc.concat(v), []),\n      folders\n    );\n  }\n\n  public static folderById(folders: Array<Folder>, id: string): Folder {\n    return Utils._searchFolder(folders, (f => f.Id == id));\n  }\n\n  public static isDraftReply(msg: MessageCompose): boolean {\n    return !!msg.DraftUid && msg.DraftInfo && Array.isArray(msg.DraftInfo) && msg.DraftInfo.length >= 3;\n  }\n\n  public static emptySearch(model: SearchModel): boolean {\n    return !model.from && !model.to && !model.text && !model.till\n      && !model.since && !model.simple && !model.subject && !model.attachments;\n  }\n\n  public static buildUserMenu(server: ServerSetting, callback: Function): Array<MenuItem> {\n    if (!server || !Array.isArray(server.users)) {\n      return [];\n    }\n    const f = (ev: any) => callback(ev.item);\n    const result = server.users.map(u => <MenuItem>{\n      label: u.email, icon: \"fa fa-user\", command: f, id: u.email,\n    });\n    if (server.users.length > 1) {\n      result.push({label: 'Combined view', icon: 'fa fa-users', command: f, id: COMBINED_ACCOUNT_ID});\n    }\n    result.push({label: 'Settings', icon: 'fa fa-cog', command: f, id: 'settings'});\n\n    return result;\n  }\n\n  public static isComposedResult<T>(x: T): boolean {\n    return Array.isArray(x) && x.length > 0 && x[0] instanceof ComposedResult;\n  }\n\n  public static isCombinedFolder(id: string): boolean {\n    if (!id.match(/^[0-9]+$/)) {\n      return false;\n    }\n    return [FolderType.Sent, FolderType.Spam, FolderType.Inbox, FolderType.Trash, FolderType.Drafts].indexOf(parseInt(id)) != -1;\n  }\n\n  public static foldersFlatList(folders: Array<Folder>, result: Array<Folder>){\n    result.push.apply(result, folders);\n    folders.forEach(f => Utils.foldersFlatList(f.SubFolders, result));\n  }\n\n  public static foldersDiff(f1: string, f2: string) {\n    if (f1.toLowerCase() == f2.toLowerCase()) {\n      return false;\n    }\n\n    if (f1.toLowerCase() == \"inbox\" && f2.toLowerCase() == FolderType.Inbox.toString()) {\n      return false;\n    }\n\n    return f1.toLowerCase() != f2.toLowerCase();\n  }\n}\n"]}